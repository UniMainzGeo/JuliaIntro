[{"url":"cheatsheets/","title":"Cheatsheets","tags":["welcome"],"text":"Cheatsheets Getting Started with Julia - live . Fastrack to Julia  cheatsheet. MATLAB-Julia-Python comparative cheatsheet  by  QuantEcon group Plots.jl cheatsheet"},{"url":"clips/","title":"clips","tags":[],"text":"Submit A Short Clip Did you have a favorite (or many favorite) 1-2 minute clips from one of the lectures in this course? Consider sending them to us and that way we can share them on Twitter so more people can get exposure to computational thinking. Use  this form  to upload clips."},{"url":".","title":"index","tags":["homepage"],"text":""},{"url":"installation/","title":"Software installation","tags":["welcome"],"text":"First-time setup: Install Julia & Pluto Text and pictures version: Step 1: Install Julia  1.9.0 Go to  https://julialang.org/downloads  and download the current stable release, Julia  1.9.0 , using the correct version for your operating system (Linux x86, Mac, Windows, etc). Step 2: Run Julia After installing,  make sure that you can run Julia . On some systems, this means searching for the “Julia  1.9.0 ” program installed on your computer; in others, it means running the command  julia  in a terminal. Make sure that you can execute  1 + 1 : Make sure that you are able to launch Julia and calculate  1+1  before proceeding! Step 3: Install  Pluto Next we will install the  Pluto , the notebook environment that we will be using during the course. Pluto is a Julia  programming environment  designed for interactivity and quick experiments. Open the  Julia REPL . This is the command-line interface to Julia, similar to the previous screenshot. Here you type  Julia commands , and when you press ENTER, it runs, and you see the result. To install Pluto, we want to run a  package manager command . To switch from  Julia  mode to  Pkg  mode, type  ]  (closing square bracket) at the  julia>  prompt: \njulia> ]\n\n(@v 1.9 ) pkg>\n The line turns blue and the prompt changes to  pkg> , telling you that you are now in  package manager mode . This mode allows you to do operations on  packages  (also called libraries). To install Pluto, run the following (case sensitive) command to  add  (install) the package to your system by downloading it from the internet.\nYou should only need to do this  once  for each installation of Julia: \n(@v 1.9 ) pkg> add Pluto\n This might take a couple of minutes, so you can go get yourself a cup of tea! You can now close the terminal. Step 4: Use a modern browser: Mozilla Firefox or Google Chrome We need a modern browser to view Pluto notebooks with. Firefox and Chrome work best. Second time:  Running Pluto & opening a notebook Repeat the following steps whenever you want to work on a project or homework assignment. Step 1: Start Pluto Start the Julia REPL, like you did during the setup. In the REPL, type: julia> using Pluto\n\njulia> Pluto.run()\n The terminal tells us to go to  http://localhost:1234/  (or a similar URL). Let’s open Firefox or Chrome and type that into the address bar. If you’re curious about what a  Pluto notebook  looks like, have a look at the  Featured Notebooks . These notebooks are useful for learning some basics of Julia programming. If you want to hear the story behind Pluto, have a look a the  JuliaCon presentation . If nothing happens in the browser the first time, close Julia and try again. And please let us know! Step 2a: Opening a notebook from the web This is the main menu - here you can create new notebooks, or open existing ones. Our homework assignments will always be based on a  template notebook , available in this GitHub repository. To start from a template notebook on the web, you can  paste the URL into the blue box  and press ENTER. For example, homework 0 is available  here . Go to this page, and on the top right, click on the button that says “Edit or run this notebook”. From these instructions, copy the notebook link, and paste it into the box. Press ENTER, and select OK in the confirmation box. The first thing we will want to do is to save the notebook somewhere on our own computer; see below. Step 2b: Opening an existing notebook file When you launch Pluto for the second time, your recent notebooks will appear in the main menu. You can click on them to continue where you left off. If you want to run a local notebook file that you have not opened before, then you need to enter its  full path  into the blue box in the main menu. More on finding full paths in step 3. Step 3: Saving a notebook We first need a folder to save our homework in. Open your file explorer and create one. Next, we need to know the  absolute path  of that folder. Here’s how you do that in  Windows ,  MacOS  and  Ubuntu . For example, you might have: C:\\Users\\fons\\Documents\\18S191_assignments\\  on Windows /Users/fons/Documents/18S191_assignments/  on MacOS /home/fons/Documents/18S191_assignments/  on Ubuntu Now that we know the absolute path, go back to your Pluto notebook, and at the top of the page, click on  “Save notebook…” . This is where you type the  new path+filename for your notebook : Click  Choose . Step 4: Sharing a notebook After working on your notebook (your code is autosaved when you run it), you will find your notebook file in the folder we created in step 3. This the file that you can share with others, or submit as your homework assignment to Canvas. \nconst run = f => f();\nrun(async () => {\nconst versions = await (await fetch(`https://julialang-s3.julialang.org/bin/versions.json`)).json()\nconst version_names = Object.keys(versions).sort().reverse()\nconst stable = version_names.find(v => versions[v].stable)\nconsole.log({stable})\nconst pkg_stable = /\\d+\\.\\d+/.exec(stable)[0]\ndocument.querySelectorAll(\"auto-julia-version\").forEach(el => {\n    console.log(el)\n    el.innerText = el.getAttribute(\"short\") == null ? stable : pkg_stable\n})\n});"},{"url":"search/","title":"Search results","tags":[],"text":"window.init_search(); Search Results \nLoading..."},{"url":"sidebar data/","title":"sidebar data","tags":[],"text":"Dict \"main\" \"Welcome\" collections \"welcome\" .pages, \"Module 1 GeophysicalModelGenerator.jl\" collections \"module1\" .pages, \"Module 2 Social Science & Data Science\" collections \"module2\" .pages, \"Module 3 Climate Science\" collections \"module3\" .pages, , "},{"url":"structure/","title":"structure","tags":[],"text":""},{"url":"test/","title":"Introduction","tags":["welcome"],"text":" A Pluto.jl notebook v0.19.25 frontmatter title \"Introduction\" tags \"welcome\" license \"MIT\" description \"This is the first step towards programming in Julia\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils begin using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using PlutoUI using PlutoTeachingTools using Printf using HypertextLiteral end md\" Introduction to Julia by AG Geophysik at the University of Mainz\" md\" DISCLAIMER This webpage is a work in progress and if you got recommendations, feel free to email us mailto paellig uni mainz.de \\ Furthermore, this Introduction was inspired by the MIT Computational Thinking class and Marcel Thielmanns's course on the Geophysical Model Generator Uni Bayreuth\" md\" 1. Introduction\" md\"The Julia scientific programming language is fast, completely open source and comes with a nice package manager. It works on essentially all systems and has an extremely active user base. Programming in Julia is fairly easy and comparable to programming in MATLAB. If you have experience in MATLAB programming, transitioning to Julia should be relatively smooth.\" md\"In this course you will learn how to use Julia from simple coding exercises to get familiar with the structure of Julia to interactive geodynamical programming using LaMeM and other packages developed by the AG Geophysik at the University of Mainz\" TableOfContents title \"Introduction to Julia by AG Geophysik at the University of Mainz\", indent true, depth 4, aside true md\" 1.1 Installation of Julia\" md\" Step 1 Download Julia Go to https julialang.org downloads https julialang.org downloads and download the current stable release, using the correct version for your operating system Linux x86, Mac, Windows, etc . Additionally, we rely on Microsoft Visual Studio Code https code.visualstudio.com as a debugger and visualisation tool. After downloading both Julia and VS Code, make sure to also install the Julia Language extension within VS Code. See here https code.visualstudio.com docs languages julia for help when setting it up. Step 2 Run Julia After installing, make sure that you can run Julia . On some systems, this means searching for the program installed on your computer in others, it means running the command `julia` in a terminal. Make sure that you can execute `1 1`\" md\" Basic operations Julia is a scientific programming language, which means that it is designed to be used for mathematical operations. Try out the following operations \" 1 1 try for yourself 3 4 3^2 md\"Powers are performed before divisions and multiplications, which are done before subtraction and addition\" 2 4 5^2 md\"In VS Code you can also use the 'command line editiing' tool that allows you to go up and down with the keyboard arrows. Which can safe quite some time for long calculations, such as above\" 2 4 5^2 2 md\" In Julia use the equal sign to assign values to variables. This should be known from other programming languages.\" x 1 1 md\"To find out what the type of a certain variable is, type \" typeof x md\"What type will you get for x if it has decimals?\" a 2.1 typeof a begin c 10 b c 100 end hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text if b 1000 hint md\"CONGRATS\" else print \"Try again\" end "},{"url":"homework/hw0/","title":"hw0","tags":[],"text":" A Pluto.jl notebook v0.19.25 using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end using Compose using PlutoUI md\" Homework 0, version 4\" md\"\"\" Homework 0 Getting up and running First of all, welcome to the course We are excited to teach you about real world applications of scientific computing, using the same tools that we work with ourselves. This first homework is a little mic check. We'd like all MIT students to submit this zeroth homework assignment . It will not affect your grade, but it will help us get everything running smoothly when the course starts. If you're stuck or don't have much time, just fill in your name and ID and submit 🙂 \"\"\" md\"\"\" Homework Logistics Homeworks are in the form of Pluto notebooks https plutojl.org . Your must complete them and submit them on Canvas if you are an MIT student. . If you are not an MIT student, we encourage you to join Discord https discord.gg Z5qnVf8 and find someone to cross grade. HW0 is for you to get your system set up correctly and to test our grading software. You must submit it but it will not count towards your grade. \"\"\" md\" Requirements of this HW0 Install Julia and set up Pluto Do the required Exercise 0. That’s it, but if you like you can do the OPTIONAL exercises that follow.\" md\"\"\" Installation Before being able to run this notebook successfully locally, you will need to set up Julia and Pluto. Spring21 installation One you have Julia and Pluto installed, you can click the button at the top right of this page and follow the instructions to edit this notebook locally and submit. \"\"\" md\" Required Exercise 0 Making a basic function Computing the square of a number is easy you just multiply it with itself. Algorithm Given x Output x^2 1. Multiply `x` by `x`\" function basic square x return 1 this is wrong, write your code here end let result basic square 5 if result isa Number md\"\"\" warning \"Not a number\" `basic square` did not return a number. Did you forget to write `return`? \"\"\" elseif abs result 5 5 0.01 md\"\"\" correct Well done \"\"\" else md\"\"\" warning \"Incorrect\" Keep working on it \"\"\" end end md\"That's all that's required for this week. Please submit the notebook. We just wanted to make sure that you're up and running. If you want to explore further, we have included a few optional exercises below.\" md\" Optional Exercise 1 Square root by Newton's method Computing the square of a number is easy you already did it. But how does one compute the square root of a number? Algorithm Given x Output \\sqrt x 1. Take a guess `a` 1. Divide `x` by `a` 1. Set a the average of `x a` and `a`. The square root must be between these two numbers. Why? 1. Repeat until `x a` is roughly equal to `a`. Return `a` as the square root. In general, you will never get to the point where `x a` is exactly equal to `a`. So if our algorithm keeps going until `x a a`, then it will get stuck. So instead, the algorithm takes a parameter `error margin`, which is used to decide when `x a` and `a` are close enough to halt. \" md\" Exercise 1.1 Step 3 in the algorithm sets the new guess to be the average of `x a` and the old guess `a`. This is because the square root must be between the numbers `x a` and `a`. Why? \" ex 1 1 md\"\"\" your answer here \"\"\" you might need to wait until all other cells in this notebook have completed running. scroll down the page to see what's up if isdefined ex 1 1 md\"\"\"Do not change the name of the variable write you answer as `ex 1 1 \"...\"`\"\"\" end md\" Exercise 1.2 Write a function newton sqrt x which implements the above algorithm.\" function newton sqrt x, error margin 0.01, a x 2 a x 2 is the default value of `a` return x this is wrong, write your code here end newton sqrt 2 let result newton sqrt 2, 0.01 if result isa Number md\"\"\" warning \"Not a number\" `newton sqrt` did not return a number. Did you forget to write `return`? \"\"\" elseif abs result sqrt 2 0.01 md\"\"\" correct Well done \"\"\" else md\"\"\" warning \"Incorrect\" Keep working on it \"\"\" end end md\"\"\" hint `abs r s ` is the distance between `r` and `s` \"\"\" md\"\"\" hint If you're stuck, feel free to cheat, this is homework 0 after all 🙃 Julia has a function called `sqrt` \"\"\" md\" Optional Exercise 2 Sierpinksi's triangle Sierpinski's triangle is defined recursively Sierpinski's triangle of complexity N is a figure in the form of a triangle which is made of 3 triangular figures which are themselves Sierpinski's triangles of complexity N 1. A Sierpinski's triangle of complexity 0 is a simple solid equilateral triangle \" md\"To draw Sierpinski's triangle, we are going to use an external package, Compose.jl https giovineitalia.github.io Compose.jl latest tutorial . Let's import it A package contains a coherent set of functionality that you can often use a black box according to its specification. There are lots of Julia packages https juliahub.com ui Home . \" md\"Just like the definition above, our `sierpinksi` function is recursive it calls itself.\" complexity 3 if complexity 3 md\"\"\" Try changing the value of `complexity` to `5` in the cell above. Hit `Shift Enter` to affect the change. \"\"\" else md\"\"\" Great As you can see, all the cells in this notebook are linked together by the variables they define and use. Just like a spreadsheet \"\"\" end md\" Exercise 2.1 As you can see, the total area covered by triangles is lower when the complexity is higher.\" md\"\"\" Can you write a function that computes the area of `sierpinski n ` , as a fraction of the area of `sierpinski 0 `? So ``` area sierpinski 0 1.0 area sierpinski 1 0.?? ... ``` \"\"\" function area sierpinski n return 1.0 end if area sierpinski 0 1.0 && area sierpinski 1 3 4 md\"\"\" correct Well done \"\"\" else md\"\"\" warning \"Incorrect\" Keep working on it \"\"\" end md\" Let's try it out below \" md\"Complexity bind n Slider 0 6, show value true \" md\"\"\" hint Can you write `area sierpinksi n ` as a function of `area sierpinski n 1 `? \"\"\" md\"That's it for now, see you next week \" triangle compose context , polygon 1, 1 , 0, 1 , 1 2, 0 It does not matter which order you define the building blocks functions of the program in. The best way to organize code is the one that promotes understanding. function place in 3 corners t Uses the Compose library to place 3 copies of t in the 3 corners of a triangle. treat this function as a black box, or learn how it works from the Compose documentation here https giovineitalia.github.io Compose.jl latest tutorial Compose is declarative 1 compose context , context 1 4, 0, 1 2, 1 2 , t , context 0, 1 2, 1 2, 1 2 , t , context 1 2, 1 2, 1 2, 1 2 , t end function sierpinski n if n 0 triangle else t sierpinski n 1 recursively construct a smaller sierpinski's triangle place in 3 corners t place it in the 3 corners of a triangle end end sierpinski complexity sierpinski. 0 6 md\"\"\" Sierpinski's triangle of complexity n sierpinski n has area area sierpinski n \"\"\" "},{"url":"homework/hw1/","title":"Images and Arrays","tags":["homework","module1","image","track_julia","track_math","track_climate","track_data","programming","interactive","type","matrix"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 section 2.5 order 2.5 homework number 1 title \"Images and Arrays\" layout \"layout.jlhtml\" tags \"homework\", \"module1\", \"image\", \"track julia\", \"track math\", \"track climate\", \"track data\", \"programming\", \"interactive\", \"type\", \"matrix\" description \"Practice Julia basics by working with arrays of colors. At the end of this homework, you can see all of your filters applied to your webcam image \" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin import ImageMagick using Images using PlutoUI using HypertextLiteral end md\"\"\" Homework 1 images and arrays `18.S191`, Fall 2023 This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. Feel free to ask questions \"\"\" md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" md\"\"\" Exercise 1 Manipulating vectors 1D images A `Vector` is a 1D array. We can think of that as a 1D image. \"\"\" example vector 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.7, 0.0, 0.7, 0.9 md\"\"\" html\" br \" Exercise 1.1 👉 Make a random vector `random vect` of length 10 using the `rand` function. \"\"\" random vect missing replace `missing` with your code begin colored line x Vector hcat Gray. Float64. x ' colored line x Any nothing end colored line example vector colored line random vect md\" Exercise 1.2 👉 Make a function `my sum` using a `for` loop, which computes the total of a vector of numbers.\" function my sum xs your code here return missing end my sum 1,2,3 md\" Exercise 1.3 👉 Use your `my sum` function to write a function `mean`, which computes the mean average of a vector of numbers.\" function mean xs your code here return missing end mean 1, 2, 3 md\"👉 Define `m` to be the mean of `random vect`.\" m missing replace `missing` with your code md\"\"\" Exercise 1.4 👉 Write a function `demean`, which takes a vector `xs` and subtracts the mean from each value in `xs`. Use your `mean` function \"\"\" md\"\"\" Note about mutation There are two ways to think about this exercise, you could modify the original vector, or you can create a new vector . We often prefer the second version, so that the original data is preserved. We generally only use code of the first variant in the most performance sensitive parts of a program, as it requires more care to write and use correctly. Be careful not to get carried away in optimizing code , especially when learning a new language There is a convention among Julians that functions that modify their argument have a ` ` in their name. For example, `sort x ` returns a sorted copy of `x`, while `sort x ` modifies `x` to be sorted. Tips for writing non mutating code 1. Rewriting an existing mutating function to be non mutating can feel like a 'tedious' and 'inefficient' process. Often, instead of trying to rewrite a mutating function, it's best to take a step back and try to think of your problem as constructing something new . Instead of a `for` loop, it might make more sense to use descriptive primitives like broadcasting with the dot syntax https docs.julialang.org en v1 manual functions man vectorized also for math operators https docs.julialang.org en v1 manual mathematical operations man dot operators , and map and filter https www.youtube.com watch?v O HBDZMLrM . 2. If a mutating algorithm makes the most sense for your problem, then you can first use `copy` to create a copy of an array, and then modify that copy. We will cover this topic more in the later exercises \"\"\" function demean xs your code here return missing end test vect let feel free to change your test case here to create 1.0, 1.5, 8.5 this cell is a bit funky to deal with a common pitfall from last year it regenerates the vector if you accidentally wrote a mutating function don't worry about how it works for this exercise demean to create end md\"To verify our function, let's check that the mean of the `demean test vect ` is 0 Due to floating point round off error it may not be exactly 0. \" demeaned test vect demean test vect mean demeaned test vect md\"\"\" Exercise 1.5 👉 Generate a vector of 100 elements. Where the center 20 elements are set to `1`, and all other elements are `0`. \"\"\" function create bar your code here return missing end create bar colored line create bar url \"https user images.githubusercontent.com 6933510 107239146 dcc3fd00 6a28 11eb 8c7b 41aaf6618935.png\" philip filename download url download to a local file. The filename is returned philip load philip filename md\" Hi there Philip \" philip head philip 470 800, 140 410 md\"\"\" Recall from Section 1.1 https computationalthinking.mit.edu Spring21 week1 that in Julia, an image is just a 2D array of color objects \"\"\" typeof philip md\"\"\" Every pixel i.e. element of the 2D array is of the `RGB` type \"\"\" philip pixel philip 100,100 typeof philip pixel md\"\"\" To get the values of its individual color channels, use the `r`, `g` and `b` attributes \"\"\" philip pixel.r, philip pixel.g, philip pixel.b md\"\"\" And to create an `RGB` object yourself \"\"\" RGB 0.1, 0.4, 0.7 md\"\"\" Exercise 2.1 👉 Write a function `get red` that takes a single pixel, and returns the value of its red channel. \"\"\" function get red pixel AbstractRGB your code here return missing end get red RGB 0.8, 0.1, 0.0 md\"\"\" Exercise 2.2 👉 Write a function `get reds` note the extra `s` that accepts a 2D color array called `image`, and returns a 2D array with the red channel value of each pixel. The result should be a 2D array of numbers . Use your function `get red` from the previous exercise. \"\"\" function get reds image AbstractMatrix your code here return missing end get reds philip head md\"\"\" Great By extracting the red channel value of each pixel, we get a 2D array of numbers. We went from an image 2D array of RGB colors to a matrix 2D array of numbers . Exercise 2.3 Let's try to visualize this matrix. Right now, it is displayed in text form, but because the image is quite large, most rows and columns don't fit on the screen. Instead, a better way to visualize it is to view a number matrix as an image . This is easier than you might think We just want to map each number to an `RGB` object, and the result will be a 2D array of `RGB` objects, which Julia will display as an image. First, let's define a function that turns a number into a color . \"\"\" function value as color x return RGB x, 0, 0 end value as color 0.0 , value as color 0.6 , value as color 1.0 md\"\"\" 👉 Use the functions `get reds` and `value as color` to visualize the red channel values of `philip head`. Tip Like in previous exercises, use broadcasting 'dot syntax' to apply a function element wise . Use the ➕ button at the bottom left of this cell to add more cells. \"\"\" md\"\"\" Exercise 2.4 👉 Write four more functions, `get green`, `get greens`, `get blue` and `get blues`, to be the equivalents of `get red` and `get reds`. Use the ➕ button at the bottom left of this cell to add new cells. \"\"\" md\"\"\" Exercise 2.5 👉 Write a function `mean color` that accepts an object called `image`. It should calculate the mean amounts of red, green and blue in the image and return the average color. Be sure to use functions from previous exercises \"\"\" function mean color image your code here return missing end mean color philip md\"\"\" At the end of this homework, you can see all of your filters applied to your webcam image \"\"\" function invert color AbstractRGB your code here return missing end md\"Let's invert some colors \" color black RGB 0.0, 0.0, 0.0 invert color black color red RGB 0.8, 0.1, 0.1 invert color red md\"👉 Can you invert the picture of Philip?\" philip inverted missing replace `missing` with your code md\"\"\" At the end of this homework, you can see all of your filters applied to your webcam image \"\"\" md\"\"\" Exercise 3.2 👉 Look up the documentation on the `floor` function. Use it to write a function `quantize x Number ` that takes in a value x which you can assume is between 0 and 1 and \"quantizes\" it into bins of width 0.1. For example, check that 0.267 gets mapped to 0.2. \"\"\" function quantize x Number your code here return missing end md\"\"\" Intermezzo multiple methods In Julia, we often write multiple methods for the same function. When a function is called, the method is chosen based on the input arguments. Let's look at an example These are two methods to the same function, because they have the same name, but different input types \"\"\" function double x Number return x 2 end function double x Vector return x..., x... end md\"\"\" When we call the function `double`, Julia will decide which method to call based on the given input argument \"\"\" double 24 double 1,2,37 md\"\"\" We call this multiple dispatch , and it is one of Julia's key features. Throughout this course, you will see lots of real world application, and learn to use multiple dispatch to create flexible and readable abstractions \"\"\" md\"\"\" Exercise 3.3 👉 Write the second method of the function `quantize`, i.e. a new version of the function with the same name. This method will accept a color object called `color`, of the type `AbstractRGB`. Here, ` AbstractRGB` is a type annotation . This ensures that this version of the function will be chosen when passing in an object whose type is a subtype of the `AbstractRGB` abstract type. For example, both the `RGB` and `RGBX` types satisfy this. The method you write should return a new `RGB` object, in which each component r , g and b are quantized. Use your previous method for `quantize` \"\"\" function quantize color AbstractRGB your code here return missing end md\"\"\" Exercise 3.4 👉 Write a method `quantize image AbstractMatrix ` that quantizes an image by quantizing each pixel in the image. You may assume that the matrix is a matrix of color objects. \"\"\" function quantize image AbstractMatrix your code here return missing end quantize 0.267 , quantize 0.91 md\"Let's apply your method \" quantize philip md\"\"\" Exercise 3.5 👉 Write a function `noisify x Number, s ` to add randomness of intensity s to a value x , i.e. to add a random value between s and s to x . If the result falls outside the range 0, 1 you should \"clamp\" it to that range. Julia has a built in `clamp` function, or you can write your own function. \"\"\" function noisify x Number, s your code here return missing end md\"\"\" 👉 Write the second method `noisify c AbstractRGB, s ` to add random noise of intensity s to each of the r, g, b values in a colour. Use your previous method for `noisify`. Remember that Julia chooses which method to use based on the input arguments. So to call the method from the previous exercise, the first argument should be a number. \"\"\" function noisify color AbstractRGB, s your code here return missing end md\"\"\" Noise strength \"\"\" bind color noise Slider 0 0.01 1, show value true md\"\"\" Note about array comprehension At this point, you already know of a few ways to make a new array based on one that already exists. 1. you can use a for loop to go through a array 1. you can use function broadcasting over a array 1. you can use array comprehension The third option you are about to see demonstrated below and following the following syntax ``` function to apply args for args in some iterable of your choice ``` This creates a new iterable that matches what you iterate through in the second part of the comprehension. Below is an example with `for` loops through two iterables that creates a 2 dimensional `Array`. \"\"\" md\"\"\" 👉 Write the third method `noisify image AbstractMatrix, s ` to noisify each pixel of an image. This function should be a single line \"\"\" function noisify image AbstractMatrix, s your code here return missing end noisify 0.5, 0.1 edit this test case original color red, with noise noisify color red, color noise noisify color red, strength for strength in 0 0.05 1, row in 1 10 ' md\"\"\" Exercise 3.6 Move the slider below to set the amount of noise applied to the image of Philip. \"\"\" bind philip noise Slider 0 0.01 1, show value true noisify philip head, philip noise if philip noise 1 md\"\"\" What's this? The noise intensity is `1.0`, but we can still recognise Philip in the picture... 👉 Modify the definition of the slider to go further than `1.0`. \"\"\" end md\"\"\" 👉 For which noise intensity does it become unrecognisable? You may need noise intensities larger than 1. Why? \"\"\" answer about noise intensity md\"\"\" The image is unrecognisable with intensity ... \"\"\" md\"\"\" Results \"\"\" function custom filter pixel AbstractRGB your code here return pixel end function custom filter image AbstractMatrix return custom filter. image end md\" Function library Just some helper functions used in the notebook.\" hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text md\"\"\" You can find out more about any function like `rand` by clicking on the Live Docs in the bottom right of this Pluto window, and typing a function name in the top. image https user images.githubusercontent.com 6933510 107848812 c934df80 6df6 11eb 8a32 663d802f5d11.png image https user images.githubusercontent.com 6933510 107848846 0f8a3e80 6df7 11eb 818a 7271ecb9e127.png We recommend that you leave the window open while you work on Julia code. It will continually look up documentation for anything you type Help, I don't see the Live Docs Try the following 🙋 Are you viewing a static preview? The Live Docs only work if you run the notebook. If you are reading this on our course website, then click the button in the top right to run the notebook. 🙋 Is your screen too small? Try resizing your window or zooming out. \"\"\" | hint hint md\"\"\"Check out this page for a refresher on basic Julia syntax Basic Julia Syntax https computationalthinking.mit.edu Spring21 basic syntax \"\"\" hint md\"\"\" In Section 1.1 https computationalthinking.mit.edu Spring21 week1 , we drew a red square on top of the image Philip with a simple command... \"\"\" md\"\"\" This exercise can be quite difficult if you use a `for` loop or list comprehension. Instead, you should use the dot syntax https docs.julialang.org en v1 manual functions man vectorized to apply a function element wise to an array. For example, this is how you get the square root of `3` ``` sqrt 3 ``` and this is how you get the square roots of 1, 2 and 3 ``` sqrt. 1, 2, 3 ``` \"\"\" | hint hint md\"`rand ` generates a uniformly random floating point number between 0 and 1 .\" almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Fantastic \", md\"Splendid \", md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next section.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text let result get red RGB 0.2, 0.3, 0.4 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 0.2 correct else keep working end end let test RGB 0.2, 0, 0 RGB 0.6, 0, 0 result get reds test if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 0.2 0.6 correct else keep working end end let result invert RGB 1.0, 0.5, 0.25 I chose these values because they can be represented exactly by Float64 shouldbe RGB 0.0, 0.5, 0.75 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractRGB keep working md\"You need to return a color , i.e. an object of type `RGB`. Use `RGB r, g, b ` to create a color with channel values `r`, `g` and `b`.\" elseif result shouldbe keep working else correct end end let result quantize RGB .297, .1, .0 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractRGB keep working md\"You need to return a color , i.e. an object of type `RGB`. Use `RGB r, g, b ` to create a color with channel values `r`, `g` and `b`.\" elseif result RGB 0.2, .1, .0 keep working else correct end end let result noisify 0.5, 0 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 0.5 results noisify 0.9, 0.1 for in 1 1000 if 0.8 ≤ minimum results 0.81 && 0.99 ≤ maximum results ≤ 1 result noisify 5, 3 if result 1 correct else keep working md\"The result should be restricted to the range `` 0,1 ``.\" end else keep working end else keep working md\"What should `noisify 0.5, 0 ` be?\" correct end end not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" if isdefined random vect not defined random vect elseif ismissing random vect still missing elseif random vect isa Vector keep working md\"`random vect` should be a `Vector`.\" elseif eltype random vect Float64 almost md\"\"\" You generated a vector of random integers. For the remaining exercises, we want a vector of `Float64` numbers. The optional first argument to `rand` specifies the type of elements to generate. For example `rand Bool, 10 ` generates 10 values that are either `true` or `false`. Try it \"\"\" elseif length random vect 10 keep working md\"`random vect` does not have the correct size.\" elseif length Set random vect 10 keep working md\"`random vect` is not 'random enough'\" else correct md\"Well done You can run your code again to generate a new vector \" end if isdefined my sum not defined my sum else let result my sum 1,2,3 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 6 keep working else correct end end end if isdefined mean not defined mean else let result mean 1,2,3 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 2 keep working else correct end end end if isdefined m not defined m elseif ismissing m still missing elseif m isa Number keep working md\"`m` should be a number.\" elseif m mean random vect keep working else correct end if isdefined mean not defined mean else let input Float64 1,2,3 result demean input if input result almost md\"\"\" It looks like you modified `xs` inside the function. It is preferable to avoid mutation inside functions, because you might want to use the original data again. For example, applying `demean` to a dataset of sensor readings would modify the original data, and the rest of your analysis would be erroneous. \"\"\" elseif ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractVector || length result 3 keep working md\"Return a vector of the same size as `xs`.\" elseif abs sum result 3 1e 10 correct else keep working end end end if isdefined create bar not defined create bar else let result create bar if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa Vector || length result 100 keep working md\"The result should be a `Vector` with 100 elements.\" elseif result 1,50,100 0,1,0 keep working else correct end end end if isdefined mean color not defined mean color else let input reshape RGB 1.0, 1.0, 1.0 , RGB 1.0, 1.0, 0.0 , 2, 1 result mean color input shouldbe RGB 1.0, 1.0, 0.5 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractRGB keep working md\"You need to return a color , i.e. an object of type `RGB`. Use `RGB r, g, b ` to create a color with channel values `r`, `g` and `b`.\" elseif result shouldbe keep working else correct end end end if isdefined quantize not defined quantize else let result quantize .3 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result .3 if quantize 0.35 .3 almost md\"What should quantize `0.2` be?\" else keep working end else correct end end end todo text HTML \"\"\" div style \"background rgb 220, 200, 255 padding 2em border radius 1em \" h1 TODO h1 repr MIME\"text html\" , text div \"\"\" bigbreak html\" br br br br br \" bigbreak md\"\"\" bigbreak Exercise 2 Manipulating images In this exercise we will get familiar with matrices 2D arrays in Julia, by manipulating images. Recall that in Julia images are matrices of `RGB` color objects. Let's load a picture of Philip again. \"\"\" md\"\"\" bigbreak Exercise 3 More filters In the previous exercises, we learned how to use Julia's dot syntax to apply a function element wise to an array. In this exercise, we will use this to write more image filters, that you can then apply to your own webcam image Exercise 3.1 👉 Write a function `invert` that inverts a color, i.e. sends r, g, b to 1 r, 1 g, 1 b . \"\"\" md\"\"\" bigbreak Camera input \"\"\" md\"\"\" bigbreak Write your own filter \"\"\" bigbreak function camera input max size 200, default url \"https i.imgur.com SUmi94P.png\" \"\"\" span class \"pl image waiting for permission\" style .pl image.popped out position fixed top 0 right 0 z index 5 .pl image video container width 250px .pl image video border radius 1rem 1rem 0 0 .pl image.waiting for permission video container display none .pl image prompt display none .pl image.waiting for permission prompt width 250px height 200px display grid place items center font family monospace font weight bold text decoration underline cursor pointer border 5px dashed rgba 0,0,0,.5 .pl image video display block .pl image .bar width inherit display flex z index 6 .pl image .bar top position absolute flex direction column .pl image .bar bottom background black border radius 0 0 1rem 1rem .pl image .bar button flex 0 0 auto background rgba 255,255,255,.8 border none width 2rem height 2rem border radius 100% cursor pointer z index 7 .pl image .bar button shutter width 3rem height 3rem margin 1.5rem auto .2rem auto .pl image video.takepicture animation pictureflash 200ms linear keyframes pictureflash 0% filter grayscale 1.0 contrast 2.0 100% filter grayscale 0.0 contrast 1.0 style div id \"video container\" div id \"top\" class \"bar\" button id \"stop\" title \"Stop video\" ✖ button button id \"pop out\" title \"Pop out pop in\" ⏏ button div video playsinline autoplay video div id \"bottom\" class \"bar\" button id \"shutter\" title \"Click to take a picture\" 📷 button div div div id \"prompt\" span Enable webcam span div script based on https github.com fonsp printi static by the same author const span currentScript.parentElement const video span.querySelector \"video\" const popout span.querySelector \"button pop out\" const stop span.querySelector \"button stop\" const shutter span.querySelector \"button shutter\" const prompt span.querySelector \".pl image prompt\" const maxsize max size const send source source, src width, src height const scale Math.min 1.0, maxsize src width, maxsize src height const width Math.floor src width scale const height Math.floor src height scale const canvas html` canvas width \\ width height \\ height ` const ctx canvas.getContext \"2d\" ctx.drawImage source, 0, 0, width, height span.value width width, height height, data ctx.getImageData 0, 0, width, height .data, span.dispatchEvent new CustomEvent \"input\" const clear camera window.stream.getTracks .forEach s s.stop video.srcObject null span.classList.add \"waiting for permission\" prompt.onclick navigator.mediaDevices.getUserMedia audio false, video facingMode \"environment\", , .then function stream stream.onend console.log window.stream stream video.srcObject stream window.cameraConnected true video.controls false video.play video.controls false span.classList.remove \"waiting for permission\" .catch function error console.log error stop.onclick clear camera popout.onclick span.classList.toggle \"popped out\" shutter.onclick const cl video.classList cl.remove \"takepicture\" void video.offsetHeight cl.add \"takepicture\" video.play video.controls false console.log video send source video, video.videoWidth, video.videoHeight document.addEventListener \"visibilitychange\", if document.visibilityState \"visible\" clear camera Set a default image const img html` img crossOrigin \"anonymous\" ` img.onload console.log \"helloo\" send source img, img.width, img.height img.src \" default url \" console.log img script span \"\"\" | HTML end bind cam data camera input function process raw camera data raw camera data the raw image data is a long byte array, we need to transform it into something more \"Julian\" something with more structure . The encoding of the raw byte stream is every 4 bytes is a single pixel every pixel has 4 values Red, Green, Blue, Alpha we ignore alpha for this notebook So to get the red values for each pixel, we take every 4th value, starting at the 1st reds flat UInt8. raw camera data \"data\" 1 4 end greens flat UInt8. raw camera data \"data\" 2 4 end blues flat UInt8. raw camera data \"data\" 3 4 end but these are still 1 dimensional arrays, nicknamed 'flat' arrays We will 'reshape' this into 2D arrays width raw camera data \"width\" height raw camera data \"height\" shuffle and flip to get it in the right shape reds reshape reds flat, width, height ' 255.0 greens reshape greens flat, width, height ' 255.0 blues reshape blues flat, width, height ' 255.0 we have our 2D array for each color Let's create a single 2D array, where each value contains the R, G and B value of that pixel RGB. reds, greens, blues end cam image process raw camera data cam data mean color cam image invert. cam image quantize cam image noisify cam image, .5 invert. cam image quantize cam image noisify cam image, .5 custom filter cam image custom filter cam image md\" homework 1, version 9 \" "},{"url":"homework/hw10/","title":"Climate modeling I","tags":["homework","module3","track_climate","track_julia","track_data","track_math","climate","plotting","interactive","modeling","climate model","economics","bifurcation","probability"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 3 section 7.5 order 7.5 homework number 10 title \"Climate modeling I\" layout \"layout.jlhtml\" tags \"homework\", \"module3\", \"track climate\", \"track julia\", \"track data\", \"track math\", \"climate\", \"plotting\", \"interactive\", \"modeling\", \"climate model\", \"economics\", \"bifurcation\", \"probability\" description \"Play around with an energy balance model of the climate system, to explore the effect of doubling CO₂, and to examine the 'snowball earth' phenomenon.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using LaTeXStrings using Plots using PlutoUI using Random, Distributions end md\" homework 10, version 3 \" md\"\"\" Homework 10 Climate modeling I `18.S191`, Fall 2023 \"\"\" md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" html\"\"\" iframe width \"100%\" height \"300\" src \"https www.youtube.com embed Gi4ZZVS2GLA\" frameborder \"0\" allow \"accelerometer autoplay clipboard write encrypted media gyroscope picture in picture\" allowfullscreen iframe \"\"\" md\"\"\" Before working on the homework, make sure that you have watched the first lecture on climate modeling 👆. We have included the important functions from this lecture notebook in the next cell. Feel free to have a look \"\"\" module Model const S 1368 solar insolation W m^2 energy per unit time per unit area const α 0.3 albedo, or planetary reflectivity unitless const B 1.3 climate feedback parameter W m^2 °C , const T0 14. preindustrial temperature °C absorbed solar radiation α α, S S S 1 α 4 W m^2 outgoing thermal radiation T A A, B B A B T const A S 1. α 4 B T0 W m^2 . greenhouse effect CO2 a a, CO2 PI CO2 PI a log CO2 CO2 PI const a 5.0 CO2 forcing coefficient W m^2 const CO2 PI 280. preindustrial CO2 concentration parts per million ppm CO2 const t CO2 PI constant CO2 concentrations const C 51. atmosphere and upper ocean heat capacity J m^2 °C function timestep ebm append ebm.T, ebm.T end ebm.Δt tendency ebm append ebm.t, ebm.t end ebm.Δt end tendency ebm 1. ebm.C absorbed solar radiation α ebm.α, S ebm.S outgoing thermal radiation ebm.T end , A ebm.A, B ebm.B greenhouse effect ebm.CO2 ebm.t end , a ebm.a, CO2 PI ebm.CO2 PI begin mutable struct EBM T Array Float64,1 t Array Float64,1 Δt Float64 CO2 Function C Float64 a Float64 A Float64 B Float64 CO2 PI Float64 α Float64 S Float64 end Make constant parameters optional kwargs EBM T Array Float64,1 , t Array Float64,1 , Δt Real, CO2 Function C C, a a, A A, B B, CO2 PI CO2 PI, α α, S S EBM T, t, Δt, CO2, C, a, A, B, CO2 PI, α, S Construct from float inputs for convenience EBM T0 Real, t0 Real, Δt Real, CO2 Function C C, a a, A A, B B, CO2 PI CO2 PI, α α, S S EBM Float64 T0 , Float64 t0 , Δt, CO2 C C, a a, A A, B B, CO2 PI CO2 PI, α α, S S end begin function run ebm EBM, end year Real while ebm.t end end year timestep ebm end end run ebm run ebm, 200. run for 200 years by default end CO2 hist t CO2 PI 1 . fractional increase t fractional increase t t . 1850. 220 .^3 begin CO2 RCP26 t CO2 PI 1 . fractional increase t . min. 1., exp. t . 1850. . 170 100 RCP26 EBM T0, 1850., 1., CO2 RCP26 run RCP26, 2100. CO2 RCP85 t CO2 PI 1 . fractional increase t . max. 1., exp. t . 1850. . 170 100 RCP85 EBM T0, 1850., 1., CO2 RCP85 run RCP85, 2100. end end md\"\"\" Exercise 1 policy goals under uncertainty A recent ground breaking review paper https agupubs.onlinelibrary.wiley.com doi 10.1029 2019RG000678 produced the most comprehensive and up to date estimate of the climate feedback parameter , which they find to be B \\approx \\mathcal N 1.3, 0.4 , i.e. our knowledge of the real value is normally distributed with a mean value \\overline B 1.3 W m² K and a standard deviation \\sigma 0.4 W m² K. These values are not very intuitive, so let us convert them into more policy relevant numbers. Definition Equilibrium climate sensitivity ECS is defined as the amount of warming \\Delta T caused by a doubling of CO₂ e.g. from the pre industrial value 280 ppm to 560 ppm , at equilibrium. At equilibrium, the energy balance model equation is 0 \\frac S 1 α 4 A BT eq a \\ln\\left \\frac 2\\ \\text CO ₂ \\text PI \\text CO ₂ \\text PI \\right From this, we subtract the preindustrial energy balance, which is given by 0 \\frac S 1 α 4 A BT 0 , The result of this subtraction, after rearranging, is our definition of \\text ECS \\text ECS \\equiv T eq T 0 \\frac a\\ln 2 B \"\"\" md\"\"\"The plot below provides an example of an \"abrupt 2 × CO₂\" experiment, a classic experimental treatment method in climate modelling which is used in practice to estimate ECS for a particular model. Note in complicated climate models the values of the parameters a and B are not specified a priori , but emerge as outputs of the simulation. The simulation begins at the preindustrial equilibrium, i.e. a temperature T 0 14 °C is in balance with the pre industrial CO₂ concentration of 280 ppm until CO₂ is abruptly doubled from 280 ppm to 560 ppm. The climate responds by warming rapidly, and after a few hundred years approaches the equilibrium climate sensitivity value, by definition. \"\"\" md\"\"\" ``B `` bind B slider Slider 2.5 .001 0 show value true, default 1.3 \"\"\" md\"\"\" Exercise 1.1 Develop understanding for feedbacks and climate sensitivity \"\"\" md\"\"\" 👉 Change the value of B using the slider above. What does it mean for a climate system to have a more negative value of B ? Explain why we call B the climate feedback parameter . \"\"\" observations from changing B md\"\"\" Hello world \"\"\" md\"\"\" 👉 What happens when B is greater than or equal to zero? \"\"\" observations from nonnegative B md\"\"\" Hello world \"\"\" md\"Reveal answer bind reveal nonnegative B answer CheckBox \" if reveal nonnegative B answer md\"\"\" This is known as the \"runaway greenhouse effect\", where warming self amplifies so strongly through positive feedbacks that the warming continues forever or until the oceans boil away and there is no longer a reservoir or water to support a water vapor feedback . This is thought to explain Venus' extremely hot and hostile climate, but as you can see is extremely unlikely to occur on present day Earth. \"\"\" end md\"\"\" 👉 Create a graph to visualize ECS as a function of B. \"\"\" md\"\"\" Exercise 1.2 Doubling CO₂ To compute ECS, we doubled the CO₂ in our atmosphere. This factor 2 is not entirely arbitrary without substantial effort to reduce CO₂ emissions, we are expected to at least double the CO₂ in our atmosphere by 2100. Right now, our CO₂ concentration is 415 ppm round 415 280, digits 3 times the pre industrial value of 280 ppm from 1850. The CO₂ concentrations in the future depend on human action. There are several models for future concentrations, which are formed by assuming different policy scenarios . A baseline model is RCP8.5 a \"worst case\" high emissions scenario. In our notebook, this model is given as a function of ``t``. \"\"\" md\"\"\" 👉 In what year are we expected to have doubled the CO₂ concentration, under policy scenario RCP8.5? \"\"\" expected double CO2 year let missing end md\"\"\" Exercise 1.3 Uncertainty in B The climate feedback parameter ``B`` is not something that we can control– it is an emergent property of the global climate system. Unfortunately, ``B`` is also difficult to quantify empirically the relevant processes are difficult or impossible to observe directly , so there remains uncertainty as to its exact value. A value of ``B`` close to zero means that an increase in CO₂ concentrations will have a larger impact on global warming, and that more action is needed to stay below a maximum temperature. In answering such policy related question, we need to take the uncertainty in ``B`` into account. In this exercise, we will do so using a Monte Carlo simulation we generate a sample of values for ``B``, and use these values in our analysis. \"\"\" B̅ 1.3 σ 0.4 ECS B B̅, a Model.a a log 2. . B let double CO2 t if t 0 2 Model.CO2 PI else Model.CO2 PI end the definition of A depends on B, so we recalculate A Model.S 1. Model.α 4 B slider Model.T0 create the model ebm ECS Model.EBM 14., 100., 1., double CO2, A A, B B slider Model.run ebm ECS, 300 ecs ECS B B slider p plot size 500, 250 , legend bottomright, title \"Transient response to instant doubling of CO₂\", ylabel \"temperature change °C \", xlabel \"years after doubling\", ylim .5, isfinite ecs && ecs 4 ? 4 10 , plot p, ebm ECS.t 1 , ebm ECS.t end , ecs . 1,1 , ls dash, color darkred, label \"ECS\" plot p, ebm ECS.t, ebm ECS.T . ebm ECS.T 1 , label \"ΔT t T t T₀\" end | as svg B samples let B distribution Normal B̅, σ Nsamples 5000 samples rand B distribution, Nsamples we only sample negative values of B filter x x 0, samples end histogram B samples, size 600, 250 , label nothing, xlabel \"B W m² K \", ylabel \"samples\" md\"\"\" 👉 Generate a probability distribution for the ECS based on the probability distribution function for B above. Plot a histogram. \"\"\" ECS samples missing md\" Answer \" md\"It looks like the ECS distribution is not normally distributed , even though B is. 👉 How does \\overline \\text ECS B compare to \\text ECS \\overline B ? What is the probability that \\text ECS B lies above \\text ECS \\overline B ? \" md\"👉 Does accounting for uncertainty in feedbacks make our expectation of global warming better less implied warming or worse more implied warming ?\" observations from the order of averaging md\"\"\" Hello world \"\"\" md\"\"\" Exercise 1.5 Running the model In the lecture notebook we introduced a mutable struct `EBM` energy balance model , which contains the parameters of our climate simulation `C`, `a`, `A`, `B`, `CO2 PI`, `α`, `S`, see details below a function `CO2`, which maps a time `t` to the concentrations at that year. For example, we use the function `t 280` to simulate a model with concentrations fixed at 280 ppm. `EBM` also contains the simulation results, in two arrays `T` is the array of temperatures °C, `Float64` . `t` is the array of timestamps years, `Float64` , of the same size as `T`. \"\"\" html\"\"\" style .hello td font family sans serif font size .8em max width 300px soft opacity .5 style p Properties of an code EBM code obect p table class \"hello\" thead tr th Name th th Description th tr thead tbody tr th code A code th td Linearized outgoing thermal radiation offset soft W m² soft td tr tr th code B code th td Linearized outgoing thermal radiation slope. em or em b climate feedback parameter b soft W m² °C soft td tr tr th code α code th td Planet albedo, 0.0 1.0 soft unitless soft td tr tr th code S code th td Solar insulation soft W m² soft td tr tr th code C code th td Atmosphere and upper ocean heat capacity soft J m² °C soft td tr tr th code a code th td CO₂ forcing effect soft W m² soft td tr tr th code CO2 PI code th td Pre industrial CO₂ concentration soft ppm soft td tr tbody table \"\"\" md\"\"\" You can set up an instance of `EBM` like so \"\"\" empty ebm Model.EBM 14.0, initial temperature 1850, initial year 1, Δt t 280.0, CO2 function md\"\"\" Have a look inside this object. We see that `T` and `t` are initialized to a 1 element array. Let's run our model \"\"\" simulated model let ebm Model.EBM 14.0, 1850, 1, t 280.0 Model.run ebm, 2020 ebm end md\"\"\" Again, look inside `simulated model` and notice that `T` and `t` have accumulated the simulation results. In this simulation, we used `T0 14` and `CO2 t 280`, which is why `T` is constant during our simulation. These parameters are the default, pre industrial values, and our model is based on this equilibrium. 👉 Run a simulation with policy scenario RCP8.5, and plot the computed temperature graph. What is the global temperature in the year 2100? \"\"\" simulated rcp85 model let missing end md\"\"\" Additional parameters can be set using keyword arguments. For example ```julia Model.EBM 14, 1850, 1, t 280.0 B 2.0 ``` Creates the same model as before, but with `B 2.0`. \"\"\" md\"\"\" 👉 Write a function `temperature response` that takes a function `CO2` and an optional value `B` as parameters, and returns the temperature at 2100 according to our model. \"\"\" function temperature response CO2 Function, B Float64 1.3 return missing end temperature response t 280 temperature response Model.CO2 RCP85 temperature response Model.CO2 RCP85, 1.0 md\"\"\" Exercise 1.6 Application to policy relevant questions We talked about two emissions scenarios RCP2.6 strong mitigation controlled CO2 concentrations and RCP8.5 no mitigation high CO2 concentrations . These are given by the following functions \"\"\" t 1850 2100 plot t, Model.CO2 RCP85. t , ylim 0, 1200 , ylabel \"CO2 concentration ppm \" bind t scenario test Slider t show value true, default 1850 Model.CO2 RCP26 t scenario test , Model.CO2 RCP85 t scenario test md\"\"\" We are interested in how the uncertainty in our input B the climate feedback parameter propagates through our model to determine the uncertainty in our output T t , for a given emissions scenario. The goal of this exercise is to answer the following by using Monte Carlo Simulation for uncertainty propagation 👉 What is the probability that we see more than 2°C of warming by 2100 under the low emissions scenario RCP2.6? What about under the high emissions scenario RCP8.5? \"\"\" md\"\"\" Exercise 2 How did Snowball Earth melt? In lecture 21 see below , we discovered that increases in the brightness of the Sun are not sufficient to explain how Snowball Earth eventually melted. \"\"\" html\"\"\" script src \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.js\" integrity \"sha256 wwYlfEzWnCf2nFlIQptfFKdUmBeH5d3G7C2352FdpWE \" crossorigin \"anonymous\" defer script link rel \"stylesheet\" href \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.css\" integrity \"sha256 99PgDZnzzjO63EyMRZfwIIA i OS2wDx6k 9Eo7JDKo \" crossorigin \"anonymous\" lite youtube videoid Y68tnH0FIzc params \"modestbranding 1&rel 0\" lite youtube \"\"\" md\"\"\" We talked about a second theory a large increase in CO₂ by volcanoes could have caused a strong enough greenhouse effect to melt the Snowball. If we imagine that the CO₂ then decreased e.g. by getting sequestered by the now liquid ocean , we might be able to explain how we transitioned from a hostile Snowball Earth to today's habitable \"Waterball\" Earth. In this exercise, you will estimate how much CO₂ would be needed to melt the Snowball and visualize a possible trajectory for Earth's climate over the past 700 million years by making an interactive bifurcation diagram . Exercise 2.1 In the lecture notebook https github.com hdrake simplEarth blob master 2 ebm multiple equilibria.jl video above , we had a bifurcation diagram of S solar insolation vs T temperature . We increased S , watched our point move right in the diagram until we found the tipping point. This time we will do the same, but we vary the CO₂ concentration, and keep S fixed at its default present day value. \"\"\" md\"\"\" Below we have an empty diagram, which is already set up with a CO₂ vs T diagram, with a logarithmic horizontal axis. Now it's your turn We have written some pointers below to help you, but feel free to do it your own way. \"\"\" md\"\"\" We used two helper functions \"\"\" function add cold hot areas p left, right xlims p plot p, left, right , 60, 60 , fillrange 10., 10. , fillalpha 0.3, c lightblue, label nothing annotate p, left 12, 19, text \"completely\\nfrozen\", 10, darkblue, left plot p, left, right , 10, 10 , fillrange 80., 80. , fillalpha 0.09, c red, lw 0., label nothing annotate p, left 12, 15, text \"no ice\", 10, darkred, left end function add reference points p plot p, Model.CO2 PI, Model.CO2 PI , 55, 75 , color grey, alpha 0.3, lw 8, label \"Pre industrial CO2\" plot p, Model.CO2 PI , Model.T0 , shape circle, color orange, markersize 8, label \"Our preindustrial climate\" plot p, Model.CO2 PI , 38.3 , shape circle, color aqua, markersize 8, label \"Alternate preindustrial climate\" end md\"\"\" 👉 Create a slider for `CO2` between `CO2min` and `CO2max`. Just like the horizontal axis of our plot, we want the slider to be logarithmic . \"\"\" md\"\"\" 👉 Write a function `step model ` that takes an existing `ebm` and `new CO2`, which performs a step of our interactive process Reset the model by setting the `ebm.t` and `ebm.T` arrays to a single element. Which value? Assign a new function to `ebm.CO2`. What function? Run the model. \"\"\" function step model ebm Model.EBM, CO2 Real your code here return ebm end md\"\"\" 👉 Inside the plot cell, call the function `step model `. \"\"\" md\"\"\" Parameters \"\"\" CO2min 10 CO2max 1 000 000 Tneo 48 ebm Model.EBM Tneo, 0., 5., Model.CO2 const let p plot xlims CO2min, CO2max , ylims 55, 75 , xaxis log, xlabel \"CO2 concentration ppm \", ylabel \"Global temperature T °C \", title \"Earth's CO2 concentration bifurcation diagram\", legend topleft add cold hot areas p add reference points p your code here plot p, ebm.CO2 ebm.t end , ebm.T end , label nothing, color black, shape circle, end | as svg md\"\"\" The albedo feedback is implemented by the methods below \"\"\" function α T α0 Model.α, αi 0.5, ΔT 10. if T ΔT return αi elseif ΔT T ΔT return αi α0 αi T ΔT 2ΔT elseif T ΔT return α0 end end function Model.timestep ebm ebm.α α ebm.T end Added this line append ebm.T, ebm.T end ebm.Δt Model.tendency ebm append ebm.t, ebm.t end ebm.Δt end md\"\"\" If you like, make the visualization more informative Like in the lecture notebook, you could add a trail behind the black dot, or you could plot the stable and unstable branches. It's up to you \"\"\" md\"\"\" Exercise 2.2 👉 Find the lowest CO₂ concentration necessary to melt the Snowball, programmatically i.e., using code . \"\"\" co2 to melt snowball let missing end md\" Function library Just some helper functions used in the notebook.\" hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text hint md\"The function `findfirst` might be helpful.\" hint md\" ```julia bind log CO2 Slider ❓ ``` ```julia CO2 10^log CO2 ``` \" hint md\"Use a condition on the albedo or temperature to check whether the Snowball has melted.\" hint md\"Start by writing a function `equilibrium temperature CO2 ` which creates a new `EBM` at the Snowball Earth temperature T Tneo and returns the final temperature for a given CO2 level.\" almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Fantastic \", md\"Splendid \", md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next section.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" TODO html\" span style 'display inline font size 2em color purple font weight 900 ' TODO span \" "},{"url":"homework/hw2/","title":"Convolutions","tags":["homework","module1","track_data","track_julia","track_climate","track_math","convolution","matrix","interactive","image","type","webcam","programming"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 section 4.5 order 4.5 homework number 2 title \"Convolutions\" layout \"layout.jlhtml\" tags \"homework\", \"module1\", \"track data\", \"track julia\", \"track climate\", \"track math\", \"convolution\", \"matrix\", \"interactive\", \"image\", \"type\", \"webcam\", \"programming\" description \"Create your own image filters using mathematical convolution \" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Images, ImageIO, FileIO using PlutoUI using HypertextLiteral using OffsetArrays end md\"\"\" homework 2, version 3 \"\"\" md\"\"\" Homework 2 convolutions `18.S191`, Fall 2023 This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. Feel free to ask questions \"\"\" md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" md\"\"\" Exercise 1 Convolutions in 1D As we have seen in the lectures, we can produce cool effects using the mathematical technique of convolutions . We input one image M and get a new image M' back. Conceptually we think of M as a matrix. In practice, in Julia it will be a `Matrix` of color objects, and we may need to take that into account. Ideally, however, we should write a generic function that will work for any type of data contained in the matrix. A convolution works on a small window of an image, i.e. a region centered around a given point i, j . We will suppose that the window is a square region with odd side length 2\\ell 1 , running from \\ell, \\ldots, 0, \\ldots, \\ell . The result of the convolution over a given window, centred at the point i, j is a single number this number is the value that we will use for M' i, j . Note that neighbouring windows overlap. To get started, in Exercise 1 we'll restrict ourselves to convolutions in 1D. So a window is just a 1D region from \\ell to \\ell . \"\"\" md\"\"\" Exercise 1.1 Let's create a vector `v` of random numbers of length `n 100`. \"\"\" n 60 v rand n md\" Feel free to experiment with different values Let's use the function `colored line` to view this 1D number array as a 1D image. \" begin colored line x Vector hcat Gray. Float64. x ' colored line x Any nothing end colored line v md\"👉 Try changing `n` and `v` around. Notice that you can run the cell `v rand n ` again to regenerate new random values.\" md\"\"\" Exercise 1.2 We need to decide how to handle the boundary conditions , i.e. what happens if we try to access a position in the vector `v` beyond `1 n`. The simplest solution is to assume that v i is 0 outside the original vector however, this may lead to strange boundary effects. A better solution is to use the closest value that is inside the vector. Effectively we are extending the vector and copying the extreme values into the extended positions. Indeed, this is one way we could implement this these extra positions are called ghost cells . 👉 Write a function `extend v, i ` that checks whether the position i is inside `1 n`. If so, return the HTML \" br \" ``i``th component of `v` otherwise, return the nearest end value. \"\"\" function extend v AbstractVector, i return missing end md\" Some test cases \" example vector 0.8, 0.2, 0.1, 0.7, 0.6, 0.4 colored line example vector md\" Extended with 0 \" colored line 0, 0, example vector..., 0, 0 md\" Extended with your `extend` function \" md\"\"\" Exercise 1.3 👉 Write or copy the `mean` function from Homework 1, which takes a vector and returns the mean. \"\"\" function mean v return missing end md\"\"\" 👉 Write a function `box blur v, l ` that blurs a vector `v` with a window of length `l` by averaging the elements within a window from \\ell to \\ell . This is called a box blur . Use your function `extend` to handle the boundaries correctly. Return a vector of the same size as `v`. \"\"\" function box blur v AbstractArray, l return missing end colored line box blur example vector, 1 let try test v rand n original copy test v box blur test v, 5 if test v original md\"\"\" danger \"Oopsie \" It looks like your function modifies `v`. Can you write it without doing so? Maybe you can use `copy`. \"\"\" end catch end end md\"\"\" Exercise 1.4 👉 Apply the box blur to your vector `v`. Show the original and the new vector by creating two cells that call `colored line`. Make the parameter \\ell interactive, and call it `l box` instead of `l` to avoid a naming conflict. \"\"\" md\"\"\" Exercise 1.5 The box blur is a simple example of a convolution , i.e. a linear function of a window around each point, given by v' i \\sum m \\, v i m \\, k m , where k is a vector called a kernel . Again, we need to take care about what happens if v i m falls off the end of the vector. 👉 Write a function `convolve v, k ` that performs this convolution. You need to think of the vector k as being centred on the position i . So m in the above formula runs between \\ell and \\ell , where 2\\ell 1 is the length of the vector k . You will either need to do the necessary manipulation of indices by hand, or use the `OffsetArrays.jl` package. \"\"\" function convolve v AbstractVector, k return missing end md\" Edit the cell above, or create a new cell with your own test cases \" md\"\"\" Exercise 1.6 👉 Define a function `box blur kernel l ` which returns a kernel i.e. a vector which, when used as the kernel in `convolve`, will reproduce a box blur of length `l`. \"\"\" function box blur kernel l return missing end bind box kernel l Slider 1 5 box blur kernel test box blur kernel box kernel l md\"\"\" Let's apply your kernel to our test vector `v` first cell , and compare the result to our previous box blur function second cell . The two should be identical. \"\"\" let result box blur v, box kernel l colored line result end md\"\"\" Exercise 1.7 👉 Write a function `gaussian kernel`. The definition of a Gaussian in 1D is G x \\frac 1 \\sqrt 2\\pi \\sigma^2 \\exp \\left \\frac x^2 2\\sigma^2 \\right , or as a Julia function \"\"\" md\"\"\" Write a function `gauss` that takes `σ` as a keyword argument and implements this function. \"\"\" gauss x Real σ 1 1 sqrt 2π σ^2 exp x^2 2 σ^2 md\"\"\" We need to sample i.e. evaluate this at each pixel in an interval of length 2n 1 , and then normalize so that the sum of the resulting kernel is 1. \"\"\" function gaussian kernel 1D n σ 1 return missing end colored line gaussian kernel 1D 4 σ 1 md\"\"\" You can edit the cell above to test your kernel function Let's try applying it in a convolution. \"\"\" bind gaussian kernel size 1D Slider 0 6 function create bar x zeros 100 x 41 60 . 1 x end md\"\"\" Exercise 2 Convolutions in 2D Now let's move to 2D images. The convolution is then given by a kernel matrix K M' i, j \\sum k, l \\, M i k, j l \\, K k, l , where the sum is over the possible values of k and l in the window. Again we think of the window as being centered at i, j . A common notation for this operation is \\star ```math M' M \\star K ``` \"\"\" md\"\"\" Exercise 2.1 👉 Write a new method for `extend` that takes a matrix `M` and indices `i` and `j`, and returns the closest element of the matrix. \"\"\" function extend M AbstractMatrix, i, j return missing end extend 5,6,7 , 1 extend 5,6,7 , 8 extend 5,6,7 , 10 if extend v,1 missing missing else colored line extend example vector, i for i in 1 length example vector 2 end md\" Let's test it \" small image Gray. rand 5,5 md\" Extended with `0` \" get small image, i, j , Gray 0 for i,j in Iterators.product 1 7, 1 7 md\" Extended with your `extend` function \" extend small image, i, j for i,j in Iterators.product 1 7, 1 7 md\"\"\" Extending Philip \"\"\" url \"https user images.githubusercontent.com 6933510 107239146 dcc3fd00 6a28 11eb 8c7b 41aaf6618935.png\" philip filename download url download to a local file. The filename is returned philip load philip filename philip head philip 470 800, 140 410 extend philip head, i, j for i in 50 size philip head,1 51, j in 50 size philip head,2 51 md\"\"\" Exercise 2.2 👉 Implement a new method `convolve M, K ` that applies a convolution to a 2D array `M`, using a 2D kernel `K`. Use your new method `extend` from the last exercise. \"\"\" function convolve M AbstractMatrix, K AbstractMatrix return missing end test convolution let v 1, 10, 100, 1000, 10000 k 1, 1, 0 convolve v, k end colored line test convolution let result convolve v, box blur kernel test colored line result end test gauss 1D a let k gaussian kernel 1D gaussian kernel size 1D if k missing convolve v, k end end colored line test gauss 1D a test gauss 1D b let v create bar k gaussian kernel 1D gaussian kernel size 1D if k missing convolve v, k end end colored line test gauss 1D b md\" Let's test it out 🎃 \" test image with border get small image, i, j , Gray 0 for i,j in Iterators.product 1 7, 1 7 K test 0 0 0 1 2 0 1 2 0 0 0 convolve test image with border, K test md\" Edit `K test` to create your own test case \" convolve philip head, K test md\"\"\" You can create all sorts of effects by choosing the kernel in a smart way. Today, we will implement two special kernels, to produce a Gaussian blur and a Sobel edge detection filter. Make sure that you have watched the lecture about convolutions \"\"\" md\"\"\" Exercise 2.3 The 2D Gaussian kernel will be defined using G x,y \\frac 1 2\\pi \\sigma^2 \\exp\\left \\frac x^2 y^2 2\\sigma^2 \\right How can you express this mathematically using the 1D Gaussian function that we defined before? \"\"\" gauss x, y σ 1 2π σ^2 gauss x σ σ gauss y σ σ md\"\"\" 👉 Write a function that applies a Gaussian blur to an image. Use your previous functions, and add cells to write helper functions as needed \"\"\" function with gaussian blur image σ 3, l 5 return missing end md\" Let's make it interactive. 💫 \" bind face σ Slider 0.1 0.1 10 show value true bind face l Slider 0 20 show value true md\"\"\" When you set `face σ` to a low number e.g. `2.0` , what effect does `face l` have? And vice versa? \"\"\" md\"\"\" Exercise 2.4 👉 Create a Sobel edge detection filter . Here, we will need to create two filters that separately detect edges in the horizontal and vertical directions, given by the following kernels ```math G x \\begin bmatrix 1 & 0 & 1 \\\\ 2 & 0 & 2 \\\\ 1 & 0 & 1 \\\\ \\end bmatrix \\qquad G y \\begin bmatrix 1 & 2 & 1 \\\\ 0 & 0 & 0 \\\\ 1 & 2 & 1 \\\\ \\end bmatrix ``` We can think of these filters as derivatives in the x and y directions, as we discussed in lectures. Then we combine them by finding the magnitude of the gradient in the sense of multivariate calculus by defining G \\text total \\sqrt G x^2 G y^2 , where each operation applies element wise on the matrices. Use your previous functions, and add cells to write helper functions as needed \"\"\" function with sobel edge detect image return missing end md\" Function library Just some helper functions used in the notebook.\" hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text hint md\"Have a look at the lecture notes to see examples of adding interactivity with a slider. You can read the Interactivity and the PlutoUI sample notebooks to learn more, you can find them in Pluto's main menu. Right click the Pluto logo in the top left Open in new tab .\" md\"\"\" You can use the `÷` operator you type `\\div TAB ` to get it with autocomplete to do integer division . For example ```julia 8 6 ≈ 1.3333333 a floating point number 8 6 4 3 a fraction 8 ÷ 6 1 an integer ``` \"\"\" | hint hint md\"`num rows, num columns size M `\" hint md\"`num rows, num columns size K `\" hint md\"Can we just copy the 1D code? What is different in 2D?\" almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next exercise.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text let result gaussian kernel 1D 5 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractVector keep working md\"The returned object is not a `Vector`.\" elseif size result 11, hint md\"The returned vector has the wrong dimensions.\" elseif sum result ≈ 1.0 keep working md\"You need to normalize the result.\" elseif gaussian kernel 1D 3 σ 1 gaussian kernel 1D 3 σ 2 keep working md\"Use the keyword argument `σ` in your function.\" else correct end end not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" if isdefined extend not defined extend else let result extend 6,7 , 10 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 6 || extend 6,7 ,10 7 keep working else correct end end end if isdefined convolve not defined convolve else let x 1, 10, 100 result convolve x, 0, 1, 1 shouldbe 11, 110, 200 shouldbe2 2, 11, 110 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractVector keep working md\"The returned object is not a `Vector`.\" elseif size result size x keep working md\"The returned vector has the wrong dimensions.\" elseif result shouldbe && result shouldbe2 keep working else correct end end end if isdefined box blur kernel not defined box blur kernel else let result box blur kernel 2 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractVector keep working md\"The returned object is not a `Vector`.\" elseif size result 5, hint md\"The returned vector has the wrong dimensions.\" else x 1, 10, 100 result1 box blur x, 2 result2 convolve x, result if result1 ≈ result2 correct else keep working end end end end if isdefined extend not defined extend else let input 42 37 1 0 result extend input, 2, 2 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 42 || extend input, 1, 3 37 keep working else correct end end end bigbreak html\" br br br br br \" bigbreak bigbreak bigbreak bigbreak function camera input max size 200, default url \"https i.imgur.com SUmi94P.png\" \"\"\" span class \"pl image waiting for permission\" style .pl image.popped out position fixed top 0 right 0 z index 5 .pl image video container width 250px .pl image video border radius 1rem 1rem 0 0 .pl image.waiting for permission video container display none .pl image prompt display none .pl image.waiting for permission prompt width 250px height 200px display grid place items center font family monospace font weight bold text decoration underline cursor pointer border 5px dashed rgba 0,0,0,.5 .pl image video display block .pl image .bar width inherit display flex z index 6 .pl image .bar top position absolute flex direction column .pl image .bar bottom background black border radius 0 0 1rem 1rem .pl image .bar button flex 0 0 auto background rgba 255,255,255,.8 border none width 2rem height 2rem border radius 100% cursor pointer z index 7 .pl image .bar button shutter width 3rem height 3rem margin 1.5rem auto .2rem auto .pl image video.takepicture animation pictureflash 200ms linear keyframes pictureflash 0% filter grayscale 1.0 contrast 2.0 100% filter grayscale 0.0 contrast 1.0 style div id \"video container\" div id \"top\" class \"bar\" button id \"stop\" title \"Stop video\" ✖ button button id \"pop out\" title \"Pop out pop in\" ⏏ button div video playsinline autoplay video div id \"bottom\" class \"bar\" button id \"shutter\" title \"Click to take a picture\" 📷 button div div div id \"prompt\" span Enable webcam span div script based on https github.com fonsp printi static by the same author const span currentScript.parentElement const video span.querySelector \"video\" const popout span.querySelector \"button pop out\" const stop span.querySelector \"button stop\" const shutter span.querySelector \"button shutter\" const prompt span.querySelector \".pl image prompt\" const maxsize max size const send source source, src width, src height const scale Math.min 1.0, maxsize src width, maxsize src height const width Math.floor src width scale const height Math.floor src height scale const canvas html` canvas width \\ width height \\ height ` const ctx canvas.getContext \"2d\" ctx.drawImage source, 0, 0, width, height span.value width width, height height, data ctx.getImageData 0, 0, width, height .data, span.dispatchEvent new CustomEvent \"input\" const clear camera window.stream.getTracks .forEach s s.stop video.srcObject null span.classList.add \"waiting for permission\" prompt.onclick navigator.mediaDevices.getUserMedia audio false, video facingMode \"environment\", , .then function stream stream.onend console.log window.stream stream video.srcObject stream window.cameraConnected true video.controls false video.play video.controls false span.classList.remove \"waiting for permission\" .catch function error console.log error stop.onclick clear camera popout.onclick span.classList.toggle \"popped out\" shutter.onclick const cl video.classList cl.remove \"takepicture\" void video.offsetHeight cl.add \"takepicture\" video.play video.controls false console.log video send source video, video.videoWidth, video.videoHeight document.addEventListener \"visibilitychange\", if document.visibilityState \"visible\" clear camera Set a default image const img html` img crossOrigin \"anonymous\" ` img.onload console.log \"helloo\" send source img, img.width, img.height img.src \" default url \" console.log img script span \"\"\" | HTML end bind gauss raw camera data camera input max size 100 bind sobel raw camera data camera input max size 200 function process raw camera data raw camera data the raw image data is a long byte array, we need to transform it into something more \"Julian\" something with more structure . The encoding of the raw byte stream is every 4 bytes is a single pixel every pixel has 4 values Red, Green, Blue, Alpha we ignore alpha for this notebook So to get the red values for each pixel, we take every 4th value, starting at the 1st reds flat UInt8. raw camera data \"data\" 1 4 end greens flat UInt8. raw camera data \"data\" 2 4 end blues flat UInt8. raw camera data \"data\" 3 4 end but these are still 1 dimensional arrays, nicknamed 'flat' arrays We will 'reshape' this into 2D arrays width raw camera data \"width\" height raw camera data \"height\" shuffle and flip to get it in the right shape reds reshape reds flat, width, height ' 255.0 greens reshape greens flat, width, height ' 255.0 blues reshape blues flat, width, height ' 255.0 we have our 2D array for each color Let's create a single 2D array, where each value contains the R, G and B value of that pixel RGB. reds, greens, blues end gauss camera image process raw camera data gauss raw camera data with gaussian blur gauss camera image σ face σ, l face l sobel camera image Gray. process raw camera data sobel raw camera data Gray. with sobel edge detect sobel camera image "},{"url":"homework/hw3/","title":"Structure and language","tags":["homework","module1","track_julia","track_math","track_climate","linguistics","programming","interactive","type","structure","data","artificial intelligence"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 section 6.5 order 6.5 homework number 3 title \"Structure and language\" layout \"layout.jlhtml\" tags \"homework\", \"module1\", \"track julia\", \"track math\", \"track climate\", \"linguistics\", \"programming\", \"interactive\", \"type\", \"structure\", \"data\", \"artificial intelligence\" description \"Automatically detect the language of a piece of text, and generate realistic looking random text \" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Colors using PlutoUI using Compose using LinearAlgebra end md\"\"\" homework 3, version 7 \"\"\" md\"\"\" Homework 3 Structure and Language `18.S191`, Fall 2023 This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. Feel free to ask questions \"\"\" md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" md\"\"\" Introduction \"\"\" md\"\"\" So far in the class the data that we have been dealing with has mainly been in the form of images. But, of course, we know that data comes in many other forms too, as we briefly discussed in the first lecture. In this homework we will look at another very important data source written text in natural language . The word \"natural\" here is to distinguish human natural languages from computer languages. We will both analyse actual text and try to generate random text that looks like natural language. Both the analysis and synthesis of natural language are key components of artificial intelligence and are the subject of much current research https en.wikipedia.org wiki GPT 3 . \"\"\" md\"\"\" Exercise 1 Language detection In this exercise we will create a very simple Artificial Intelligence . Natural language can be quite messy, but hidden in this mess is structure , which we will look for today. Let's start with some obvious structure in English text the set of characters that we write the language in. If we generate random text by sampling choosing random characters `Char` in Julia , it does not look like English \"\"\" rand Char, 5 sample 5 random characters String rand Char, 40 join into a string md\"\"\" `Char` in Julia is the type for a Unicode https en.wikipedia.org wiki Unicode character, which includes characters like `日` and `⛄`. \"\"\" md\"\"\" Instead, let's define an alphabet , and only use those letters to sample from. To keep things simple we will ignore punctuation, capitalization, etc., and use only the following 27 characters English letters plus \"space\" \"\"\" alphabet 'a' 'z' ' ' includes the space character md\"\"\" Let's sample random characters from our alphabet \"\"\" Text String rand alphabet, 40 md\"\"\" That already looks a lot better than our first attempt But it still does not look like English text we can do better. Frequency table English words are not well modelled by this random Latin characters model. Our first observation is that some letters are more common than others . To put this observation into practice, we would like to have the frequency table of the Latin alphabet. We could search for it online, but it is actually very simple to calculate ourselves The only thing we need is a representative sample of English text. The following samples are from Wikipedia, but feel free to type in your own sample You can also enter a sample of a different language, if that language can be expressed in the Latin alphabet. Remember that the html\" img src 'https cdn.jsdelivr.net gh ionic team ionicons 5.0.0 src svg eye outline.svg' style 'width 1em height 1em margin bottom .2em ' \" button on the left of a cell will show or hide the code. We also include a sample of Spanish, which we'll use later \"\"\" md\"\"\" Exercise 1.1 Data cleaning Looking at the sample, we see that it is quite messy it contains punctuation, accented letters and numbers. For our analysis, we are only interested in our 27 character alphabet i.e. `'a'` through `'z'` plus `' '` . We are going to clean the data using the Julia function `filter`. \"\"\" filter isodd, 6, 7, 8, 9, 5 md\"\"\" `filter` takes two arguments a function and a collection . The function is applied to each element of the collection, and it must return either `true` or `false` for each element. Such a function is often called a predicate . If the result is `true`, then that element is included in the final collection. Did you notice something cool? Functions are also just objects in Julia, and you can use them as arguments to other functions Fons thinks this is super cool. html\" br \" We have written a function `isinalphabet`, which takes a character and returns a boolean \"\"\" function isinalphabet character character ∈ alphabet end isinalphabet 'a' , isinalphabet ' ' md\"👉 Use `filter` to extract just the characters from our alphabet out of `messy sentence 1` \" messy sentence 1 \" wow 2020 ¥500 blingbling \" cleaned sentence 1 missing md\"\"\" html\" br \" We are not interested in the capitalization of letters i.e. `'A'` vs `'a'` , so we want to map these to lower case before we apply our filter. If we don't, all upper case letters would get deleted. Julia has a `map` function to do exactly this. Like `filter`, its first argument is the function we want to map over the vector in the second argument. \"\"\" md\"👉 Use the function `lowercase` to convert `messy sentence 2` into a lower case string, and then use `filter` to extract only the characters from our alphabet.\" messy sentence 2 \"Awesome 😍\" cleaned sentence 2 missing md\"\"\" html\" br \" Finally, we need to deal with accents simply deleting accented characters from the source text might deform it too much. We can add accented letters to our alphabet, but a simpler solution is to replace accented letters with the corresponding unaccented base character. We have written a function `unaccent` that does just that. \"\"\" french word \"Égalité \" import Unicode \"\"\" Turn `\"áéíóúüñ asdf\"` into `\"aeiouun asdf\"`. \"\"\" unaccent str Unicode.normalize str, stripmark true samples English \"\"\" Although the word forest is commonly used, there is no universally recognised precise definition, with more than 800 definitions of forest used around the world. 4 Although a forest is usually defined by the presence of trees, under many definitions an area completely lacking trees may still be considered a forest if it grew trees in the past, will grow trees in the future, 9 or was legally designated as a forest regardless of vegetation type. 10 11 The word forest derives from the Old French forest also forès , denoting \"forest, vast expanse covered by trees\" forest was first introduced into English as the word denoting wild land set aside for hunting 14 without the necessity in definition of having trees on the land. 15 Possibly a borrowing, probably via Frankish or Old High German, of the Medieval Latin foresta, denoting \"open wood\", Carolingian scribes first used foresta in the Capitularies of Charlemagne specifically to denote the royal hunting grounds of the King. The word was not endemic to Romance languages, e. g. native words for forest in the Romance languages derived from the Latin silva, which denoted \"forest\" and \"wood land \" confer the English sylva and sylvan confer the Italian, Spanish, and Portuguese selva the Romanian silvă and the Old French selve, and cognates in Romance languages, e. g. the Italian foresta, Spanish and Portuguese floresta, etc., are all ultimately derivations of the French word. \"\"\", Spanish \"\"\" Un bosque es un ecosistema donde la vegetación predominante la constituyen los árboles y matas.1​ Estas comunidades de plantas cubren grandes áreas del globo terráqueo y funcionan como hábitats para los animales, moduladores de flujos hidrológicos y conservadores del suelo, constituyendo uno de los aspectos más importantes de la biosfera de la Tierra. Aunque a menudo se han considerado como consumidores de dióxido de carbono atmosférico, los bosques maduros son prácticamente neutros en cuanto al carbono, y son solamente los alterados y los jóvenes los que actúan como dichos consumidores.2​3​ De cualquier manera, los bosques maduros juegan un importante papel en el ciclo global del carbono, como reservorios estables de carbono y su eliminación conlleva un incremento de los niveles de dióxido de carbono atmosférico. Los bosques pueden hallarse en todas las regiones capaces de mantener el crecimiento de árboles, hasta la línea de árboles, excepto donde la frecuencia de fuego natural es demasiado alta, o donde el ambiente ha sido perjudicado por procesos naturales o por actividades humanas. Los bosques a veces contienen muchas especies de árboles dentro de una pequeña área como la selva lluviosa tropical y el bosque templado caducifolio , o relativamente pocas especies en áreas grandes por ejemplo, la taiga y bosques áridos montañosos de coníferas . Los bosques son a menudo hogar de muchos animales y especies de plantas, y la biomasa por área de unidad es alta comparada a otras comunidades de vegetación. La mayor parte de esta biomasa se halla en el subsuelo en los sistemas de raíces y como detritos de plantas parcialmente descompuestos. El componente leñoso de un bosque contiene lignina, cuya descomposición es relativamente lenta comparado con otros materiales orgánicos como la celulosa y otros carbohidratos. Los bosques son áreas naturales y silvestre \"\"\" | unaccent, unaccent french word md\"\"\" html\" br \" 👉 Let's put everything together. Write a function `clean` that takes a string, and returns a cleaned version, where accented letters are replaced by their base characters upper case letters are converted to lower case it is filtered to only contain characters from `alphabet` \"\"\" function clean text return missing end clean \"Crème brûlée est mon plat préféré.\" first sample clean first samples function letter frequencies txt ismissing txt && return missing f count. string. alphabet , txt f . sum f end alphabet sample freqs letter frequencies first sample md\"\"\" The result is a 27 element array, with values between `0.0` and `1.0`. These values correspond to the frequency of each letter. `sample freqs i 0.0` means that the i th letter did not occur in your sample, and `sample freqs i 0.1` means that 10% of the letters in the sample are the i th letter. To make it easier to convert between a character from the alphabet and its index, we have the following function \"\"\" index of letter letter findfirst isequal letter , alphabet index of letter 'a' , index of letter 'b' , index of letter ' ' md\"\"\" html\" br \" 👉 Which letters from the alphabet did not occur in the sample? \"\"\" unused letters 'a', 'b', 'c' replace with your answer md\"\"\" Random letters at the correct frequencies \"\"\" md\"\"\" By considering the frequencies of letters in English, we see that our model is already a lot better Our next observation is that some letter combinations are more common than others . Our current model thinks that `potato` is just as 'English' as `ooaptt`. In the next section, we will quantify these transition frequencies , and use it to improve our model. \"\"\" function rand sample frequencies x rand findfirst z z x, cumsum frequencies . sum frequencies end function rand sample letter frequencies alphabet rand sample frequencies end function transition counts cleaned sample count string a, b , cleaned sample for a in alphabet, b in alphabet end normalize array x x . sum x transition frequencies normalize array ∘ transition counts transition frequencies first sample md\"What we get is a 27 by 27 matrix . Each entry corresponds to a character pair. The row corresponds to the first character, the column is the second character. Let's visualize this \" md\"\"\" The brightness of each letter pair indicates how frequent that pair is here space is indicated as ` `. \"\"\" md\"\"\" Answer the following questions with respect to the cleaned English sample text , which we called `first sample`. Let's also give the transition matrix a name \"\"\" sample freq matrix transition frequencies first sample if first sample missing md\"\"\" danger \"Don't worry \" 👆 These errors will disappear automatically once you have completed the earlier exercises \"\"\" end md\"\"\"👉 What is the frequency of the combination `\"th\"`?\"\"\" th frequency missing md\"\"\"👉 What about `\"ht\"`?\"\"\" ht frequency missing md\"\"\" 👉 Write code to find which le tt ers appeared doubled in our sample. \"\"\" double letters 'a', 'b', 'c' replace with your answer md\"\"\" 👉 Which letter is most likely to follow a W ? You are free to do this partially by hand, partially using code, whatever is easiest \"\"\" most likely to follow w 'x' replace with your answer md\"\"\" 👉 Which letter is most likely to precede a W ? You are free to do this partially by hand, partially using code, whatever is easiest \"\"\" most likely to precede w 'x' replace with your answer md\"\"\" 👉 What is the sum of each row? What is the sum of each column? What is the sum of the matrix? How can we interpret these values?\" \"\"\" row sums missing col sums missing row col answer md\"\"\" Blablabla \"\"\" md\"\"\" We can use the measured transition frequencies to generate text in a way that it has the same transition frequencies as our original sample. Our generated text is starting to look like real language \"\"\" bind ex23 sample Select v String k for k, v in zip fieldnames typeof samples , samples md\"\"\" Random letters from the alphabet \"\"\" md\"\"\" Random letters at the correct frequencies \"\"\" md\"\"\" Random letters at the correct transition frequencies \"\"\" function sample text A, n first index rand sample vec sum A, dims 1 indices reduce 1 n init first index do word, prev last word freq normalize array A prev, next rand sample freq word..., next end String alphabet indices end md\"\"\" It looks like we have a decent language model, in the sense that it understands transition frequencies in the language. In the demo above, try switching the language between join string. fieldnames typeof samples , \" and \" the generated text clearly looks more like one or the other, demonstrating that the model can capture differences between the two languages. What's remarkable is that our \"training data\" was just a single paragraph per language. In this exercise, we will use our model to write a classifier a program that automatically classifies a text as either join string. fieldnames typeof samples , \" or \" . This is not a difficult task you can download dictionaries for both languages, and count matches but we are doing something much more exciting we only use a single paragraph of each language, and we use a language model as classifier. \"\"\" html\" h4 id 'mystery detect' Mystery sample h4 p Enter some text here we will detect in which language it is written p \" dont delete me bind mystery sample TextField 70, 8 , default \"\"\" Small boats are typically found on inland waterways such as rivers and lakes, or in protected coastal areas. However, some boats, such as the whaleboat, were intended for use in an offshore environment. In modern naval terms, a boat is a vessel small enough to be carried aboard a ship. Anomalous definitions exist, as lake freighters 1,000 feet 300 m long on the Great Lakes are called \"boats\". \"\"\" mystery sample md\"\"\" Let's compute the transition frequencies of our mystery sample Type some text in the box above, and check whether the frequency matrix updates. \"\"\" transition frequencies mystery sample md\"\"\" Our model will compare the transition frequencies of our mystery sample to those of our two language samples. The closest match will be our detected language. The only question left is How do we compare two matrices? When two matrices are almost equal, but not exactly, we want to quantify the distance between them. 👉 Write a function called `matrix distance` which takes 2 matrices of the same size and finds the distance between them by 1. Subtracting corresponding elements 2. Finding the absolute value of the difference 3. Summing the differences \"\"\" function matrix distance A, B return missing do something with A . B end distances map samples do sample matrix distance transition frequencies mystery sample , transition frequencies sample end try assert ismissing distances.English \"\"\" h2 It looks like this text is argmin distances h2 \"\"\" | HTML catch end md\"\"\" Exercise 2 Language generation Our model from Exercise 1 has the property that it can easily be 'reversed' to generate text. While this is useful to demonstrate its structure, the produced text is mostly meaningless it fails to model words, let alone sentence structure. To take our model one step further, we are going to generalize what we have done so far. Instead of looking at letter combinations , we will model word combinations . And instead of analyzing the frequencies of bigrams combinations of two letters , we are going to analyze n grams . Dataset This also means that we are going to need a larger dataset to train our model on the number of English words and their combinations is much higher than the number of letters. We will train our model on the novel Emma 1815 , by Jane Austen https en.wikipedia.org wiki Emma novel . This work is in the public domain, which means that we can download the whole book as a text file from `archive.org`. We've done the process of downloading and cleaning already, and we have split the text into word and punctuation tokens. \"\"\" emma let raw text read download \"https ia800303.us.archive.org 24 items EmmaJaneAusten 753 emma pdf djvu.txt\" , String first words \"Emma Woodhouse\" last words \"THE END\" start index findfirst first words, raw text 1 stop index findlast last words, raw text end raw text start index stop index end function splitwords text clean up whitespace cleantext replace text, r\"\\s \" \" \" split on whitespace or other word boundaries tokens split cleantext, r\" \\s|\\b \" end emma words splitwords emma forest words splitwords samples.English md\"\"\" Exercise 2.1 bigrams revisited The goal of the upcoming exercises is to generalize what we have done in Exercise 1. To keep things simple, we split up our problem into smaller problems. The solution to any computational problem. First, here is a function that takes an array, and returns the array of all neighbour pairs from the original. For example, ```julia bigrams 1, 2, 3, 42 ``` gives ```julia 1,2 , 2,3 , 3,42 ``` We used integers as \"words\" in this example, but our function works with any type of word. \"\"\" function bigrams words starting positions 1 length words 1 map starting positions do i words i i 1 end end bigrams 1, 2, 3, 42 md\"\"\" 👉 Next, it's your turn to write a more general function `ngrams` that takes an array and a number n , and returns all subsequences of length n . For example ```julia ngrams 1, 2, 3, 42 , 3 ``` should give ```julia 1,2,3 , 2,3,42 ``` and ```julia ngrams 1, 2, 3, 42 , 2 bigrams 1, 2, 3, 42 ``` \"\"\" function ngrams words, n return missing end ngrams 1, 2, 3, 42 , 3 ngrams forest words, 4 md\"\"\" If you are stuck, you can write `ngrams words, n bigrams words ` ignoring the true value of n , and continue with the other exercises. Exercise 2.2 frequency matrix revisisted In Exercise 1 we use a 2D array to store the bigram frequencies, where each column or row corresponds to a character from the alphabet. To use trigrams we could store the frequencies in a 3D array, and so on. However, when counting words instead of letters we run into a problem A 3D array with one row, column and layer per word has too many elements to store on our computer \"\"\" md\"\"\" Emma consists of length Set emma words unique words. This means that there are Int floor length Set emma words ^3 10^9 billion possible trigrams that's too many \"\"\" md\"\"\" html\" br \" Although the frequency array would be very large, most entries are zero . For example, \"Emma\" is a common word, but the sequence of words \"Emma Emma Emma\" never occurs in the novel. We about the sparsity of the non zero entries in a matrix. When a matrix is sparse in this way, we can store the same information in a more efficient structure . Julia's `SparseArrays.jl` package https docs.julialang.org en v1 stdlib SparseArrays index.html might sound like a logical choice, but the arrays from that package support only 1D and 2D types, and we also want to directly index using strings, not just integers. So instead we will use a dictionary , or `Dict` in Julia. Take a close look at the next example. Note that you can click on the output to expand the data viewer. \"\"\" healthy Dict \"fruits\" \"🍎\", \"🍊\" , \"vegetables\" \"🌽\", \"🎃\", \"🍕\" healthy \"fruits\" md\"\"\" Did you notice something funny? The dictionary is unordered , this is why the entries were printed in reverse from the definition. You can dynamically add or change values of a `Dict` by assigning to `my dict key `. You can check whether a key already exists using `haskey my dict, key `. 👉 Use these two techniques to write a function `word counts` that takes an array of words, and returns a `Dict` with entries `word number of occurences`. For example ```julia word counts \"to\", \"be\", \"or\", \"not\", \"to\", \"be\" ``` should return ```julia Dict \"to\" 2, \"be\" 2, \"or\" 1, \"not\" 1 ``` \"\"\" function word counts words Vector counts Dict your code here return counts end word counts \"to\", \"be\", \"or\", \"not\", \"to\", \"be\" md\"\"\" 👉 Write code to find how many times `\"Emma\"` occurs in the book. \"\"\" emma count missing md\"\"\" Great Let's get back to our n grams. For the purpose of generating text, we are going to store a completion cache . This is a dictionary where each key is an n 1 gram, and the corresponding value is the vector of all those words which can complete it to an n gram. Let's look at an example ```julia let trigrams ngrams split \"to be or not to be that is the question\", \" \" , 3 cache completions cache trigrams cache Dict \"to\", \"be\" \"or\", \"that\" , \"be\", \"or\" \"not\" , \"or\", \"not\" \"to\" , ... end ``` So for trigrams the keys are the first 2 words of each trigram, and the values are arrays containing every third word of those trigrams. If the same n gram occurs multiple times e.g. \"said Emma laughing\" , then the last word \"laughing\" should also be stored multiple times. This will allow us to generate trigrams with the same frequencies as the original text. 👉 Write the function `completion cache`, which takes an array of ngrams i.e. an array of arrays of words, like the result of your `ngram` function , and returns a dictionary like described above. \"\"\" function completion cache grams cache Dict your code here cache end let trigrams ngrams split \"to be or not to be that is the question\", \" \" , 3 completion cache trigrams end md\"\"\" What is this cache telling us? In our sample text, the words \"to be\" were followed by \"or\" and by \"that\". So if we are generating text, and the last two words we wrote are \"to be\", we can look at the cache, and see that the next word can be either \"or\" or \"that\". \"\"\" md\"\"\" Exercise 2.4 write a novel We have everything we need to generate our own novel The final step is to sample random ngrams, in a way that each next ngram overlaps with the previous one. We've done this in the function `generate from ngrams` below feel free to look through the code, or to implement your own version. \"\"\" \"\"\" generate from ngrams grams, num words Given an array of ngrams i.e. an array of arrays of words , generate a sequence of `num words` words by sampling random ngrams. \"\"\" function generate from ngrams grams, num words n length first grams cache completion cache grams we need to start the sequence with at least n 1 words. a simple way to do so is to pick a random ngram sequence rand grams ... we iteratively add one more word at a time for i ∈ n 1 num words the previous n 1 words tail sequence end n 2 end possible next words completions cache tail choice rand completions push sequence, choice end sequence end \"Compute the ngrams of an array of words, but add the first n 1 at the end, to ensure that every ngram ends in the the beginning of another ngram.\" function ngrams circular words, n ngrams words..., words 1 n 1 ... , n end completion cache ngrams circular forest words, 3 \"\"\" generate source text AbstractString, num token n 3, use words true Given a source text, generate a `String` that \"looks like\" the original text by satisfying the same ngram frequency distribution as the original. \"\"\" function generate source text AbstractString, s n 3, use words true preprocess if use words splitwords else collect end words preprocess source text if length words n \"\" else grams ngrams circular words, n result generate from ngrams grams, s if use words join result, \" \" else String result end end end md\" Interactive demo Enter your own text in the box below, and use that as training data to generate anything \" bind generate demo sample TextField 50, 5 , default samples.English md\"\"\"Using bind generate sample n letters NumberField 1 5 grams for characters\"\"\" md\"\"\"Using bind generate sample n words NumberField 1 5 grams for words\"\"\" md\"\"\" Automatic Jane Austen Uncomment the cell below to generate some Jane Austen text \"\"\" generate emma, 100 n 4 | Quote md\" Function library Just some helper functions used in the notebook.\" function Quote text AbstractString text | Markdown.Paragraph | Markdown.BlockQuote | Markdown.MD end samples.English | Quote String rand alphabet, 400 | Quote if sample freqs missing String rand sample letter sample freqs for in 1 400 | Quote end String rand alphabet, 400 | Quote String rand sample letter letter frequencies ex23 sample for in 1 400 | Quote sample text transition frequencies clean ex23 sample , 400 | Quote generate generate demo sample, 400 n generate sample n letters, use words false | Quote generate generate demo sample, 100 n generate sample n words, use words true | Quote function compimg img, labels c d for c in replace alphabet, ' ' \" \" , d in replace alphabet, ' ' \" \" xmax, ymax size img xmin, ymin 0, 0 arr j 1, i 1 for i 1 ymax, j 1 xmax compose context units UnitBox xmin, ymin, xmax, ymax , fill vec img , compose context , fill \"white\" , font \"monospace\" , text first. arr . .1, last. arr . 0.6, labels , rectangle first. arr , last. arr , fill 1.0, length arr , fill 1.0, length arr end function show pair frequencies A imshow let to rgb x RGB 0.36x, 0.82x, 0.8x to rgb. A . maximum abs. A end compimg imshow end show pair frequencies transition frequencies first sample hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text hint md\"You can answer this question without writing any code have a look at the values of `sample freqs`.\" hint md\"First answer this question by looking at the pair frequency image.\" hint md\"Start out with the same code as `bigrams`, and use the Julia documentation to learn how it works. How can we generalize the `bigram` function into the `ngram` function? It might help to do this on paper first.\" almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Fantastic \", md\"Splendid \", md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next section.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text let output ngrams 1, 2, 3, 42 , 2 if output isa Missing still missing elseif output isa Vector Vector keep working md\"Make sure that `ngrams` returns an array of arrays.\" elseif output 1,2 , 2,3 , 3,42 if ngrams 1,2,3 , 1 1 , 2 , 3 if ngrams 1,2,3 , 3 1,2,3 if ngrams \"a\" ,1 \"a\" correct else keep working md\"`ngrams` should work with any type, not just integers \" end else keep working md\"`ngrams x, 3 ` did not give a correct result.\" end else keep working md\"`ngrams x, 1 ` did not give a correct result.\" end else keep working md\"`ngrams x, 2 ` did not give the correct bigrams. Start out with the same code as `bigrams`.\" end end let output word counts \"to\", \"be\", \"or\", \"not\", \"to\", \"be\" if output nothing keep working md\"Did you forget to write `return`?\" elseif output Dict still missing md\"Write your function `word counts` above.\" elseif output isa Dict keep working md\"Make sure that `word counts` returns a `Dict`.\" elseif output Dict \"to\" 2, \"be\" 2, \"or\" 1, \"not\" 1 correct else keep working end end if emma count isa Missing still missing elseif emma count 865 correct else keep working end not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" if isdefined messy sentence 1 not defined messy sentence 1 elseif isdefined cleaned sentence 1 not defined cleaned sentence 1 else if cleaned sentence 1 isa Missing still missing elseif cleaned sentence 1 isa Vector Char keep working md\"Use `String x ` to turn an array of characters `x` into a `String`.\" elseif cleaned sentence 1 filter isinalphabet, messy sentence 1 correct else keep working end end if isdefined messy sentence 2 not defined messy sentence 2 elseif isdefined cleaned sentence 2 not defined cleaned sentence 2 else if cleaned sentence 2 isa Missing still missing elseif cleaned sentence 2 isa Vector Char keep working md\"Use `String x ` to turn an array of characters `x` into a `String`.\" elseif cleaned sentence 2 filter isinalphabet, lowercase messy sentence 2 correct else keep working end end if isdefined clean not defined clean else let input \"Aè x1\" output clean input if output isa Missing still missing elseif output isa Vector Char keep working md\"Use `String x ` to turn an array of characters `x` into a `String`.\" elseif output \"ae x\" correct else keep working end end end if isdefined unused letters not defined unused letters else if sample freqs missing md\"\"\" warning \"Oopsie \" You need to complete the previous exercises first. \"\"\" elseif unused letters isa Missing still missing elseif unused letters isa String keep working md\"Use `collect` to turn a string into an array of characters.\" elseif Set index of letter. unused letters Set findall isequal 0.0 , sample freqs correct else keep working end end if isdefined th frequency not defined th frequency elseif isdefined ht frequency not defined ht frequency else if th frequency isa Missing || ht frequency isa Missing still missing elseif th frequency ht frequency keep working md\"Looks like your answers should be flipped. Which combination is more frequent in English?\" elseif th frequency sample freq matrix index of letter 't' , index of letter 'h' && ht frequency sample freq matrix index of letter 'h' , index of letter 't' correct else keep working end end if isdefined double letters not defined double letters else let result double letters if result isa Missing still missing elseif result isa String keep working md\"Use `collect` to turn a string into an array of characters.\" elseif result isa AbstractVector Char || result isa AbstractSet Char keep working md\"Make sure that `double letters` is a `Vector`.\" elseif Set result Set alphabet diag sample freq matrix . 0 correct elseif push Set result , ' ' Set alphabet diag sample freq matrix . 0 almost md\"We also consider the space `' '` as one of the letters in our `alphabet`.\" else keep working end end end if isdefined most likely to follow w not defined most likely to follow w else let result most likely to follow w if result isa Missing still missing elseif result isa Char keep working md\"Make sure that you return a `Char`. You might want to use the `alphabet` to index a character.\" elseif result alphabet map alphabet do c sample freq matrix index of letter 'w' , index of letter c end | argmax correct else keep working end end end if isdefined most likely to precede w not defined most likely to precede w else let result most likely to precede w if result isa Missing still missing elseif result isa Char keep working md\"Make sure that you return a `Char`. You might want to use the `alphabet` to index a character.\" elseif result alphabet map alphabet do c sample freq matrix index of letter c , index of letter 'w' end | argmax correct else keep working end end end if isdefined matrix distance not defined matrix distance else try let A rand Float64, 5, 4 B rand Float64, 5, 4 output matrix distance A,B if output isa Missing still missing elseif output isa Number keep working md\"Make sure that `matrix distance` returns a number.\" elseif output 0.0 keep working md\"Two different matrices should have non zero distance.\" else if matrix distance A,B 0 || matrix distance B,A 0 keep working md\"The distance between two matrices should always be positive.\" elseif matrix distance A,A 0 almost md\"The distance between two identical matrices should be zero.\" elseif matrix distance 1 1 , 0 0 0.0 almost md\"`matrix distance 1 1 , 0 0 ` should not be zero.\" else correct end end end catch keep working md\"The function errored.\" end end todo text HTML \"\"\" div style \"background rgb 220, 200, 255 padding 2em border radius 1em \" h1 TODO h1 repr MIME\"text html\" , text div \"\"\" bigbreak html\" br br br br br \" bigbreak md\"\"\" bigbreak Exercise 1.2 Letter frequencies We are going to count the frequency of each letter in this sample, after applying your `clean` function. Can you guess which character is most frequent? \"\"\" md\"\"\" bigbreak Now that we know the frequencies of letters in English, we can generate random text that already looks closer to English Random letters from the alphabet \"\"\" md\"\"\" bigbreak Exercise 1.3 Transition frequencies In the previous exercise we computed the frequency of each letter in the sample by counting their occurences, and then dividing by the total number of counts. In this exercise, we are going to count letter transitions , such as `aa`, `as`, `rt`, `yy`. Two letters might both be common, like `a` and `e`, but their combination, `ae`, is uncommon in English. To quantify this observation, we will do the same as in our last exercise we count occurences in a sample text , to create the transition frequency matrix . \"\"\" bigbreak md\"\"\" bigbreak Exercise 1.4 Language detection \"\"\" md\"\"\" We have written a cell that selects the language with the smallest distance to the mystery language. Make sure sure that `matrix distance` is working correctly, and scroll up mystery detect to the mystery text to see it in action Further reading It turns out that the SVD of the transition matrix can mysteriously group the alphabet into vowels and consonants, without any extra information. See this paper http languagelog.ldc.upenn.edu myl Moler1983.pdf if you want to try it yourself We found that removing the space from `alphabet` to match the paper gave better results. bigbreak \"\"\" bigbreak "},{"url":"homework/hw4/","title":"Dynamic programming","tags":["homework","module1","track_julia","track_math","structure","programming","dynamic programming","matrix","recursion"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 section 9.5 order 9.5 homework number 4 title \"Dynamic programming\" layout \"layout.jlhtml\" tags \"homework\", \"module1\", \"track julia\", \"track math\", \"structure\", \"programming\", \"dynamic programming\", \"matrix\", \"recursion\" description \"\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Images, ImageIO, FileIO, TestImages, ImageFiltering using Statistics using PlutoUI using BenchmarkTools end all image urls \"https wisetoast.com wp content uploads 2015 10 The Persistence of Memory salvador deli painting.jpg\" \"Salvador Dali — The Persistence of Memory replica \", \"https i.imgur.com 4SRnmkj.png\" \"Frida Kahlo — The Bride Frightened at Seeing Life Opened\", \"https upload.wikimedia.org wikipedia commons thumb 5 5b Hilma af Klint Group IX SUW%2C The Swan No. 1 %2813947%29.jpg 477px Hilma af Klint Group IX SUW%2C The Swan No. 1 %2813947%29.jpg\" \"Hilma Klint The Swan No. 1\", \"https upload.wikimedia.org wikipedia commons thumb a a4 Piet Mondriaan%2C 1930 Mondrian Composition II in Red%2C Blue%2C and Yellow.jpg 300px Piet Mondriaan%2C 1930 Mondrian Composition II in Red%2C Blue%2C and Yellow.jpg\" \"Piet Mondriaan Composition with Red, Blue and Yellow\", \"https user images.githubusercontent.com 6933510 110993432 950df980 8377 11eb 82e7 b7ce4a0d04bc.png\" \"Mario\", removal test image Gray. rand 4,4 begin brightness c RGB mean c.r, c.g, c.b brightness c RGBA mean c.r, c.g, c.b brightness c Gray gray c end convolve img, k imfilter img, reflect k uses ImageFiltering.jl package behaves the same way as the `convolve` function used in our lectures and homeworks float to color x RGB max 0, x , max 0, x , 0 energy ∇x, ∇y sqrt. ∇x.^2 . ∇y.^2 function energy img ∇y convolve brightness. img , Kernel.sobel 1 ∇x convolve brightness. img , Kernel.sobel 2 energy ∇x, ∇y end html\"\"\" iframe width \"100%\" height \"450px\" src \"https www.youtube.com embed rpB6zQNsbQU?start 777&end 833\" frameborder \"0\" allow \"accelerometer autoplay encrypted media gyroscope picture in picture\" allowfullscreen iframe \"\"\" random seam m, n, i reduce a, b a..., clamp last a rand 1 1 , 1, n , 1 m 1 init i grant example 1 8 8 3 5 4 7 8 1 0 8 4 8 0 4 7 2 9 9 0 0 5 9 4 2 4 0 2 4 5 2 4 2 5 3 0 . 10 Gray. grant example function fib n base case basis if n 0 || n 1 `||` means \"or\" return 1 end recursion induction return fib n 1 fib n 2 end grant example grant example optimal seam 4, 3, 2, 2, 3, 3 sum grant example i, grant example optimal seam i for i in 1 6 , grant example optimal seam 2 begin struct AccessTrackerArray T,N AbstractArray T,N data Array T,N accesses Ref Int end Base.IndexStyle Type AccessTrackerArray IndexLinear Base.size x AccessTrackerArray size x.data Base.getindex x AccessTrackerArray, i Int... x.accesses 1 x.data i... Base.setindex x AccessTrackerArray, v, i... x.accesses 1 x.data i... v track access x AccessTrackerArray x, Ref 0 function track access f Function, x Array tracked track access x f tracked tracked.accesses end end md\" homework 4, version 5 \" md\"\"\" Homework 4 Dynamic programming `18.S191`, Fall 2023 This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. Feel free to ask questions \"\"\" md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" md\"\"\" Choose your image bind image url Select all image urls Maximum image size bind max height str Select string. 50,100,200,500 pixels. Using a large image might lead to long runtimes in the later exercises. \"\"\" img original load download image url max height parse Int, max height str \"Decimate an image such that its new height is at most `height`.\" function decimate to height img, height factor max 1, 1 size img, 1 ÷ height img 1 factor end, 1 factor end end img decimate to height img original, max height Gray. brightness. img float to color. energy img md\"\"\" Cutting a seam Below is a function called `remove in each row img, pixels `. It takes a matrix `img` and a vector of integers, `pixels`, and shrinks the image by 1 pixel in width by removing the element `img i, pixels i ` in every row. This function is one of the building blocks of the Image Seam algorithm we saw in the lecture. Read it and convince yourself that it is correct. \"\"\" function remove in each row img Matrix, column numbers Vector m, n size img assert m length column numbers same as the number of rows local img′ similar img, m, n 1 create a similar image with one column less for i, j in enumerate column numbers img′ i, 1 j 1 . view img i, 1 j 1 img′ i, j end . view img i, j 1 end end img′ end let seam 1,2,3,4 remove in each row removal test image, seam end let seam 1,1,1,1 remove in each row removal test image, seam end let seam 1,1,1,1 result1 remove in each row removal test image, seam result2 remove in each row result1, seam result2 end md\"Let's use our function to remove the diagonal from our image. Take a close look at the images to verify that we removed the diagonal. \" md\"\"\" Removing the seam ` 1,1,1,1 ` is equivalent to removing the first column \"\"\" md\"\"\" If we remove the same seam twice, we remove the first two rows \"\"\" md\"\"\" Brightness and Energy \"\"\" md\"\"\" First, we will define a `brightness` function for a pixel a color as the mean of the red, green and blue values. You should use this function whenever the problem set asks you to deal with brightness of a pixel. \"\"\" md\"\"\"We provide you with a convolve function below. \"\"\" md\"\"\" finally we define the `energy` function which takes the Sobel gradients along x and y directions and computes the norm of the gradient for each pixel. \"\"\" md\"\"\" Exercise 1 Building up to dynamic programming In this exercise and the following ones, we will use the computational problem of Seam carving. We will think through all the \"gut reaction\" solutions, and then finally end up with the dynamic programming solution that we saw in the lecture. In the process we will understand the performance and accuracy of each iteration of our solution. How to implement the solutions For every variation of the algorithm, your job is to write a function which takes a matrix of energies, and an index for a pixel on the first row, and computes a \"seam\" starting at that pixel. The function should return a vector of as many integers as there are rows in the input matrix where each number points out a pixel to delete from the corresponding row. it acts as the input to `remove in each row` . \"\"\" md\"\"\" Exercise 1.1 The greedy approach The first approach discussed in the lecture included below is the greedy approach you start from your top pixel, and at each step you just look at the three neighbors below. The next pixel in the seam is the neighbor with the lowest energy. \"\"\" md\"\"\" 👉 Implement the greedy approach. \"\"\" function greedy seam energies, starting pixel Int m, n size energies you can delete the body of this function it's just a placeholder. random seam size energies ..., starting pixel end md\"Before we apply your function to our test image, let's try it out on a small matrix of energies displayed here in grayscale , just like in the lecture snippet above clicking on the video will take you to the right part of the video . Light pixels have high energy, dark pixels signify low energy.\" md\"Starting pixel bind greedy starting pixel Slider 1 size grant example, 2 show value true, default 5 \" greedy seam result greedy seam grant example, greedy starting pixel let s sum grant example i,j for i, j in enumerate greedy seam result md\"\"\" Total energy round s,digits 1 \"\"\" end md\" Let's try it on the bigger image \" begin reactive references to uncheck the checkbox when the functions are updated greedy seam, img, grant example md\"Compute shrunk image bind shrink greedy CheckBox \" end md\"\"\" Exercise 1.2 Recursion A common pattern in algorithm design is the idea of solving a problem as the combination of solutions to subproblems. The classic example, is a Fibonacci number https en.wikipedia.org wiki Fibonacci number generator. The recursive implementation of Fibonacci looks something like this \"\"\" md\"\"\" Notice that you can call a function from within itself which may call itself and so on until a base case is reached. Then the program will combine the result from the base case up to the final result. In the case of the Fibonacci function, we added the solutions to the subproblems `fib n 1 `, `fib n 2 ` to produce `fib n `. An analogy can be drawn to the process of mathematical induction in mathematics. And as with mathematical induction there are parts to constructing such a recursive algorithm Defining a base case Defining an recursion i.e. finding a solution to the problem as a combination of solutions to smaller problems. \"\"\" md\"\"\" 👉 Define a `least energy` function which returns 1. the lowest possible total energy for a seam starting at the pixel at i, j 2. the column to jump to on the next move in row i 1 , which is one of j 1 , j or j 1 , up to boundary conditions. Return these two values in a tuple. \"\"\" returns lowest possible sum energy at pixel i, j , and the column to jump to in row i 1. function least energy energies, i, j m, n size energies base case if i something return energies ... , ... no need for recursive computation in the base case end induction combine results from recursive calls to `least energy`. end least energy grant example, 1, 4 md\"\"\" Expected output As shown in the lecture, the optimal seam from the point 1,4 should be \"\"\" md\"\"\" So we expect the output of `least energy grant example, 1, 4 ` to be \"\"\" md\"\"\" This is elegant and correct, but inefficient Let's look at the number of accesses made to the energies array needed to compute the least energy seam of a 10x10 image \"\"\" track access rand 10,10 do tracked least energy tracked, 1, 5 end md\"Whoa We will need to optimize this later \" md\"\"\" Exercise 1.3 Exhaustive search with recursion Now use the `least energy` function you defined above to define the `recursive seam` function which takes the energies matrix and a starting pixel, and computes the seam with the lowest energy from that starting pixel. This will give you the method used in the lecture to perform exhaustive search of all possible paths https youtu.be rpB6zQNsbQU?t 839 . \"\"\" function recursive seam energies, starting pixel m, n size energies Replace the following line with your code. rand 1 starting pixel for i 1 m end md\"\"\" We won't use this function to shrink our larger image, because it is too inefficient. Your notebook might get stuck But let's try it on the small example matrix from the lecture, to verify that we have found the optimal seam. \"\"\" recursive seam test recursive seam grant example, 4 md\"\"\" Exercise 1.4 State clearly why this algorithm does an exhaustive search of all possible paths. How does the number of possible seam grow as n increases for a `m×n` image? Big O notation is fine, or an approximation is fine . \"\"\" exhaustive observation md\"\"\" your answer here \"\"\" md\"\"\" Exercise 2 Memoization Memoization is the name given to the technique of storing results to expensive function calls that will be accessed more than once. As stated in the video, the function `least energy` is called repeatedly with the same arguments. In fact, we call it on the order of 3^n times, when there are only really m \\times n unique ways to call it Lets implement memoization on this function with first a dictionary https docs.julialang.org en v1 base collections Dictionaries for storage. \"\"\" md\"\"\" Exercise 2.1 Dictionary as storage Let's make a memoized version of least energy function which takes a dictionary and first checks to see if the dictionary contains the key i,j if it does, returns the value stored in that place, if not, will compute it, and store it in the dictionary at key i, j and return the value it computed. `memoized least energy energies, starting pixel, memory ` This function must recursively call itself, and pass the same `memory` object it received as an argument. You are expected to read and understand the documentation on dictionaries https docs.julialang.org en v1 base collections Dictionaries to find out how to 1. Create a dictionary 2. Check if a key is stored in the dictionary 3. Access contents of the dictionary by a key. \"\"\" function memoized least energy energies, i, j, memory Dict m, n size energies you should start by copying the code from your not memoized least energies function. end memoized least energy test memoized least energy grant example, 1, 4, Dict md\"\"\" Let's see how many matrix access we have now \"\"\" track access rand 10,10 do tracked memoized least energy tracked, 1, 5, Dict end function memoized recursive seam energies, starting pixel we set up the the memory note the key type Tuple Int,Int and the value type Tuple Float64,Int . If you need to memoize something else, you can just use Dict without types. memory Dict Tuple Int,Int ,Tuple Float64,Int m, n size energies Replace the following line with your code. you should start by copying the code from your not memoized recursive seam function. end memoized recursive seam grant example, 4 grant example optimal seam md\"\"\" Exercise 2.2 Matrix as storage optional The dictionary based memoization we tried above works well in general as there is no restriction on what type of keys can be used. But in our particular case, we can use a matrix as a storage, since a matrix is naturally keyed by two integers. 👉 Write a variant of `matrix memoized least energy` and `matrix memoized seam` which use a matrix as storage. \"\"\" function matrix memoized least energy energies, i, j, memory Matrix m, n size energies Replace the following line with your code. end function matrix memoized seam energies, starting pixel memory Matrix Union Nothing,Tuple Float64,Int nothing, size energies use me instead of you use a different element type memory Matrix Any nothing, size energies m, n size energies Replace the following line with your code. starting pixel for i 1 m end begin matrix memoized seam, img md\"Compute shrunk image bind shrink matrix CheckBox \" end md\"\"\" Exercise 3 Dynamic programming without recursion Now it's easy to see that the above algorithm is equivalent to one that populates the memory matrix in a for loop. Exercise 3.1 👉 Write a function which takes the energies and returns the least energy matrix which has the least possible seam energy for each pixel. This was shown in the lecture, but attempt to write it on your own. \"\"\" function least energy matrix energies result copy energies m, n size energies your code here return result end img brightness brightness. img le test least energy matrix img brightness spooky A Matrix Real map sqrt. A . maximum A do x RGB .8x, x, .8x end spooky le test md\"\"\" Exercise 3.2 👉 Write a function which, when given the matrix returned by `least energy matrix` and a starting pixel on the first row , computes the least energy seam from that pixel. \"\"\" function seam from precomputed least energy energies, starting pixel Int least energies least energy matrix energies m, n size least energies Replace the following line with your code. starting pixel for i 1 m end begin img, seam from precomputed least energy md\"Compute shrunk image bind shrink bottomup CheckBox \" end md\" Function library Just some helper functions used in the notebook.\" function mark path img, path img′ RGB. img also makes a copy m size img, 2 for i, j in enumerate path if size img, 2 50 To make it easier to see, we'll color not just the pixels of the seam, but also those adjacent to it for j′ in j 1 j 1 img′ i, clamp j′, 1, m RGB 1,0,1 end else img′ i, j RGB 1,0,1 end end img′ end function shrink n min seam Function, img Matrix Colorant , n, imgs show lightning true, n 0 && return push imgs, img e energy img seam energy seam sum e i, seam i for i in 1 size img, 1 , min j findmin map j seam energy min seam e, j , 1 size e, 2 min seam vec min seam e, min j img′ remove in each row img, min seam vec if show lightning push imgs, mark path img, min seam vec else push imgs, img′ end shrink n min seam, img′, n 1, imgs show lightning show lightning end if shrink greedy local n min 200, size img, 2 greedy carved shrink n greedy seam, img, n md\"Shrink by bind greedy n Slider 1 n show value true \" end if shrink greedy greedy carved greedy n end begin reactive references to uncheck the checkbox when the functions are updated img, memoized recursive seam, shrink n md\"Compute shrunk image bind shrink dict CheckBox \" end if shrink dict local n min 20, size img, 2 dict carved shrink n memoized recursive seam, img, n md\"Shrink by bind dict n Slider 1 n, show value true \" end if shrink dict dict carved dict n end if shrink matrix local n min 20, size img, 2 matrix carved shrink n matrix memoized seam, img, n md\"Shrink by bind matrix n Slider 1 n, show value true \" end if shrink matrix matrix carved matrix n end if shrink bottomup local n min 40, size img, 2 bottomup carved shrink n seam from precomputed least energy, img, n md\"Shrink by bind bottomup n Slider 1 n, show value true \" end if shrink bottomup bottomup carved bottomup n end function pencil X f x RGB 1 x,1 x,1 x map f, X . maximum X end function decimate img, n img 1 n end, 1 n end end hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text hint md\"You can call the `least energy` function recursively within itself to obtain the least energy of the adjacent cells and add the energy at the current cell to get the total energy.\" hint md\"We recommend using a matrix with element type `Union Nothing, Tuple Float64,Int `, initialized to all `nothing`s. You can check whether the value at ` i,j ` has been computed before using `memory i,j nothing`.\" almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text begin function visualize seam algorithm test energies, algorithm Function, starting pixel Integer seam algorithm test energies, starting pixel visualize seam algorithm test energies, seam end function visualize seam algorithm test energies, seam Vector display img RGB. test energies for i, j in enumerate seam try display img i, j RGB 0.9, 0.3, 0.6 catch ex if ex isa BoundsError return keep working \"\" end the solution might give an illegal index end end display img end end visualize seam algorithm grant example, greedy seam result yays md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next section.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text if recursive seam test grant example optimal seam correct else keep working end let result track access rand 10,10 do tracked memoized least energy tracked, 1, 5, Dict end if result 0 nothing elseif result 200 correct else keep working md\"That's still too many accesses Did you forget to add a result to the `memory`?\" end end let aresult track access rand 10,10 do tracked memoized recursive seam tracked, 5 end if aresult 200 if memoized recursive seam grant example, 4 grant example optimal seam correct else keep working md\"The returned seam is not correct. Did you implement the non memoized version correctly?\" end else keep working md\"Careful Your `memoized recursive seam` is still making too many memory accesses, you may not want to run the visualization below.\" end end not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" if isdefined least energy not defined least energy else let result1 least energy grant example, 6, 4 if result1 isa Tuple keep working md\"Your function should return a tuple , like ` 1.2, 5 `.\" elseif result1 isa Tuple Float64,Int keep working md\"Your function should return a tuple , like ` 1.2, 5 `.\" else result least energy grant example, 1, 4 if result isa Tuple Float64,Int keep working md\"Your function should return a tuple , like ` 1.2, 5 `.\" else a, b result if a ≈ 0.3 && b 4 almost md\"Only search the at most three cells that are within reach.\" elseif a ≈ 0.6 && b 3 correct else keep working end end end end end if isdefined least energy matrix not defined least energy matrix elseif le test isa Matrix Real keep working md\"`least energy matrix` should return a 2D array of Float64 values.\" end if isdefined seam from precomputed least energy not defined seam from precomputed least energy end function hbox x, y, gap 16 sy size y , sx size x w, h max sx 1 , sy 1 , gap sx 2 sy 2 slate fill RGB 1,1,1 , w,h slate 1 size x,1 , 1 size x,2 . RGB. x slate 1 size y,1 , size x,2 gap . 1 size y,2 . RGB. y slate end hbox float to color. convolve brightness. img , Kernel.sobel 1 , float to color. convolve brightness. img , Kernel.sobel 2 , vbox x,y, gap 16 hbox x', y' ' bigbreak html\" br br br br br \" bigbreak bigbreak bigbreak bigbreak "},{"url":"homework/hw5/","title":"Structure","tags":["homework","module2","track_julia","structure","track_math","type","matrix","linear algebra","track_data"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 2 section 2.5 order 2.5 homework number 5 title \"Structure\" layout \"layout.jlhtml\" tags \"homework\", \"module2\", \"track julia\", \"structure\", \"track math\", \"type\", \"matrix\", \"linear algebra\", \"track data\" description \"Create your own Julia structs and add new functionality to them, to create first class mathematical objects.\" using Markdown using InteractiveUtils using PlutoUI using LinearAlgebra begin struct FirstRankOneMatrix Your code here v Vector Float64 w Vector Float64 end Add the extra constructor here FirstRankOneMatrix v FirstRankOneMatrix v, v end ten twelve missing Your code here sqrt Base.sqrt filter Base.filter methods size function Base.size M FirstRankOneMatrix return missing Your code here end function Base.getindex M FirstRankOneMatrix, i, j return missing Your code here end ten twelve ones 10, 12 An example matrix two dimensional array function print as matrix M FirstRankOneMatrix Your code here end print as matrix ten twelve begin struct RankOneMatrix T AbstractMatrix T v AbstractVector T w AbstractVector T end Add the two extra constructors Should we make these missing by default? if so remove hint below RankOneMatrix v RankOneMatrix v, v end function Base.size M RankOneMatrix return missing Your code here end function Base.getindex M RankOneMatrix, i, j return missing Your code here end R2 RankOneMatrix 1,2 , 3,4,5 M RankOneMatrix 1 10 missing Your code here collect M typeof collect M function matvec M RankOneMatrix, x return missing Your code here end begin struct RankTwoMatrix T AbstractMatrix T Your code here A RankOneMatrix T B RankOneMatrix T end Add a constructor that uses two vectors ranges RankTwoMatrix v1, v2 RankTwoMatrix RankOneMatrix v1 , RankOneMatrix v2 end function Base.getindex M RankTwoMatrix, i, j return missing Your code here end function Base.size M RankTwoMatrix return missing Your code here end struct LowRankMatrix AbstractMatrix Float64 Your code here Ms Vector RankOneMatrix rank Int end function Base.getindex M LowRankMatrix, i, j return missing Your code here end md\" homework 5, version 3 \" md\"\"\" Homework 5 Structure `18.S191`, Fall 2023 This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. Feel free to ask questions \"\"\" md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" md\"\"\" Exercise 1 When is zero not quite zero? Students used to pure math are sometimes surprised to see numbers like `1e 15`, `1e 16`, or `1e 17` appearing in computations when `0` might have been expected. At first glance, this behaviour seems 'random' or 'noisy', but in this exercise, we will try to demonstrate some structure behind floating point artihmetic. Exercise 1.1 👉 Find all integers j with 1 ≤ j ≤ 1000 for which Julia's result satisfies `j 1 j ≠ 1`. \"\"\" md\"\"\" Notice that when you re run the computation, the result does not change. Floating point arithmetic is not random Exercise 1.2 👉 Take the smallest number `j` you found above and compute the error, i.e. the distance between `j 1 j ` and `1`. Is this an integer power of 2? Which one? `log2` might help. \"\"\" md\"\"\" Exercise 1.3 Caculate all of the following 32 23 736 3.2 23 73.6 3.2 2.3 7.36 \"\"\" md\"\"\" We wanted to show you that floating point arithmetic has structure to it. It is not the fuzz or slop that you may have seen as experimental errors in maybe a chemistry or physics class. If you are interested, we may show more later in the semester. \"\"\" md\"\"\" Exercise 2 Rank one matrices In this exercise we will go into some more detail about how to define types in Julia in order to make a structured matrix type, similar to the `OneHotVector` type from class. To begin, we will make a type to represent a rank 1 matrix. A rank 1 matrix is a matrix whose columns are all multiples of each other. This already tells us a lot about the matrix in fact, we can represent any such matrix as the outer product of two vectors `v` and `w`. Only the two vectors will be stored the matrix elements will be calculated on demand, i.e. when we index into the object. \"\"\" md\"\"\" Exercise 2.1 Let's make a `FirstRankOneMatrix` type that contains two vectors of floats, `v` and `w`. Here `v` represents a column and `w` the multipliers for each column. We include in the same cell, due to requirements of Pluto a constructor that takes a single vector `v` and duplicates it. \"\"\" md\"\"\" 👉 Create an object of type `FirstRankOneMatrix` representing the multiplication table of the numbers from 1 to 10 and the numbers from 1 to 12. Call it `ten twelve`. \"\"\" md\"\"\" Exercise 2.2 extending Base methods Right now, our `FirstRankOneMatrix` is just a container for two arrays. To make it behave like a matrix, we add methods to functions in `Base`, Julia's standard set of functions. Most of the functions you have used so far come from base, for example \"\"\" md\"\"\" These are built in functions, and each function comes with a set of methods pre defined in Julia's source code which is mostly written in Julia . Uncomment the next cell to see the full list of methods for `size`. We will add a method to this list \"\"\" md\"\"\" Let's extend the `size` and `getindex` methods so that they can also work with our rank 1 matrices. This will allow us to easily access the size and entries of the matrix. \"\"\" md\"\"\" 👉 Extend `Base.size` for the type `FirstRankOneMatrix` to return the size as a tuple of values corresponding to each direction. \"\"\" md\"\"\" 👉 Extend `Base.getindex` for the type `FirstRankOneMatrix` to return the i, j th entry of the outer product. \"\"\" Base.getindex ten twelve, 5, 11 md\"\"\" Exercise 2.3 If you ask Julia to display the value of an object of type `FirstRankOneMatrix`, you will notice that it doesn't do what we are used to, which is probably to display the whole matrix that it corresponds to. Let's see \"\"\" md\"\"\" This is what matrices normally look like in Julia \"\"\" md\"\"\" One possible workaround for this is to create a new function specifically to display a matrix of our custom type. 👉 Make a function `print as matrix` that prints the entries of a matrix of type `FirstRankOneMatrix` in a grid format. We'll test that it works below with the matrix `R` we already created. \"\"\" md\"\"\" We should now be able to see our `FirstRankOneMatrix` type matrix displayed in the terminal \"\"\" md\"\"\" Exercise 2.4 AbstractMatrix In fact, Julia together with Pluto can do some of this work for us Julia provides facilities to make our life easier when we tell Julia that our type behaves like an array. We do so by making the type a subtype of `AbstractMatrix`. This will let our type inherit the methods and attributes that come with the `AbstractMatrix` type by default including some display functions that Pluto notebooks use. Let's do all this on a new rank one matrix type `RankOneMatrix`. As we do this, we will also remove the restriction to `Float64` type entries by using a parametrised type `T`. Parametrised types allow us flexibility to handle different types of entries without repeating a lot of code we won't go too in depth about these for now. \"\"\" md\"\"\" In the cell above, we added a second 'outer' constructor that takes a single vector as argument. 👉 Make sure that you can use both constructors by trying them out below. \"\"\" md\"\"\" 👉 Add `getindex` and `size` methods for this new type. These will allow us to access entries of our custom matrices with the usual index notation `M i,j `, as well as quickly retrieving their dimensions. \"\"\" Base.getindex R2, 2, 3 md\"\"\" 👉 Create an object of the new type for the 10 \\times 10 multiplication matrix, using a single range. \"\"\" md\"\"\" You should see two things Firstly, the matrix now contains integers, instead of floats this is thanks to our parametrised type . And secondly, Julia automatically displays the matrix as we wanted, once you have defined `getindex` and `size`, provided you have told Julia that your type is a subtype of `AbstractArray` \"\"\" md\"\"\" Julia also allows us to automatically convert the matrix to a normal \"dense\" matrix, using either `collect` or `Array`. Let's try these out. You may need to re run the cell below after completing the exercises. \"\"\" md\"\"\" Fun fact we did not define a method for `Base.collect`, and yet it works This is because we told Julia that our `RankOneMatrix` is a subtype of `AbstractMatrix`, for which `Base.collect` already has a method defined in Julia's source code. This fallback method uses `Base.getindex` and `Base.size`, which we did define. \"\"\" md\"\"\" Exercise 2.5 Why do we need a special type to represent special types of structured matrices? One reason is that not only do they give a more efficient representation in space requiring less memory to store , they can also be more efficient in time, i.e. faster . For example, let's look at matrix vector multiplication . This is a fundamental part of many, many algorithms in scientific computing, and because of this, we usually want it to be as fast as possible. For a rank one matrix given by M v w^T , the matrix vector product M \\cdot x is given by w \\cdot x v . Note that w \\cdot x is a number scalar which is multiplying the vector element by element. This computation is much faster than the usual matrix vector multiplication we are taking advantage of structure \"\"\" md\"\"\" 👉 Define a function `matvec` that takes a `RankOneMatrix` `M` and a `Vector` `x` and carries out matrix vector multiplication. We will be able to compare the result with doing the matrix vector product using the corresponding dense matrix. \"\"\" md\"\"\" Exercise 3 Low rank matrices \"\"\" md\"\"\" In this exercise we will combine rank 1 matrices into low rank matrices, which are sums of rank 1 matrices. Just like in the previous exercise, we will make custom types for these matrices, and we will be able to compute the entries of a matrix on demand as we request them instead of storing all of them always . \"\"\" md\"\"\" Exercise 3.1 👉 Make a rank 2 matrix type `RankTwoMatrix` that contains two rank 1 matrices `A` and `B`. For simplicity, you can use the `FirstRankOneMatrix` type. Include in the same cell a constructor for `RankTwoMatrix` that takes two vectors and makes the rank one matrices from those vectors. Note In principle we should check when constructing the type that the input matrices have the same dimensions, but we will just assume that they do. \"\"\" md\"\"\" Exercise 3.2 👉 Construct a rank two matrix out of the rank 1 matrix representing the multiplication table of 1.0 10.0 , together with the multiplication table of 0.0 0.1 0.9 . Note that both range arguments must contain floats, so that we can add up entries. \"\"\" md\"\"\" Exercise 3.3 👉 As with last time, extend the `getindex` and `size` methods for the `RankTwoMatrix` type. Keep in mind they are already defined for `RankOneMatrix`. \"\"\" md\"\"\" Exercise 3.4 Making a custom type for rank 2 matrices is a step forward from rank 1 matrices instead of storing two vectors, we store two rank 1 matrices themselves. What if we want to represent a rank 3 matrix? We would need to store three rank 1 matrices, instead of just two. What about rank 4, rank 5, and so on? We can go even further and make a general custom type `LowRankMatrix` for rank k matrices, for general ideally low k . In this case, we should store two main things the list of rank 1 matrices that our low rank matrix is made up of, and also the rank of the matrix which is how many rank 1 matrices we are storing . 👉 Complete the definition for the type `LowRankMatrix`. Remember to store both the rank 1 matrices and the rank of the matrix itself. \"\"\" md\"\"\" Exercise 3.5 👉 Extend the `getindex` and `size` methods to work with the `LowRankMatrix` type. As before, remember that these are already defined for `RankOneMatrix`. \"\"\" function Base.size M LowRankMatrix return missing Your code here end size Base.size Base.size ten twelve Base.size R2 let comp1, comp2 RankOneMatrix 1.0 1.0 10.0 , RankOneMatrix 0.0 0.1 0.9 ex3 LowRankMatrix comp1, comp2 , 2 end md\"\"\" Exercise 3.6 👉 Extend the method `matvec` to work with our custom type `LowRankMatrix` and a `Vector` . Remember that `matvec` is already defined for `RankOneMatrix`. \"\"\" function matvec M LowRankMatrix, x return missing Your code here end md\"\"\" Exercise 3.7 One of the big advantages of our rank 1 matrices is its space efficiency to \"store\" a n\\times n matrix, we only need to actually store two vectors of n entries, as opposed of n^2 total entries. Rank 2 matrices are a litte less efficient we store two rank 1 matrices, or four vectors of n vertices. As we increase the rank, we lose space efficiency, at the cost of being able to represent more kinds of matrices. 👉 For what rank will a matrix of rank k need the same amount of storage as the dense version? Explain your answer. \"\"\" answer md\"\"\" From rank ... Because .... \"\"\" md\"\"\" Exercise 4 The SVD for structured matrices In a math class, you may or may not learn about the singular value decomposition SVD . From a computational thinking point of view, whether you have seen this before or not we hope will not matter. Here we would like you to get to \"know\" the SVD , through experience, rather than through a math lecture. This is how we see \"computational thinking\" after all. Definitely do not look up some eigenvalue definition. \"\"\" md\"\"\" Exercise 4.1 The `LinearAlgebra` package defines a function `svd` that computes the decomposition for us. Have a look at the result of calling the `svd` function. Try not to get intimidated by the large output you may need to scroll the cell output , and look at the docs for `svd`. \"\"\" biggie rand 100,100 md\"\"\" 👉 What are the singular values of `biggie`? \"\"\" singular values of biggie missing md\"\"\" Exercise 4.2 If we try to run the `svd` function on a `RankOneMatrix`, you will see that it does not work. The error is telling us that no `svd` method has been defined for our type . Let's extend the `svd` function to work on objects of our type. \"\"\" A RankOneMatrix rand 3 ,rand 4 md\"\"\" 👉 Extend `svd` to work directly on a rank one matrix, by writing a new method. Keep things simple. Inside your method, call `LinearAlgebra.svd` on a type that it is already defined for . \"\"\" function LinearAlgebra.svd A RankOneMatrix return missing end svd biggie svd A LinearAlgebra.svd A md\"\"\" Exercise 4.3 👉 Look at the singular values, how many of them are approximately non zero? Does that make sense? \"\"\" md\"\"\" This number the number of singular values that are positive is something you will or have learn ed in a linear algebra class it is known as the rank of a matrix, and is usually defined through a complicated elimination procedure. 👉 Write a function `numerical rank` that calculates the singular values of a matrix `A`, and returns how many of them are approximately zero. To keep things simple, you can assume that \"approximately zero\" means less than `tol 1e5`. \"\"\" function numerical rank A AbstractMatrix tol 1e 5 return missing end numerical rank A numerical rank rand 3,3 md\"\"\" Exercise 4.4 👉 Write a function that takes an argument k and generates the sum of k random rank one matrices of size mxn, and counts the number of essentially non zero singular values. Hint you can do this with a `for` loop, but it can also be done with `sum`, e.g. `sum i for i 1 10 `. \"\"\" function k rank ones k, m, n return missing end k rank ones 1, 3, 3 md\"\"\" Exercise 4.5 👉 What is the answer when m and n are both ≥ k ? What if one of m or n is k ? \"\"\" md\" Function library Just some helper functions used in the notebook.\" hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text md\"\"\" Try writing this without a `for` loop. Ideas ☝️ Use `filter`. ☝️ Comprehensions can have `if` clauses, as in ` j for j 1 1000 if 5 j 17 `. \"\"\" | hint hint md\"\"\" The extra constructor should have the same name as the type it should take in a single argument `v`, and use it for both the column and the multipliers. \"\"\" hint md\"\"\" Check the docs for functions like `print`, `println`, `lpad` and `rpad`. Also, you don't have to know exactly how the `do` keyword works for now, but feel free to read about it it can be useful with iterating \"\"\" hint md\"\"\" If you want to specify that your argument is a range, use the `AbstractRange` type. \"\"\" hint md\"\"\" How would we implement `matvec` for a rank 2 matrix making use of the two stored rank 1 matrices? Can you generalize this to the rank k case, when we have many rank 1 matrices? \"\"\" almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text let example FirstRankOneMatrix 1,2 , 3,4 if ismissing print as matrix example still missing end end keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Fantastic \", md\"Splendid \", md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next question.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text try A RankOneMatrix 1,2,3 , 5,6,7 result LinearAlgebra.svd A if result isa Missing still missing elseif result isa LinearAlgebra.SVD almost md\"Like all other `svd` methods implemented in `LinearAlgebra` , your method should return an SVD factorization of type `LinearAlgebra.SVD` .\" else reconstructed result.U ,1 1 result.S 1 1 result.Vt 1 1, if sum abs. A . reconstructed 1e 5 correct else keep working end end catch e if e isa MethodError && e.f LinearAlgebra.svd still missing md\"Define a new method for `LinearAlgebra.svd` that takes a `RankOneMatrix` as argument.\" else rethrow e end end not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" let if isdefined ten twelve not defined ten twelve else if ten twelve isa Missing still missing elseif ten twelve isa FirstRankOneMatrix keep working md\"`ten twelve` should be a `FirstRankOneMatrix`.\" elseif ten twelve.v 1 10 && ten twelve.w 1 12 || ten twelve.w 1 10 && ten twelve.v 1 12 correct else keep working end end end let if isdefined RankOneMatrix not defined RankOneMatrix else R2 FirstRankOneMatrix 1,2 , 3,4,5 if ismissing Base.size R2 still missing elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else correct end end end let if isdefined FirstRankOneMatrix not defined FirstRankOneMatrix else R2 FirstRankOneMatrix 1,2 , 3,4,5 if ismissing Base.getindex R2, 1, 1 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif ismissing Base.size R2 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else shouldbe 3 4 5 6 8 10 r all CartesianIndices shouldbe do I isapprox R2 Tuple I ... , shouldbe I , rtol 1 3 end if r correct else keep working md\"`Base.getindex` is not implemented correctly.\" end end end end let if isdefined RankOneMatrix not defined RankOneMatrix else R2 RankOneMatrix 1,2 , 3,4,5 if ismissing Base.size R2 still missing elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else correct end end end let if isdefined RankOneMatrix not defined RankOneMatrix else R2 RankOneMatrix 1,2 , 3,4,5 if ismissing Base.getindex R2, 1, 1 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif ismissing Base.size R2 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else shouldbe 3 4 5 6 8 10 r all CartesianIndices shouldbe do I isapprox R2 Tuple I ... , shouldbe I , rtol 1 3 end if r correct else keep working md\"`Base.getindex` is not implemented correctly.\" end end end end if isdefined matvec not defined matvec else let M RankOneMatrix 1 10 if ismissing matvec M, ones 10 still missing end incorrect false for i in 1 5 r ones 10 . i for j in 1 10 if matvec M, r j collect M r j incorrect true end end end if incorrect keep working else correct end end end let if isdefined RankTwoMatrix not defined RankTwoMatrix else R1 RankOneMatrix 1,2 , 3,4,5 R2 RankTwoMatrix R1, R1 if ismissing Base.size R2 still missing elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else correct end end end let if isdefined RankTwoMatrix not defined RankTwoMatrix else R1a RankOneMatrix 1,2 , 3,4,5 R1b RankOneMatrix 2,1 , 3,4,5 R2 RankTwoMatrix R1a, R1b if ismissing Base.getindex R2, 1, 1 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif ismissing Base.size R2 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else shouldbe 3 4 5 6 8 10 s2 shouldbe shouldbe 2,1 , r all CartesianIndices s2 do I isapprox R2 Tuple I ... , s2 I , rtol 1 3 end if r correct else keep working md\"`Base.getindex` is not implemented correctly.\" end end end end let if isdefined LowRankMatrix not defined LowRankMatrix else R1 RankOneMatrix 1,2 , 3,4,5 R2 LowRankMatrix R1, R1 ,2 if ismissing Base.size R2 still missing elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else correct end end end let if isdefined LowRankMatrix not defined LowRankMatrix else R1a RankOneMatrix 1,2 , 3,4,5 R1b RankOneMatrix 2,1 , 3,4,5 R2 LowRankMatrix R1a, R1b ,2 if ismissing Base.getindex R2, 1, 1 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif ismissing Base.size R2 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else shouldbe 3 4 5 6 8 10 s2 shouldbe shouldbe 2,1 , r all CartesianIndices s2 do I isapprox R2 Tuple I ... , s2 I , rtol 1 3 end if r correct else keep working md\"`Base.getindex` is not implemented correctly.\" end end end end if isdefined matvec not defined matvec else let comp1, comp2 RankOneMatrix 1.0 1.0 10.0 , RankOneMatrix 0.0 0.1 0.9 if ismissing comp1 | ismissing comp2 still missing end ex4 LowRankMatrix comp1, comp2 , 2 if ismissing ex4 still missing end if ismissing matvec ex4, ones 10 still missing end incorrect false for i in 1 10 r ones 10 . i v, c matvec ex4, r , collect ex4 r for j in 1 10 if abs v j c j 1e 10 incorrect true break end end end if incorrect keep working else correct end end end if isdefined singular values of biggie not defined singular values of biggie else if singular values of biggie isa Missing still missing elseif singular values of biggie isa AbstractVector keep working md\"Return the singular values as a vector .\" elseif isapprox singular values of biggie, svdvals biggie , rtol 1e 5 correct else keep working end end let if isdefined numerical rank not defined numerical rank else result1 numerical rank 1 2 0 0 0 1e 10 5 10 0 if result1 isa Missing still missing elseif result1 isa Integer keep working md\"You should return a number.\" elseif result1 1 keep working else result2 numerical rank 1 3 0 0 0 1e 10 5 10 0 if result2 2 correct else keep working end end end end let if isdefined k rank ones not defined k rank ones else result k rank ones 1, 3, 4 if result isa Missing still missing elseif result isa AbstractMatrix keep working md\"Make sure that you return a matrix.\" elseif size result 3, 4 keep working md\"Make sure that you return a matrix of the correct size.\" else numerical rank A count 1e 5 , svdvals A if numerical rank result 1 correct else result2 k rank ones 2, 10, 4 if result2 isa AbstractMatrix keep working md\"Make sure that you return a matrix.\" elseif size result2 10, 4 keep working md\"Make sure that you return a matrix of the correct size.\" elseif numerical rank result2 2 correct else keep working end end end end end todo text HTML \"\"\" div style \"background rgb 220, 200, 255 padding 2em border radius 1em \" h1 TODO h1 repr MIME\"text html\" , text div \"\"\" bigbreak html\" br br br br br \" bigbreak bigbreak bigbreak bigbreak bigbreak "},{"url":"homework/hw6/","title":"Probability distributions","tags":["homework","module2","track_julia","track_math","track_data","structure","probability","statistics","plotting","interactive"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 2 section 3.5 order 3.5 homework number 6 title \"Probability distributions\" layout \"layout.jlhtml\" tags \"homework\", \"module2\", \"track julia\", \"track math\", \"track data\", \"structure\", \"probability\", \"statistics\", \"plotting\", \"interactive\" description \"Calculate a probability distribution from a dataset, experiment with different statistical models, and learn how to plot your results.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end using PlutoUI, Plots md\" homework 6, version 5 \" md\"\"\" Homework 6 Probability distributions `18.S191`, Fall 2023 This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. Feel free to ask questions \"\"\" md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" md\"\"\" Exercise 1 Calculating frequencies In this exercise we practise using dictionaries in Julia by writing our own version of the `countmap` function. Recall that that function counts the number of times that a given discrete value occurs in an input data set. A suitable data structure for this is a dictionary , since it allows us to store data that is very sparse i.e. for which many input values do not occur . \"\"\" function counts data Vector counts Dict Int,Int your code here return counts end counts 7, 8, 9, 7 md\"\"\" Test that your code is correct by applying it to obtain the counts of the data vector `test data` defined below. What should the result be? Test that you do get the correct result and call the result `test counts`. \"\"\" test data 1, 0, 1, 0, 1000, 1, 1, 1000 test counts counts test data md\"\"\" Exercise 1.2 The dictionary contains the information as a sequence of pairs mapping keys to values. This is not a particularly useful form for us. Instead, we would prefer a vector of the keys and a vector of the values, sorted in order of the key. We are going to make a new version `counts2` where you do the following below . Start off by just running the following commands each in their own cell on the dictionary `test counts` you got by running the previous `counts` function on the vector `test data` so that you see the result of running each command. Once you have understood what's happening at each step, add them to the `counts2` function in a new cell. 👉 Extract vectors `ks` of keys and `vs` of values using the `keys ` and `values ` functions and convert the results into a vector using the `collect` function. \"\"\" md\"\"\" 👉 Define a variable `perm` as the result of running the function `sortperm` on the keys. This gives a permutation that tells you in which order you need to take the keys to give a sorted version. \"\"\" md\"\"\" 👉 Use indexing `ks perm ` to find the sorted keys and values vectors. Here we are passing in a vector as the index. Julia extracts the values at the indices given in that vector \"\"\" md\"\"\" Verify that your new `counts2` function gives the correct result for the vector `v` by comparing it to the true result that you get by doing the counting by hand \"\"\" md\"\"\" 👉 Create the function `counts2` that performs these steps. \"\"\" function counts2 data Vector return missing end counts2 test data md\"\"\" Exercise 1.3 👉 Make a function `probability distribution` that normalizes the result of `counts2` to calculate the relative frequencies of each value, i.e. to give a probability distribution i.e. such that the sum of the resulting vector is 1 . The function should return the keys the unique data that was in the original data set, as calculated in `counts2`, and the probabilities relative frequencies . Test that it gives the correct result for the vector `vv`. We will use this function in the rest of the exercises. \"\"\" function probability distribution data Vector return missing end probability distribution test data md\"\"\" Intermezzo function vs. begin vs. let html\" span id function begin let span \" In our lecture materials, we sometimes use a `let` block in this cell to group multiple expressions together, but how is it different from `begin` or `function`? function Writing functions is a way to group multiple expressions i.e. lines of code together into a mini program. Note the following about functions A function always returns one object . ^1 This object can be given explicitly by writing `return x`, or implicitly Julia functions always return the result of the last expression by default. So `f x x 2` is the same as `f x return x 2`. Variables defined inside a function are not accessible outside the function . We say that function bodies have a local scope . This helps to keep your program easy to read and write if you define a local variable, then you don't need to worry about it in the rest of the notebook. There are two other ways to group expressions together that you might have seen before `begin` and `let`. begin `begin` will group expressions together, and it takes the value of its last subexpression. We use it in this notebook when we want multiple expressions to always run together. let `let` also groups multiple expressions together into one, but variables defined inside of it are local they don't affect code outside of the block. So like `begin`, it is just a block of code, but like `function`, it has a local variable scope. We use it when we want to define some local temporary variables to produce a complicated result, without interfering with other cells. Pluto allows only one definition per global variable of the same name, but you can define local variables with the same names whenever you wish ^1 Even a function like `f x return` returns one object the object `nothing` — try it out \"\"\" md\"\"\" Example of a scope problem with `begin` The following will not work, because `fruits` has multiple definitions \"\"\" md\"\"\" Solved using `let` \"\"\" let vegetables \"🥦\", \"🥔\", \"🥬\" length vegetables end let vegetables \"🌽\" length vegetables end md\"\"\" This works, because `vegetables` is only defined as a local variable inside the cell , not as a global \"\"\" vegetables md\"\"\" Exercise 2 Modelling component failure with the geometric distribution In this exercise, we will investigate the simple model of failure of mechanical components or light bulbs, or radioactive decay, or recovery from an infection, or... that we saw in lectures. Let's call \\tau the time to failure. We will use a simple model, in which each component has probability p to fail each day. If it fails on day n , then \\tau n . We see that \\tau is a random variable, so we need to study its probability distribution . \"\"\" md\"\"\" Exercise 2.1 👉 Define the function `bernoulli p ` from lectures. Recall that this generates `true` with probability p and `false` with probability 1 p . \"\"\" function bernoulli p Real return missing end md\"\"\" Exercise 2.2 👉 Write a function `geometric p `. This should run a simulation with probability p to recover and wait until the individual recovers, at which point it returns the time taken to recover. The resulting failure time is known as a geometric random variable , or a random variable whose distribution is the geometric distribution . \"\"\" function geometric p Real return missing end geometric 0.25 md\"\"\" We should always be aware of special cases sometimes called \"boundary conditions\" . Make sure not to run the code with p 0 What would happen in that case? Your code should check for this and throw an `ArgumentError` as follows ```julia throw ArgumentError \"...\" ``` with a suitable error message. \"\"\" md\"\"\" 👉 What happens for p 1 ? \"\"\" interpretation of p equals one md\"\"\" blablabla \"\"\" md\"\"\" Exercise 2.3 👉 Write a function `experiment p, N ` that runs the `geometric` function `N` times and collects the results into a vector. \"\"\" function experiment p Real, N Integer return missing end small experiment experiment 0.5, 20 md\"\"\" Exercise 2.4 Let's run an experiment with p 0.25 and N 10,000 . We will plot the resulting probability distribution, i.e. plot P \\tau n against n , where n is the recovery time. \"\"\" large experiment experiment 0.25, 10000 let xs, ps probability distribution large experiment bar xs, ps, alpha 0.5, leg false end md\"\"\" 👉 Calculate the mean recovery time. \"\"\" md\"\"\" 👉 Create the same plot as above, and add the mean recovery time to the plot using the `vline ` function and the `ls dash` argument to make a dashed line. Note that `vline ` requires a vector of values where you wish to draw vertical lines. \"\"\" let your code here end md\"\"\" html\" span id note about plotting span \" Note about plotting Plots.jl has an interesting property a plot is an object, not an action. Functions like `plot`, `bar`, `histogram` don't draw anything on your screen they just return a `Plots.Plot`. This is a struct that contains the description of a plot what data should be plotted in what way? , not the picture . So a Pluto cell with a single line, `plot 1 10 `, will show a plot, because the result of the function `plot` is a `Plot` object, and Pluto just shows the result of a cell. Modifying plots Nice plots are often formed by overlaying multiple plots. In Plots.jl, this is done using the modifying functions `plot `, `bar `, `vline `, etc. These take an extra first argument a previous plot to modify. For example, to plot the `sin`, `cos` and `tan` functions in the same view, we do ```julia function sin cos plot T 1.0 0.01 1.0 result plot T, sin. T plot result, T, cos. T plot result, T, tan. T return result end ``` 💡 This example demonstrates a useful pattern to combine plots 1. Create a new plot and store it in a variable 2. Modify that plot to add more elements 3. Return the plot Grouping expressions It is highly recommended that these 3 steps happen within a single cell . This can prevent some strange glitches when re running cells. There are three ways to group expressions together into a single cell `begin`, `let` and `function`. More on this here function begin let \"\"\" md\"\"\" Exercise 2.5 👉 What shape does the distribution seem to have? Can you verify that by using one or more log scales in a new plot? \"\"\" md\"\"\" Use the widgets from PlutoUI to write an interactive visualization that performs Exercise 2.3 for p varying between 0 and 1 and N between 0 and 100,000 . You might want to go back to Exercise 2.3 to turn your code into a function that can be called again. As you vary p , what do you observe? Does that make sense? \"\"\" bind hello Slider 2 0.5 10 hello md\"\"\" Exercise 2.6 👉 For fixed N 10,000 , write a function that calculates the mean time to recover, \\langle \\tau p \\rangle , as a function of p . \"\"\" md\"\"\" 👉 Use plots of your function to find the relationship between \\langle \\tau p \\rangle and p . \"\"\" md\"\"\" Based on my observations, it looks like we have the following relationship ```math \\langle \\tau p \\rangle my \\cdot answer \\cdot here ``` \"\"\" md\"\"\" Exercise 3 More efficient geometric distributions Let's use the notation P n \\mathbb P \\tau n for the probability to fail on the n th step. Probability theory tells us that in the limit of an infinite number of trials, we have the following exact results P 1 p P 2 p 1 p , and in general P n p 1 p ^ n 1 . \"\"\" md\"\"\" Exercise 3.1 👉 Fix p 0.25 . Make a vector of the values P n for n 1, \\dots, 50 . You must of course use a loop or similar construction do not do this by hand \"\"\" Ps let your code here end md\"\"\" 👉 Do they sum to 1? \"\"\" md\"\"\" Exercise 3.2 👉 Check analytically that the probabilities sum to 1 when you include all infinitely many of them. \"\"\" md\"\"\" ```math \\sum k 1 ^ \\infty P k \\dots your \\cdot answer \\cdot here \\dots 1 ``` \"\"\" md\"\"\" Exercise 3.3 Sum of a geometric series \"\"\" md\"\"\" 👉 Plot P n as a function of n . Compare it to the corresponding result from the previous exercise i.e. plot them both on the same graph . \"\"\" md\"\"\" 👉 How could we measure the error , i.e. the distance between the two graphs? What do you think determines it? \"\"\" md\"\"\" Exercise 3.4 If p is small , say p 0.001 , then the algorithm we used in Exercise 2 to sample from geometric distribution will be very slow, since it just sits there calculating a lot of `false`s The average amount of time taken is what you found in 1.8 . \"\"\" md\"\"\" Let's make a better algorithm. Think of each probability P n as a \"bin\", or interval, of length P n . If we lay those bins next to each other starting from P 1 on the left, then P 2 , etc., there will be an infinite number of bins that fill up the interval between 0 and 1 . In principle there is no upper limit on how many days it will take to recover, although the probability becomes very small. \"\"\" md\"\"\" Now suppose we take a uniform random number r between 0 and 1 . That will fall into one of the bins. If it falls into the bin corresponding to P n , then we return n as the recovery time \"\"\" md\"\"\" 👉 To draw this picture, we need to add up the lengths of the lines from 1 to n for each n , i.e. calculate the cumulative sum . Write a function `cumulative sum`, which returns a new vector. \"\"\" function cumulative sum xs Vector return missing end cumulative sum 1, 3, 5, 7, 9 md\"\"\" 👉 Plot the resulting values on a horizontal line. Generate a few random points and plot those. Convince yourself that the probability that a point hits a bin is equal to the length of that bin. \"\"\" cumulative cumulative sum Ps md\"\"\" Exercise 3.5 👉 Calculate the sum of P 1 up to P n analytically. \"\"\" md\"\"\" ```math C n \\sum k 1 ^n P k my \\cdot answer \\cdot here ``` \"\"\" md\"\"\" 👉 Use the previous result to find analytically which bin n a given value of r \\in 0, 1 falls into, using the inequality P n 1 \\le r \\le P n . \"\"\" md\"\"\" ```math n r,p my \\cdot answer \\cdot here ``` \"\"\" md\"\"\" Exercise 3.6 👉 Implement this as a function `geomtric bin r, p `, use the `floor` function. \"\"\" function geometric bin u Real, p Real return missing end md\"\"\" We can use this to define a fast version of the `geomtric` function \"\"\" geometric fast p geometric bin rand , p geometric fast 0.25 md\"\"\" Exercise 3.7 👉 Generate `10 000` samples from `geometric fast` with p 10^ 10 and plot a histogram of them. This would have taken a very long time with the previous method \"\"\" md\"\"\" Exercise 4 Distribution of the \"atmosphere\" In this question we will implement a very simple model of the density of the atmosphere, using a random walk , i.e. a particle that undergoes random motion . We will see more about random walks in lectures. We can think of a very light dust particle being moved around by the wind. We are only interested in its vertical position, y , and we will suppose for simplicity that y is an integer. The particle jumps up and down randomly as it is moved by the wind however, due to gravity it has a higher probability p of moving downwards to y 1 than upwards to y 1 , which happens with probability 1 p . At y 1 there is a boundary condition it hits a reflective boundary the \"surface of the Earth\" . We can model this using \"bounce back\" if the particle tries to jump downwards from y 1 then it hits a reflective boundary and bounces back to y 1 . In other words it remains in the same place. \"\"\" md\"\"\" Exercise 4.1 👉 Write a simulation of this model in a function `atmosphere` that accepts `p`, the initial height `y0`, and the number of steps N as variables. \"\"\" function atmosphere p Real, y0 Real, N Integer return missing end atmosphere 0.8, 10, 50 md\"\"\" Let's simulate it for 10^7 time steps with x 0 10 and p 0.55 . Exercise 4.2 👉 Calculate and plot the probability distribution of the walker's height. \"\"\" md\"\"\" 👉 What does the resulting figure look like? What form do you think this distribution has? Verify your hypothesis by plotting the distribution using different scales. You can increase the number of time steps to make the results look nicer. \"\"\" md\"\"\" Exercise 4.3 👉 Make an interactive visualization of how the distribution develops over time. What happens for longer and longer times? \"\"\" md\"\"\" 👉 Use wikipedia to find a formula for the barometric pressure at a given altitude. Does this result match your expectations? \"\"\" md\" Function library Just some helper functions used in the notebook.\" hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text md\"\"\" Exercise 1.1 👉 Write a function `counts` that accepts a vector `data` and calculates the number of times each value in `data` occurs. The input will be an array of integers, with duplicates , and the result will be a dictionary that maps each occurred value to its count in the data. For example, ```julia counts 7, 8, 9, 7 ``` should give ```julia Dict 7 2, 8 1, 9 1, ``` To do so, use a dictionary called `counts`. We can create a local variable with the same name as the function. hint md\"Do you remember how we worked with dictionaries in Homework 3? You can create an empty dictionary using `Dict `. You may want to use either the function `haskey` or the function `get` on your dictionary check the documentation for how to use these functions. \" The function should return the dictionary. \"\"\" hint md\"Remember to always re use work you have done previously in this case you should re use the function `bernoulli`.\" almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Fantastic \", md\"Splendid \", md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next question.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" if isdefined counts not defined counts else let result counts 51, 52, 52,53,51 if ismissing result still missing elseif result isa Dict keep working md\"Make sure that `counts` returns a Dictionary.\" elseif result Dict 51 2, 52 2, 53 1, correct else keep working end end end if isdefined test counts not defined test counts else if test counts Dict 0 2, 1000 2, 1 4 keep working else correct end end if isdefined counts2 not defined counts2 else let result counts2 51, 52, 52,53,51 if ismissing result still missing elseif result isa Tuple AbstractVector, AbstractVector keep working md\"Make sure that `counts2` returns a Tuple of two vectors.\" elseif result 52, 51, 53 , 2, 2, 1 , correct else keep working end end end if isdefined probability distribution not defined probability distribution else let result probability distribution 51, 52, 52,53,51 if ismissing result still missing elseif result isa Tuple AbstractVector, AbstractVector keep working md\"Make sure that `counts2` returns a Tuple of two vectors.\" elseif result 1 52, 51, 53 && isapprox result 2 , 2, 2, 1 . 5 correct else keep working end end end if isdefined bernoulli not defined bernoulli else let result bernoulli 0.5 if result isa Missing still missing elseif result isa Bool keep working md\"Make sure that you return either `true` or `false`.\" else if bernoulli 0.0 false && bernoulli 1.0 true correct else keep working end end end end if isdefined geometric not defined geometric else let result geometric 1.0 if result isa Missing still missing elseif result isa Int keep working md\"Make sure that you return an integer the recovery time.\" else if result 1 samples geometric 0.2 for in 1 256 a, b extrema samples if a 1 && b 20 correct else keep working end else keep working md\"`p 1.0` should return `1` the agent recovers after the first time step.\" end end end end if isdefined cumulative sum not defined cumulative sum else let result cumulative sum 1,2,3,4 if result isa Missing still missing elseif result isa AbstractVector keep working md\"Make sure that you return an Array the cumulative sum \" elseif length result 4 keep working md\"You should return an array of the same size a `xs`.\" else if isapprox result, 1, 3, 6, 10 correct else keep working end end end end if isdefined geometric bin not defined geometric bin else let result1 geometric bin 0.1, 0.1 result2 geometric bin 0.9, 0.1 if result1 isa Missing still missing elseif result1 isa Real keep working md\"Make sure that you return a number.\" elseif all isinteger, result1, result2 if result1 21 || result2 21 || result1 22 || result2 22 correct else keep working end else keep working md\"You should use the `floor` function to return an integer.\" end end end todo text HTML \"\"\" div style \"background rgb 220, 200, 255 padding 2em border radius 1em \" h1 TODO h1 repr MIME\"text html\" , text div \"\"\" bigbreak html\" br br br br br \" bigbreak bigbreak bigbreak bigbreak bigbreak bigbreak bigbreak begin fruits \"🍉\" length fruits end begin fruits \"🍒\", \"🍐\", \"🍋\" length fruits end "},{"url":"homework/hw7/","title":"Epidemic modeling I","tags":["homework","module2","epidemiology","track_data","monte carlo","statistics","track_math","ODE","agent based model","differential equation","type","structure","plotting"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 2 section 7.5 order 7.5 homework number 7 title \"Epidemic modeling I\" layout \"layout.jlhtml\" tags \"homework\", \"module2\", \"epidemiology\", \"track data\", \"monte carlo\", \"statistics\", \"track math\", \"ODE\", \"agent based model\", \"differential equation\", \"type\", \"structure\", \"plotting\" description \"Simulate the spread of an epidemic by creating your own agent based model from scratch, and find statistics using the Monte Carlo method.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end using Plots, PlutoUI md\" homework 7, version 3 \" md\"\"\" Homework 7 Epidemic modeling `18.S191`, Fall 2023 This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. Feel free to ask questions \"\"\" md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" function bernoulli p Number rand p end md\"\"\" Exercise 1 Agent based model for an epidemic outbreak types In this and the following exercises we will develop a simple stochastic model for combined infection and recovery in a population, which may exhibit an epidemic outbreak i.e. a large spike in the number of infectious people . The population is well mixed , i.e. everyone is in contact with everyone else. An example of this would be a small school or university in which people are constantly moving around and interacting with each other. The model is an individual based or agent based model we explicitly keep track of each individual, or agent , in the population and their infection status. For the moment we will not keep track of their position in space we will just assume that there is some mechanism, not included in the model, by which they interact with other individuals. Exercise 1.1 Each agent will have its own internal state , modelling its infection status, namely \"susceptible\", \"infectious\" or \"recovered\". We would like to code these as values `S`, `I` and `R`, respectively. One way to do this is using an enumerated type https en.wikipedia.org wiki Enumerated type or enum . Variables of this type can take only a pre defined set of values the Julia syntax is as follows \"\"\" enum InfectionStatus S I R md\"\"\" We have just defined a new type `InfectionStatus`, as well as names `S`, `I` and `R` that are the only possible values that a variable of this type can take. 👉 Define a variable `test status` whose value is `S`. \"\"\" test status missing md\"\"\" 👉 Use the `typeof` function to find the type of `test status`. \"\"\" md\"\"\" 👉 Convert `x` to an integer using the `Integer` function. What value does it have? What values do `I` and `R` have? \"\"\" md\"\"\" Exercise 1.2 For each agent we want to keep track of its infection status and the number of other agents that it infects during the simulation. A good solution for this is to define a new type `Agent` to hold all of the information for one agent, as follows \"\"\" mutable struct Agent status InfectionStatus num infected Int64 end md\"\"\" When you define a new type like this, Julia automatically defines one or more constructors , which are methods of a generic function with the same name as the type. These are used to create objects of that type. 👉 Use the `methods` function to check how many constructors are pre defined for the `Agent` type. \"\"\" md\"\"\" 👉 Create an agent `test agent` with status `S` and `num infected` equal to 0. \"\"\" test agent missing md\"\"\" 👉 For convenience, define a new constructor i.e. a new method for the function that takes no arguments and creates an `Agent` with status `S` and number infected 0, by calling one of the default constructors that Julia creates. This new method lives outside not inside the definition of the `struct`. It is called an outer constructor . In Pluto, a struct definition and an outer constructor need to be combined in a single cell using a `begin end` block. Let's check that the new method works correctly. How many methods does the constructor have now? \"\"\" Agent md\"\"\" Exercise 1.3 👉 Write functions `set status a ` and `set num infected a ` which modify the respective fields of an `Agent`. Check that they work. Note the bang \"` `\" at the end of the function names to signify that these functions modify their argument. \"\"\" function set status agent Agent, new status InfectionStatus your code here end md\"\"\" 👉 We will also need functions `is susceptible` and `is infected` that check if a given agent is in those respective states. \"\"\" function is susceptible agent Agent return missing end function is infected agent Agent return missing end md\"\"\" Exercise 1.4 👉 Write a function `generate agents N ` that returns a vector of `N` freshly created `Agent`s. They should all be initially susceptible, except one, chosen at random i.e. uniformly , who is infectious. \"\"\" function generate agents N Integer return missing end generate agents 3 md\"\"\" We will also need types representing different infections. Let's define an immutable `struct` called `InfectionRecovery` with parameters `p infection` and `p recovery`. We will make it a subtype of an abstract `AbstractInfection` type, because we will define more infection types later. \"\"\" abstract type AbstractInfection end struct InfectionRecovery AbstractInfection p infection p recovery end md\"\"\" Exercise 1.5 👉 Write a function `interact ` that takes an affected `agent` of type `Agent`, an `source` of type `Agent` and an `infection` of type `InfectionRecovery`. It implements a single one sided interaction between two agents If the `agent` is susceptible and the `source` is infectious, then the `source` infects our `agent` with the given infection probability. If the `source` successfully infects the other agent, then its `num infected` record must be updated. If the `agent` is infected then it recovers with the relevant probability. Otherwise, nothing happens. html\" span id interactfunction span \" \"\"\" function interact agent Agent, source Agent, infection InfectionRecovery your code here end md\"\"\" Play around with the test case below to test your function Try changing the definitions of `agent`, `source` and `infection`. Since we are working with randomness, you might want to run the cell multiple times. \"\"\" let agent Agent S, 0 source Agent I, 0 infection InfectionRecovery 0.9, 0.5 interact agent, source, infection agent agent, source source end md\"\"\" Exercise 2 Agent based model for an epidemic outbreak Monte Carlo simulation In this exercise we will build on Exercise 2 to write a Monte Carlo simulation of how an infection propagates in a population. Make sure to re use the functions that we have already written, and introduce new ones if they are helpful Short functions make it easier to understand what the function does and build up new functionality piece by piece. You should not use any global variables inside the functions Each function must accept as arguments all the information it requires to carry out its task. You need to think carefully about what the information each function requires. Exercise 2.1 👉 Write a function `step ` that takes a vector of `Agent`s and an `infection` of type `InfectionRecovery`. It implements a single step of the infection dynamics as follows Choose two random agents an `agent` and a `source`. Apply `interact agent, source, infection `. Return `agents`. \"\"\" function step agents Vector Agent , infection InfectionRecovery end md\"\"\" 👉 Write a function `sweep `. It runs `step ` N times, where N is the number of agents. Thus each agent acts, on average, once per sweep a sweep is thus the unit of time in our Monte Carlo simulation. \"\"\" function sweep agents Vector Agent , infection AbstractInfection end md\"\"\" 👉 Write a function `simulation` that does the following 1. Generate the N agents. 2. Run `sweep ` a number T of times. Calculate and store the total number of agents with each status at each step in variables `S counts`, `I counts` and `R counts`. 3. Return the vectors `S counts`, `I counts` and `R counts` in a named tuple , with keys `S`, `I` and `R`. You've seen an example of named tuples before the `student` variable at the top of the notebook Feel free to store the counts in a different way, as long as the return type is the same. \"\"\" function simulation N Integer, T Integer, infection AbstractInfection return S missing, I missing, R missing end simulation 3, 20, InfectionRecovery 0.9, 0.2 simulation 100, 1000, InfectionRecovery 0.005, 0.2 bind run basic sir Button \"Run simulation again \" let run basic sir N 100 T 1000 sim simulation N, T, InfectionRecovery 0.02, 0.002 result plot 1 T, sim.S, ylim 0, N , label \"Susceptible\" plot result, 1 T, sim.I, ylim 0, N , label \"Infectious\" plot result, 1 T, sim.R, ylim 0, N , label \"Recovered\" end md\"\"\" Exercise 2.2 Alright Every time that we run the simulation, we get slightly different results, because it is based on randomness. By running the simulation a number of times, you start to get an idea of the mean behaviour of our model. This is the essence of a Monte Carlo method You use computer generated randomness to generate samples. Instead of pressing the button many times, let's have the computer repeat the simulation. In the next cells, we run your simulation `num simulations 20` times with N 100 , p \\text infection 0.02 , p \\text infection 0.002 and T 1000 . Every single simulation returns a named tuple with the status counts, so the result of multiple simulations will be an array of those. Have a look inside the result, `simulations`, and make sure that its structure is clear. \"\"\" function repeat simulations N, T, infection, num simulations N 100 T 1000 map 1 num simulations do simulation N, T, infection end end simulations repeat simulations 100, 1000, InfectionRecovery 0.02, 0.002 , 20 md\"\"\" In the cell below, we plot the evolution of the number of I individuals as a function of time for each of the simulations on the same plot using transparency `alpha 0.5` inside the plot command . \"\"\" let p plot for sim in simulations plot p, 1 1000, sim.I, alpha .5, label nothing end p end md\"\"\" 👉 Write a function `sir mean plot` that returns a plot of the means of S , I and R as a function of time on a single graph. \"\"\" function sir mean plot simulations Vector NamedTuple you might need T for this function, here's a trick to get it T length first simulations .S return missing end sir mean plot simulations let T length first simulations .S all S counts map result result.S, simulations all I counts map result result.I, simulations all R counts map result result.R, simulations S round. sum all S counts . length simulations . 100, digits 4 , I round. sum all I counts . length simulations . 100, digits 4 , R round. sum all R counts . length simulations . 100, digits 4 end md\"\"\" 👉 Allow p \\text infection and p \\text recovery to be changed interactively and find parameter values for which you observe an epidemic outbreak. \"\"\" md\"\"\" 👉 Write a function `sir mean error plot` that does the same as `sir mean plot`, which also computes the standard deviation \\sigma of S , I , R at each step. Add this to the plot using error bars , using the option `yerr σ` in the plot command use transparency. This should confirm that the distribution of I at each step is pretty wide \"\"\" function sir mean error plot simulations Vector NamedTuple you might need T for this function, here's a trick to get it T length first simulations .S return missing end md\"\"\" Exercise 2.3 👉 Plot the probability distribution of `num infected`. Does it have a recognisable shape? Feel free to increase the number of agents in order to get better statistics. \"\"\" md\"\"\" Exercse 2.4 👉 What are three simple ways in which you could characterise the magnitude size of the epidemic outbreak? Find approximate values of these quantities for one of the runs of your simulation. \"\"\" md\"\"\" Exercise 3 Reinfection In this exercise we will re use our simulation infrastructure to study the dynamics of a different type of infection there is no immunity, and hence no \"recovery\" rather, susceptible individuals may now be re infected Exercise 3.1 👉 Make a new infection type `Reinfection`. This has the same two fields as `InfectionRecovery` `p infection` and `p recovery` . However, \"recovery\" now means \"becomes susceptible again\", instead of \"moves to the `R` class. This new type `Reinfection` should also be a subtype of `AbstractInfection`. This allows us to reuse our previous functions, which are defined for the abstract supertype. \"\"\" md\"\"\" 👉 Make a new method for the `interact ` function that accepts the new infection type as argument, reusing as much functionality as possible from the previous version. \"\"\" md\"\"\" Exercise 3.2 👉 Run the simulation 20 times and plot I as a function of time for each one, together with the mean over the 20 simulations as you did in the previous exercises . Note that you should be able to re use the `sweep ` and `simulation` functions , since those should be sufficiently generic to work with the new `step ` function Modify them if they are not. \"\"\" md\"\"\" 👉 Run the new simulation and draw I averaged over runs as a function of time. Is the behaviour qualitatively the same or different? Describe what you see. \"\"\" md\" Function library Just some helper functions used in the notebook.\" hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text md\"\"\" 👉 Calculate the mean number of infectious agents of our simulations for each time step. Add it to the plot using a heavier line `lw 3` for \"linewidth\" by modifying the cell above. Check the answer yourself does your curve follow the average trend? hint md\"This exercise requires some creative juggling with arrays, anonymous functions, `map`s, or whatever you see fit \" \"\"\" almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Fantastic \", md\"Splendid \", md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next section.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" if isdefined set status not defined set status else let agent Agent I,2 set status agent, R if agent.status R correct else keep working end end end if isdefined is susceptible not defined is susceptible else let result1 is susceptible Agent I,2 result2 is infected Agent I,2 if result1 isa Missing || result2 isa Missing still missing elseif result1 isa Bool || result2 isa Bool keep working md\"Make sure that you return either `true` or `false`.\" elseif result1 false && result2 true if is susceptible Agent S,3 && is infected Agent R,9 correct else keep working end else keep working end end end if isdefined generate agents not defined generate agents else let result generate agents 4 if result isa Missing still missing elseif result isa Nothing keep working \"The function returned `nothing`. Did you forget to return something?\" elseif result isa Vector || all x x isa Agent, result keep working md\"Make sure that you return an array of objects of the type `Agent`.\" elseif length result 4 almost md\"Make sure that you return `N` agents.\" elseif length Set result 4 almost md\"You returned the same agent `N` times. You need to call the `Agent` constructor `N` times, not once.\" else if sum a a.status I, result 1 almost md\"Exactly one of the agents should be infectious.\" else correct end end end end if isdefined interact not defined interact else let agent Agent S, 9 source Agent I, 0 interact agent, source, InfectionRecovery 0.0, 1.0 if source.status I || source.num infected 0 keep working md\"The `source` should not be modified if no infection occured.\" elseif agent.status S keep working md\"The `agent` should get infected with the right probability.\" else agent Agent S, 9 source Agent S, 0 interact agent, source, InfectionRecovery 1.0, 1.0 if source.status S || source.num infected 0 || agent.status S keep working md\"The `agent` should get infected with the right probability if the source is infectious.\" else agent Agent S, 9 source Agent I, 3 interact agent, source, InfectionRecovery 1.0, 1.0 if agent.status R almost md\"The agent should not recover immediately after becoming infectious.\" elseif agent.status S keep working md\"The `agent` should recover from an infectious state with the right probability.\" elseif source.status I || source.num infected 4 almost md\"The `source` did not get updated correctly after infecting the `agent`.\" else correct md\"Your function treats the susceptible agent case correctly \" end end end end end if isdefined interact not defined interact else let agent Agent I, 9 source Agent S, 0 interact agent, source, InfectionRecovery 1.0, 1.0 if source.status S || source.num infected 0 keep working md\"The `source` should not be modified if `agent` is infectious.\" elseif agent.status R keep working md\"The `agent` should recover from an infectious state with the right probability.\" elseif agent.num infected 9 keep working md\"`agent.num infected` should not be modified if `agent` is infectious.\" else let agent Agent I, 9 source Agent R, 0 interact agent, source, InfectionRecovery 1.0, 0.0 if agent.status R keep working md\"The `agent` should recover from an infectious state with the right probability.\" else correct md\"Your function treats the infectious agent case correctly \" end end end end end if isdefined interact not defined interact else let agent Agent R, 9 source Agent I, 0 interact agent, source, InfectionRecovery 1.0, 1.0 if source.status I || source.num infected 0 keep working md\"The `source` should not be modified if no infection occured.\" elseif agent.status R || agent.num infected 9 keep working md\"The `agent` should not be momdified if it is in a recoved state.\" else correct md\"Your function treats the recovered agent case correctly \" end end end bigbreak html\" br br br br br \" bigbreak bigbreak "},{"url":"homework/hw8/","title":"Epidemic modeling II","tags":["homework","module2","track_math","track_data","optimization","statistics","gradient","differentiation","automatic differentiation","continuous","probability","epidemiology","monte carlo","modeling","plotting"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 2 section 9.5 order 9.5 homework number 8 title \"Epidemic modeling II\" layout \"layout.jlhtml\" tags \"homework\", \"module2\", \"track math\", \"track data\", \"optimization\", \"statistics\", \"gradient\", \"differentiation\", \"automatic differentiation\", \"continuous\", \"probability\", \"epidemiology\", \"monte carlo\", \"modeling\", \"plotting\" description \"Learn about optimisation and gradient descent with help from our visuals and automatic checks. We use these new skill to fit parameters of an epidemic model to match reality.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end using Plots, PlutoUI md\" homework 8, version 3 \" md\"\"\" Homework 8 Epidemic modeling II `18.S191`, Fall 2023 This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. Feel free to ask questions \"\"\" md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" md\"\"\" In the past couple homeworks, we've messed around with probability distributions and Monte Carlo simulations. This time, we'll build a more mathematical model, and we'll use optimization to fit it to given data. Models have parameters , such as the rate of recovery from infection. Where do the parameter values come from? Ideally we would like to extract them from data. The goal of this homework is to do this by fitting a model to data. For simplicity, we will use data that generated from a spatial model one that simulates the movement of a population in space instead of real world data, and we will fit the simplest SIR model. But the same ideas apply more generally. There are many ways to fit a function to data, but all must involve some form of optimization , usually minimization of a particular function, a loss function this is the basis of the vast field of machine learning . The loss function is a function of the model parameters it measures how far the model output is from the data, for the given values of the parameters. We emphasise that this material is pedagogical there is no suggestion that these specific techniques should be used actual calculations rather, it is the underlying ideas that are important. \"\"\" md\"\"\" Exercise 1 Calculus without calculus \"\"\" md\"\"\" Before we jump in to simulating the SIR equations, let's experiment with a simple 1D function. In calculus, we learn techniques for differentiating and integrating symbolic equations, e.g. ``\\frac d dx x^n nx^ n 1 ``. But in real applications, it is often impossible to apply these techniques, either because the problem is too complicated to solve symbolically, or because our problem has no symbolic expression, like when working with experimental results. Instead, as you will recall from lecture, we use ✨ computers ✨ to approximate derivatives and integrals. Instead of applying rules to symbolic expressions, we use much simpler strategies that only use the output values of our function . One such example is the finite difference method for approximating the derivative of a function. It is inspired by the analytical definition of the derivative f' a \\lim h \\rightarrow 0 \\frac f a h f a h . The finite difference method simply fixes a small value for h , say h 10^ 3 , and then approximates the derivative as f' a \\simeq \\frac f a h f a h . \"\"\" md\"\"\" Exercise 1.1 tangent line 👉 Write a function `finite difference slope` that takes a function `f` and numbers `a` and `h`. It returns the slope ``f' a ``, approximated using the finite difference formula above. \"\"\" function finite difference slope f Function, a, h 1e 3 return missing end finite difference slope sqrt, 4.0, 5.0 md\"\"\" 👉 Write a function `tangent line` that takes the same arguments `f`, `a` and `g`, but it returns a function . This function ``\\mathbb R \\rightarrow \\mathbb R `` is the tangent line with slope ``f' a `` computed using `finite difference slope` that passes through `` a, f a ``. \"\"\" function tangent line f, a, h return missing end this is our test function wavy x .1x^3 1.6x^2 7x 3 md\"\"\" The slider below controls ``h`` using a log scale . In the mathematical definition of the derivative, we take ``\\lim h \\rightarrow 0 ``. This corresponds to moving the slider to the left. Notice that, as you decrease ``h``, the tangent line gets more accurate, but what happens if you make ``h`` too small? \"\"\" bind log h Slider 16 0.01 .5, default .5 h finite diff 10.0^log h zeroten LinRange 0.0, 10.0, 300 bind a finite diff Slider zeroten, default 4 let p plot zeroten, wavy, label \"f x \" scatter p, a finite diff , wavy a finite diff , label \"a\", color \"red\" vline p, a finite diff , label nothing, color \"red\", linestyle dash scatter p, a finite diff h finite diff , wavy a finite diff h finite diff , label \"a h\", color \"green\" try result tangent line wavy, a finite diff, h finite diff plot p, zeroten, result, label \"tangent\", color \"purple\" catch end plot p, xlim 0, 10 , ylim 2, 8 end | as svg md\"\"\" html\" span id theslopeequation span \" Exercise 1.2 antiderivative In the finite differences method, we approximated the derivative of a function f' a \\simeq \\frac f a h f a h We can do something very similar to approximate the 'antiderivate' of a function. Finding the antiderivative means that we use the slope ``f'`` to compute ``f`` numerically This antiderivative problem is illustrated below. The only information that we have is the slope at any point ``a \\in \\mathbb R ``, and we have one initial value , ``f 1 ``. \"\"\" in this exercise, only the derivative is given wavy deriv x .3x^2 3.2x 7 bind a euler Slider zeroten, default 1 let slope wavy deriv a euler p plot LinRange 1.0 0.1, 1.0 0.1, 2 , wavy, label nothing, lw 3 scatter p, 1 , wavy, label \"f 1 \", color \"blue\", lw 3 p plot x a euler 0.2,a euler 0.2 for y in 4 10 plot p, x, slope . x . a euler . y, label nothing, color \"purple\", opacity .6 end vline p, a euler , color \"red\", label \"a\", linestyle dash plot p, xlim 0, 10 , ylim 2, 8 end | as svg md\"\"\" Using only this information, we want to reconstruct ``f``. By rearranging the equation above theslopeequation , we get the Euler method f a h \\simeq hf' a f a Using this formula, we only need to know the value ``f a `` and the slope ``f' a `` of a function at ``a`` to get the value at ``a h``. Doing this repeatedly can give us the value at ``a 2h``, at ``a 3h``, etc., all from one initial value ``f a ``. 👉 Write a function `euler integrate step` that applies this formula to a known function ``f'`` at ``a``, with step size ``h`` and the initial value ``f a ``. It returns the next value, ``f a h ``. \"\"\" function euler integrate step fprime Function, fa Number, a Number, h Number return missing end md\"\"\" 👉 Write a function `euler integrate` that takes takes a known function ``f'``, the initial value ``f a `` and a range `T` with `a first T ` and `h step T `. It applies the function `euler integrate step` repeatedly, once per entry in `T`, to produce the sequence of values ``f a h ``, ``f a 2h ``, etc. \"\"\" function euler integrate fprime Function, fa Number, T AbstractRange a0 T 1 h step T return missing end md\"\"\" Let's try it out on ``f' x 3x^2`` and `T` ranging from ``0`` to ``10``. We already know the analytical solution ``f x x^3``, so the result should be an array going from approximately `0.0` to `1000.0`. \"\"\" euler test let fprime x 3x^2 T 0 0.1 10 euler integrate fprime, 0, T end bind N euler Slider 2 40 let a 1 h .3 history euler integrate wavy deriv, wavy a , range a step h, length N euler slope wavy deriv a euler p plot zeroten, wavy, label \"exact solution\", lw 3, opacity .1, color \"gray\" p plot last a a N euler 1 h vline p, last a , color \"red\", label \"a\", linestyle dash try plot p, a . h . 1 N euler , history, color \"blue\", label nothing scatter p, a . h . 1 N euler , history, color \"blue\", label \"appromixation\", markersize 2, markerstrokewidth 0 plot p, 0,10 , 0,10 . last a h . wavy deriv last a h . history end , label \"tangent\", color \"purple\" catch end plot p, xlim 0, 10 , ylim 2, 8 end | as svg md\"\"\" You see that our numerical antiderivate is not very accurate, but we can get a smaller error by choosing a smaller step size. Try it out There are also alternative integration methods that are more accurate with the same step size. Some methods also use the second derivative, other methods use multiple steps at once, etc. This is the study of Numerical Methods. \"\"\" md\"\"\" Exercise 2 Simulating the SIR differential equations We will look at a type of mathematical model for epidemic outbreaks called the SIR model . In this model, we consider three functions of time t the fraction of the population s t that is susceptible to the disease, the fraction i t that is infected , and the fraction r t that has recovered . We've already used these three quantities in a simulation before, namely in the Monte Carlo simulation from last homework It turns out that, given some assumptions about how people from the three groups interact over time, we can model the behavior of the three quantities in terms of their derivatives with respect to time t . We use two parameters \\beta and \\gamma , and with them, we can form a system of ordinary differential equations ODEs for the SIR model. They are as follows \\begin align \\dot s & \\beta s \\, i \\\\ \\dot i & \\beta s \\, i \\gamma i \\\\ \\dot r & \\gamma i \\end align where ``\\dot s \\frac ds dt `` is the derivative of s with respect to time. Recall that s denotes the proportion fraction of the population that is susceptible, a number between 0 and 1 . We will use the simplest possible method to simulate these, namely the Euler method . The Euler method is not always a good method to solve ODEs accurately, but for our purposes it is good enough. In the previous exercise, we introduced the Euler method for a 1D function, which you can see as an ODE that only depends on time. For the SIR equations, we have an ODE that only depends on the previous value , not on time, and we have 3 equations instead of 1. The solution is quite simple, we apply the Euler method to each of the differential equations within a single time step to get new values for each of s , i and r at the end of the time step in terms of the values at the start of the time step. The Euler discretised equations are \\begin align s t h & s t h\\,\\cdot\\beta s t \\, i t \\\\ i t h & i t h\\,\\cdot \\beta s t \\, i t \\gamma i t \\\\ r t h & r t h\\,\\cdot \\gamma i t \\end align 👉 Implement a function `euler SIR step β, γ, sir 0, h ` that performs a single Euler step for these equations with the given parameter values and initial values, with a step size h . `sir 0` is a 3 element vector, and you should return a new 3 element vector with the values after the timestep. \"\"\" function euler SIR step β, γ, sir 0 Vector, h Number s, i, r sir 0 return missing, missing, missing, end euler SIR step 0.1, 0.05, 0.99, 0.01, 0.00 , 0.1 md\"\"\" 👉 Implement a function `euler SIR β, γ, sir 0, T ` that applies the previously defined function over a time range T . You should return a vector of vectors a 3 element vector for each point in time. \"\"\" function euler SIR β, γ, sir 0 Vector, T AbstractRange T is a range, you get the step size and number of steps like so h step T num steps length T return missing end sir T 0 0.1 60.0 sir results euler SIR 0.3, 0.15, 0.99, 0.01, 0.00 , sir T md\"\"\" Let's plot s , i and r as a function of time. \"\"\" function plot sir p, T, results label \"\", kwargs... s getindex. results, 1 i getindex. results, 2 r getindex. results, 3 plot p, T, s color 1, label label \" S\", lw 3, kwargs... plot p, T, i color 2, label label \" I\", lw 3, kwargs... plot p, T, r color 3, label label \" R\", lw 3, kwargs... p end plot sir plot , sir T, sir results md\"\"\" 👉 Do you see an epidemic outbreak i.e. a rapid growth in number of infected individuals, followed by a decline ? What happens after a long time? Does everybody get infected? \"\"\" default SIR parameters observation md\"\"\" your answer here \"\"\" md\"\"\" 👉 Make an interactive visualization, similar to the above plot, in which you vary \\beta and \\gamma via sliders. What relation should \\beta and \\gamma have for an epidemic outbreak to occur? \"\"\" md\"\"\" Exercise 3 Numerical gradient For fitting we need optimization, and for optimization we will use derivatives rates of change . In Exercise 1, we wrote a function `finite difference slope f, a ` to approximate ``f' a ``. In this exercise we will write a function to compute partial derivatives . \"\"\" md\"\"\" Exercise 3.1 👉 Write functions `∂x f, a, b ` and `∂y f, a, b ` that calculate the partial derivatives \\frac \\partial f \\partial x and \\frac \\partial f \\partial y at a, b of a function f \\mathbb R ^2 \\to \\mathbb R i.e. a function that takes two real numbers and returns one real . Recall that \\frac \\partial f \\partial x is the derivative of the single variable function g x f x, b obtained by fixing the value of y to b . You should use anonymous functions for this. These have the form `x x^2`, meaning \"the function that sends x to x^2 \". \"\"\" function ∂x f Function, a, b return missing end ∂x x, y 7x^2 y, 3, 7 function ∂y f Function, a, b return missing end ∂y x, y 7x^2 y, 3, 7 md\"\"\" Exercise 3.2 👉 Write a function `gradient f, a, b ` that calculates the gradient of a function f at the point a, b , given by the vector \\nabla f a, b \\frac \\partial f \\partial x a, b , \\frac \\partial f \\partial y a, b . \"\"\" function gradient f Function, a, b return missing end gradient x, y 7x^2 y, 3, 7 md\"\"\" Exercise 4 Minimisation using gradient descent In this exercise we will use gradient descent to find local minima of smooth enough functions, revisiting what we saw on the lectures. As a refresher, we'll want to think of a function as a hill. To find a minimum we should \"roll down the hill\". Exercise 4.1 We want to minimize a 1D function, i.e. a function f \\mathbb R \\to \\mathbb R . To do so we notice that the derivative tells us the direction in which the function increases . Positive slope means that the minimum is to the left, negative slope means to the right. So our gradient descent method is to take steps in the opposite direction, of a small size \\eta \\cdot f' x 0 . 👉 Write a function `gradient descent 1d step f, x0 ` that performs a single gradient descent step, from the point `x0` and using your function `finite difference slope` to approximate the derivative. The result should be the next guess for ``x``. \"\"\" function gradient descent 1d step f, x0 η 0.01 return missing end let f x x^2 the minimum is at 0, so we should take a small step to the left gradient descent 1d step f, 5 end bind N gradient 1d Slider 0 20 md\" ``x 0 `` bind x0 gradient 1d Slider 3 .01 1.5, default 1, show value true \" function gradient 1d viz N gradient 1d, x0 f x x^4 3x^3 3x 5. x LinRange 3, 1.5, 200 history accumulate 1 N gradient 1d, init x0 do old, gradient descent 1d step f, old, η .025 end all x0, history... slope wavy deriv a euler p plot x, f, label \"f x \", lw 3, opacity .6, color \"gray\" p plot plot p, all, f, color \"blue\", opacity range .5,step .2,length length all , label nothing scatter p, all, f, color \"blue\", label \"gradient descent\", markersize 3, markerstrokewidth 0 as svg p end gradient 1d viz N gradient 1d, x0 gradient 1d md\"\"\" 👉 Write a function `gradient descent 1d f, x0 ` that repeatedly applies the previous function `N steps` times , starting from the point `x0`, like in the vizualisation above. The result should be the final guess for ``x``. \"\"\" function gradient descent 1d f, x0 η 0.01, N steps 1000 return missing end let f x x 5 ^2 3 minimum should be at x 5 gradient descent 1d f, 0.0 end md\"\"\" Right now we take a fixed number of steps, even if the minimum is found quickly. What would be a better way to decide when to end the function? \"\"\" better stopping idea md\"\"\" your answer here \"\"\" md\"\"\" Exericse 4.2 Multivariable calculus tells us that the gradient \\nabla f a, b at a point a, b is the direction in which the function increases the fastest. So again we should take a small step in the opposite direction. Note that the gradient is a vector which tells us which direction to move in the plane a, b . We multiply this vector with the scalar ``\\eta`` to control the step size. 👉 Write functions `gradient descent 2d step f, x0, y0 ` and `gradient descent 2d f, x0, y0 ` that do the same for functions f x, y of two variables. \"\"\" function gradient descent 2d step f, x0, y0 η 0.01 return missing end function gradient descent 2d f, x0, y0 η 0.01 return missing end bind N gradient 2d Slider 0 20 md\" ``x 0 `` bind x0 gradient 2d Slider 4 .01 4, default 0, show value true \" md\" ``y 0 `` bind y0 gradient 2d Slider 4 .01 4, default 0, show value true \" himmelbau x, y x^2 y 11 ^2 x y^2 7 ^2 gradient descent 2d himmelbau, 0, 0 md\"\"\" We also prepared a 3D visualisation if you like It's a bit slow... \"\"\" run 3d visualisation false function gradient 2d viz 3d N gradient 2d, x0, y0 history accumulate 1 N gradient 2d, init x0, y0 do old, gradient descent 2d step himmelbau, old... end all x0, y0 , history... p surface 4 0.4 5, 4 0.4 4, himmelbau trace himmelbau s... for s in all plot p, first. all , last. all , trace, color \"blue\", opacity range .5,step .2,length length all , label nothing scatter p, first. all , last. all , trace, color \"blue\", label \"gradient descent\", markersize 3, markerstrokewidth 0 as svg p end if run 3d visualisation let we temporarily change the plotting backend to an interactive one plotly we dont use the sliders because this plot is quite slow x0 0.5 N 20 y0 3 p gradient 2d viz 3d N, x0, y0 gr p end end function gradient 2d viz 2d N gradient 2d, x0, y0 history accumulate 1 N gradient 2d, init x0, y0 do old, gradient descent 2d step himmelbau, old... end all x0, y0 , history... p heatmap 4 0.4 5, 4 0.4 4, himmelbau plot p, first. all , last. all , color \"blue\", opacity range .5,step .2,length length all , label nothing scatter p, first. all , last. all , color \"blue\", label \"gradient descent\", markersize 3, markerstrokewidth 0 as svg p end gradient 2d viz 2d N gradient 2d, x0 gradient 2d, y0 gradient 2d md\"\"\" 👉 Can you find different minima? \"\"\" md\"\"\" Exercise 5 Learning parameter values In this exercise we will apply gradient descent to fit a simple function y f \\alpha, \\beta x to some data given as pairs x i, y i . Here \\alpha and \\beta are parameters that appear in the form of the function f . We want to find the parameters that provide the best fit , i.e. the version f \\alpha, \\beta of the function that is closest to the data when we vary \\alpha and \\beta . To do so we need to define what \"best\" means. We will define a measure of the distance between the function and the data, given by a loss function , which itself depends on the values of \\alpha and \\beta . Then we will minimize the loss function over \\alpha and \\beta to find those values that minimize this distance, and hence are \"best\" in this precise sense. The iterative procedure by which we gradually adjust the parameter values to improve the loss function is often called machine learning or just learning , since the computer is \"discovering\" information in a gradual way, which is supposed to remind us of how humans learn. Hint This is not how humans learn. Exercise 5.1 🎲 frequencies We generate a small dataset by throwing 10 dice, and counting the sum. We repeat this experiment many times, giving us a frequency distribution in a familiar shape. \"\"\" import Statistics function dice frequencies N dice, N experiments experiment let sum of rolls sum rand 1 6, N dice end results experiment for in 1 N experiments x N dice N dice 6 y map x do total sum isequal total , results end . N experiments x, y end dice x, dice y dice frequencies 10, 20 000 md\"\"\" Let's try to fit a gaussian normal distribution. Its PDF with mean \\mu and standard deviation \\sigma is f \\mu, \\sigma x \\frac 1 \\sigma \\sqrt 2 \\pi \\exp \\left \\frac x \\mu ^2 2 \\sigma^2 \\right 👉 Not graded Manually fit a Gaussian distribution to our data by adjusting ``\\mu`` and ``\\sigma`` until you find a good fit. \"\"\" md\"μ bind guess μ Slider 1 0.1 last dice x default last dice x 0.4, show value true \" md\"σ bind guess σ Slider 0.1 0.1 last dice x 2 default 12, show value true \" md\"Show manual fit bind show manual fit CheckBox \" function gauss x, μ, σ 1 sqrt 2π σ exp x μ ^2 σ^2 2 end md\"\"\" What we just did was adjusting the function parameters until we found the best possible fit. Let's automate this process To do so, we need to quantify how good or bad a fit is. 👉 Define a loss function to measure the \"distance\" between the actual data and the function. It will depend on the values of \\mu and \\sigma that you choose \\mathcal L \\mu, \\sigma \\sum i f \\mu, \\sigma x i y i ^2 \"\"\" function loss dice μ, σ return missing end loss dice guess μ 3, guess σ loss dice guess μ, guess σ md\"\"\" 👉 Use your `gradient descent 2d` function to find a local minimum of \\mathcal L , starting with initial values \\mu 30 and \\sigma 1 . Call the found parameters `found μ` and `found σ`. \"\"\" found μ, found σ let your code here missing, missing end let p plot dice x, dice y, size 600, 200 , label \"data\" if show manual fit plot p, dice x, gauss. dice x, guess μ , guess σ , label \"manual fit\" end try plot p, dice x, gauss. dice x, found μ , found σ , label \"optimized fit\" catch end p end md\"\"\" Go back to the graph to see your optimized gaussian curve If your fit is close, then probability theory tells us that the found parameter ``\\mu`` should be close to the weighted mean of our data, and ``\\sigma`` should approximate the sample standard deviation . We have already computed these values, and we check how close they are \"\"\" stats μ sum dice x . dice y abs stats μ found μ stats σ sqrt sum dice x.^2 . dice y stats μ .^ 2 abs stats σ found σ md\"\"\" Exercise 6 Putting it all together — fitting an SIR model to data In this exercise we will fit the non spatial SIR ODE model from Exercise 2 to some data generated from a different, spatial epidemic model, as we mentioned at the beginning. If we are able to find a good fit, that would suggest that the spatial aspect \"does not matter\" too much for the dynamics of these models. If the fit is not so good, perhaps there is an important effect of space. As usual in statistics, and indeed in modelling in general, we should be very cautious of making claims of this nature. This fitting procedure will be different from that in Exercise 4, however we no longer have an explicit form for the function that we are fitting. Rather, it is simply the output of an ODE So what should we do? We will try to find the parameters \\beta and \\gamma for which the output of the ODEs when we simulate it with those parameters best matches the data Exercise 6.1 Below is the result from the spatial model. These are the average S, I, R fractions from running 20 simulations. Click on it \"\"\" hw4 results transposed S 0.99, 0.9895, 0.9895, 0.989, 0.9885, 0.9885, 0.9885, 0.988, 0.9865, 0.986, 0.9855, 0.9855, 0.9855, 0.9845, 0.9845, 0.9845, 0.984, 0.984, 0.984, 0.9835, 0.9835, 0.982, 0.982, 0.982, 0.982, 0.9815, 0.981, 0.9805, 0.98, 0.98, 0.98, 0.98, 0.9795, 0.9795, 0.979, 0.979, 0.979, 0.978, 0.9775, 0.9775, 0.977, 0.976, 0.9755, 0.9745, 0.9735, 0.9735, 0.973, 0.972, 0.972, 0.972, 0.971, 0.971, 0.9695, 0.968, 0.9675, 0.967, 0.9665, 0.966, 0.9655, 0.9645, 0.9645, 0.9645, 0.964, 0.9615, 0.9595, 0.959, 0.958, 0.9575, 0.9575, 0.9575, 0.9565, 0.956, 0.954, 0.9535, 0.9535, 0.951, 0.95, 0.949, 0.9485, 0.948, 0.947, 0.9465, 0.9465, 0.9455, 0.945, 0.9425, 0.9415, 0.9405, 0.9395, 0.9385, 0.938, 0.937, 0.9355, 0.9355, 0.935, 0.9325, 0.932, 0.93, 0.929, 0.927, 0.9265, 0.926, 0.9245, 0.924, 0.9235, 0.923, 0.9225, 0.9225, 0.922, 0.9215, 0.9195, 0.918, 0.915, 0.9125, 0.911, 0.907, 0.9055, 0.9045, 0.9025, 0.9005, 0.899, 0.898, 0.8965, 0.8955, 0.893, 0.892, 0.89, 0.8875, 0.885, 0.8835, 0.882, 0.8805, 0.8785, 0.8755, 0.8735, 0.869, 0.868, 0.868, 0.8645, 0.8625, 0.8605, 0.8575, 0.8545, 0.8505, 0.847, 0.8455, 0.8435, 0.8415, 0.84, 0.8385, 0.8365, 0.8345, 0.829, 0.826, 0.824, 0.822, 0.817, 0.8145, 0.814, 0.811, 0.8095, 0.8075, 0.805, 0.8005, 0.7985, 0.7965, 0.793, 0.7895, 0.7865, 0.785, 0.7815, 0.779, 0.776, 0.769, 0.7655, 0.764, 0.7625, 0.7595, 0.7575, 0.754, 0.751, 0.7485, 0.743, 0.7395, 0.736, 0.7355, 0.732, 0.728, 0.725, 0.7235, 0.7215, 0.718, 0.7165, 0.7135, 0.7095, 0.709, 0.705, 0.7015, 0.699, 0.697, 0.694, 0.69, 0.685, 0.6835, 0.6805, 0.6795, 0.6765, 0.6745, 0.6735, 0.6705, 0.6665, 0.6625, 0.66, 0.656, 0.653, 0.65, 0.6465, 0.641, 0.639, 0.6365, 0.6335, 0.632, 0.6285, 0.6265, 0.623, 0.6195, 0.617, 0.6125, 0.609, 0.607, 0.6045, 0.601, 0.596, 0.591, 0.5905, 0.5885, 0.5825, 0.579, 0.576, 0.574, 0.5705, 0.569, 0.563, 0.559, 0.5565, 0.555, 0.5515, 0.546, 0.5455, 0.5435, 0.5395, 0.538, 0.535, 0.5315, 0.528, 0.525, 0.523, 0.519, 0.516, 0.513, 0.511, 0.509, 0.5065, 0.5045, 0.5015, 0.497, 0.4925, 0.488, 0.485, 0.4795, 0.473, 0.47, 0.465, 0.4595, 0.457, 0.454, 0.45, 0.447, 0.444, 0.4405, 0.4385, 0.4345, 0.431, 0.4275, 0.4245, 0.422, 0.421, 0.418, 0.414, 0.411, 0.4075, 0.404, 0.4015, 0.398, 0.3945, 0.3915, 0.39, 0.3875, 0.385, 0.3825, 0.379, 0.3765, 0.3725, 0.3685, 0.3655, 0.364, 0.359, 0.3555, 0.3555, 0.354, 0.351, 0.3495, 0.347, 0.345, 0.343, 0.341, 0.3365, 0.3325, 0.3325, 0.3275, 0.3255, 0.3225, 0.3205, 0.3195, 0.3175, 0.316, 0.313, 0.3125, 0.31, 0.308, 0.3055, 0.302, 0.301, 0.299, 0.297, 0.294, 0.29, 0.2895, 0.2855, 0.283, 0.2825, 0.279, 0.276, 0.273, 0.2695, 0.2665, 0.2655, 0.2635, 0.261, 0.2595, 0.258, 0.257, 0.254, 0.2535, 0.251, 0.25, 0.2465, 0.245, 0.2435, 0.2415, 0.2405, 0.238, 0.2365, 0.235, 0.2335, 0.2325, 0.23, 0.2275, 0.226, 0.2245, 0.2235, 0.223, 0.22, 0.218, 0.2165, 0.2135, 0.2135, 0.2095, 0.2075, 0.206, 0.205, 0.2045, 0.2025, 0.201, 0.2, 0.1985, 0.1985, 0.196, 0.1945, 0.1915, 0.1895, 0.188, 0.185, 0.184, 0.1835, 0.1835, 0.183, 0.183, 0.182, 0.182, 0.1805, 0.179, 0.1785, 0.177, 0.176, 0.1745, 0.174, 0.1735, 0.173, 0.1715, 0.171, 0.1685, 0.167, 0.1665, 0.165, 0.1645, 0.163, 0.162, 0.162, 0.1605, 0.1605, 0.16, 0.159, 0.158, 0.1555, 0.155, 0.1545, 0.1545, 0.152, 0.1505, 0.15, 0.149, 0.1475, 0.1465, 0.1445, 0.1435, 0.142, 0.1405, 0.14, 0.14, 0.139, 0.139, 0.1375, 0.137, 0.136, 0.1355, 0.135, 0.134, 0.1335, 0.133, 0.133, 0.1325, 0.1315, 0.1305, 0.13, 0.1295, 0.1295, 0.1275, 0.1265, 0.126, 0.126, 0.125, 0.124, 0.124, 0.1235, 0.1225, 0.1225, 0.1225, 0.122, 0.121, 0.1205, 0.1205, 0.1195, 0.1185, 0.117, 0.1145, 0.1135, 0.113, 0.113, 0.113, 0.112, 0.1105, 0.11, 0.109, 0.1085, 0.1055, 0.1055, 0.105, 0.105, 0.105, 0.105, 0.1035, 0.103, 0.1025, 0.102, 0.101, 0.1005, 0.0995, 0.099, 0.0975, 0.0965, 0.096, 0.096, 0.095, 0.095, 0.095, 0.0945, 0.0935, 0.0935, 0.0925, 0.091, 0.091, 0.0905, 0.09, 0.09, 0.09, 0.09, 0.0895, 0.0895, 0.0895, 0.088, 0.087, 0.0865, 0.0865, 0.086, 0.085, 0.085, 0.0845, 0.0845, 0.084, 0.084, 0.084, 0.084, 0.0835, 0.0825, 0.0825, 0.082, 0.082, 0.0815, 0.081, 0.081, 0.0805, 0.0795, 0.0795, 0.0795, 0.0795, 0.0795, 0.079, 0.0785, 0.078, 0.0775, 0.077, 0.076, 0.076, 0.076, 0.076, 0.076, 0.0755, 0.0755, 0.0755, 0.0755, 0.0755, 0.075, 0.075, 0.075, 0.075, 0.074, 0.074, 0.074, 0.0735, 0.0735, 0.0735, 0.0735, 0.073, 0.072, 0.072, 0.072, 0.072, 0.0715, 0.0715, 0.0715, 0.0705, 0.0705, 0.0695, 0.0695, 0.0695, 0.0695, 0.0695, 0.0695, 0.069, 0.069, 0.0685, 0.0685, 0.0685, 0.0685, 0.0685, 0.0685, 0.068, 0.0675, 0.0665, 0.0665, 0.0665, 0.0665, 0.0665, 0.066, 0.066, 0.066, 0.0655, 0.065, 0.065, 0.065, 0.0645, 0.0645, 0.0645, 0.0645, 0.064, 0.064, 0.0635, 0.0635, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.062, 0.062, 0.062, 0.062, 0.062, 0.062, 0.062, 0.062, 0.062, 0.062, 0.062, 0.0615, 0.0615, 0.0615, 0.0615, 0.0615, 0.0615, 0.061, 0.0605, 0.0605, 0.0605, 0.06, 0.0595, 0.0595, 0.0595, 0.059, 0.059, 0.0585, 0.0585, 0.0585, 0.0585, 0.0585, 0.0585, 0.0585, 0.0585, 0.0585, 0.0585, 0.0585, 0.0585, 0.0585, 0.058, 0.058, 0.058, 0.058, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.0575, 0.057, 0.057, 0.057, 0.057, 0.057, 0.057, 0.057, 0.057, 0.057, 0.057, 0.057, 0.057, 0.0565, 0.0565, 0.0565, 0.0565, 0.0565, 0.0565, 0.0565, 0.0565, 0.0565, 0.0565, 0.0565, 0.0565, 0.0565, 0.056, 0.056, 0.056, 0.056, 0.056, 0.0555, 0.0555, 0.0555, 0.0555, 0.0555, 0.0555, 0.0555, 0.0555, 0.0555, 0.0555, 0.0555, 0.055, 0.055, 0.0545, 0.054, 0.054, 0.054, 0.054, 0.054, 0.054, 0.054, 0.054, 0.054, 0.054, 0.054, 0.054, 0.054, 0.054, 0.054, 0.054, 0.054, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.0525, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.0515, 0.0515, 0.0515, 0.0515, 0.0515, 0.0515, 0.0515, 0.0515, 0.0515, 0.0515, 0.0515, 0.0515, 0.0515, 0.0515, 0.0515, 0.0515, 0.051, 0.051, 0.051, 0.051, 0.051, 0.051, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.0505, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05 , I 0.01, 0.0105, 0.0105, 0.011, 0.0115, 0.0115, 0.0115, 0.0115, 0.013, 0.0135, 0.014, 0.014, 0.014, 0.015, 0.015, 0.015, 0.0155, 0.0155, 0.0155, 0.016, 0.016, 0.0175, 0.0175, 0.0175, 0.017, 0.0175, 0.018, 0.0185, 0.019, 0.019, 0.019, 0.019, 0.0195, 0.0195, 0.02, 0.02, 0.0195, 0.0205, 0.0205, 0.0205, 0.021, 0.022, 0.022, 0.023, 0.024, 0.024, 0.0245, 0.0255, 0.0255, 0.0255, 0.0265, 0.0265, 0.028, 0.0295, 0.03, 0.0305, 0.031, 0.0315, 0.032, 0.033, 0.033, 0.033, 0.0335, 0.036, 0.037, 0.0375, 0.0385, 0.039, 0.039, 0.039, 0.0395, 0.0395, 0.0415, 0.042, 0.0415, 0.0435, 0.0445, 0.0455, 0.0455, 0.046, 0.047, 0.0475, 0.0475, 0.0485, 0.0485, 0.051, 0.052, 0.053, 0.053, 0.054, 0.0545, 0.0555, 0.057, 0.057, 0.0575, 0.06, 0.0605, 0.0625, 0.0635, 0.0645, 0.065, 0.0655, 0.067, 0.0675, 0.068, 0.0685, 0.069, 0.069, 0.0695, 0.07, 0.072, 0.0735, 0.076, 0.0785, 0.0795, 0.0835, 0.0845, 0.0855, 0.0875, 0.0895, 0.091, 0.0915, 0.093, 0.0935, 0.096, 0.097, 0.0985, 0.101, 0.1035, 0.105, 0.1065, 0.108, 0.1095, 0.1125, 0.1135, 0.1175, 0.1185, 0.1185, 0.122, 0.124, 0.126, 0.1285, 0.1315, 0.1355, 0.1385, 0.14, 0.1415, 0.1435, 0.1445, 0.144, 0.146, 0.148, 0.1535, 0.1565, 0.1585, 0.1605, 0.1655, 0.1675, 0.168, 0.171, 0.172, 0.174, 0.176, 0.1795, 0.181, 0.1815, 0.1845, 0.188, 0.191, 0.192, 0.1955, 0.1975, 0.199, 0.206, 0.209, 0.21, 0.2105, 0.213, 0.215, 0.218, 0.2205, 0.2225, 0.2275, 0.2305, 0.2335, 0.2335, 0.2365, 0.24, 0.242, 0.242, 0.244, 0.2465, 0.2475, 0.2505, 0.2535, 0.2525, 0.256, 0.259, 0.261, 0.2625, 0.2645, 0.268, 0.273, 0.273, 0.2745, 0.2755, 0.278, 0.28, 0.281, 0.2835, 0.2865, 0.2905, 0.292, 0.295, 0.2975, 0.3, 0.303, 0.308, 0.3095, 0.3115, 0.313, 0.3145, 0.318, 0.319, 0.3225, 0.326, 0.328, 0.332, 0.333, 0.334, 0.3355, 0.3385, 0.3435, 0.348, 0.3475, 0.347, 0.353, 0.356, 0.3585, 0.36, 0.3635, 0.365, 0.371, 0.3745, 0.376, 0.3765, 0.379, 0.3835, 0.384, 0.386, 0.3875, 0.3875, 0.3895, 0.3915, 0.395, 0.397, 0.3975, 0.3995, 0.402, 0.4035, 0.4055, 0.4075, 0.409, 0.41, 0.4115, 0.416, 0.42, 0.424, 0.4255, 0.4305, 0.4355, 0.4375, 0.441, 0.445, 0.4465, 0.4475, 0.4505, 0.4535, 0.4565, 0.4595, 0.4605, 0.4635, 0.4665, 0.4695, 0.472, 0.474, 0.4745, 0.4775, 0.48, 0.483, 0.4835, 0.4865, 0.489, 0.491, 0.4935, 0.495, 0.4945, 0.4965, 0.4985, 0.5, 0.502, 0.5045, 0.508, 0.51, 0.5125, 0.514, 0.518, 0.52, 0.5185, 0.519, 0.5215, 0.522, 0.5225, 0.5235, 0.5245, 0.525, 0.529, 0.5315, 0.5315, 0.5345, 0.5355, 0.5375, 0.5385, 0.538, 0.54, 0.541, 0.5435, 0.5425, 0.5445, 0.545, 0.547, 0.549, 0.549, 0.55, 0.551, 0.553, 0.5565, 0.557, 0.56, 0.562, 0.5615, 0.564, 0.5655, 0.5655, 0.5665, 0.569, 0.567, 0.5665, 0.569, 0.568, 0.568, 0.5675, 0.5695, 0.569, 0.5705, 0.5695, 0.572, 0.5725, 0.574, 0.575, 0.5755, 0.5775, 0.5775, 0.5785, 0.5785, 0.579, 0.5805, 0.582, 0.583, 0.583, 0.583, 0.5815, 0.5825, 0.584, 0.585, 0.5855, 0.584, 0.5865, 0.587, 0.5875, 0.5875, 0.5865, 0.587, 0.587, 0.5875, 0.588, 0.5865, 0.588, 0.5885, 0.5905, 0.5915, 0.5925, 0.5945, 0.5935, 0.592, 0.5905, 0.5905, 0.5905, 0.5905, 0.59, 0.59, 0.5905, 0.589, 0.589, 0.5885, 0.5875, 0.5875, 0.585, 0.584, 0.584, 0.583, 0.5835, 0.583, 0.582, 0.5825, 0.582, 0.5825, 0.582, 0.581, 0.582, 0.581, 0.579, 0.5785, 0.5775, 0.5795, 0.58, 0.579, 0.576, 0.578, 0.579, 0.579, 0.578, 0.5795, 0.5795, 0.5805, 0.58, 0.5805, 0.5815, 0.5805, 0.5795, 0.5795, 0.5775, 0.5765, 0.576, 0.5765, 0.576, 0.5755, 0.5755, 0.5755, 0.575, 0.5745, 0.5745, 0.574, 0.573, 0.573, 0.5715, 0.568, 0.5695, 0.5705, 0.571, 0.5705, 0.5695, 0.5695, 0.569, 0.569, 0.569, 0.5685, 0.566, 0.565, 0.5655, 0.565, 0.564, 0.564, 0.563, 0.563, 0.565, 0.564, 0.564, 0.563, 0.563, 0.5635, 0.564, 0.563, 0.5635, 0.563, 0.5655, 0.564, 0.5635, 0.562, 0.562, 0.5605, 0.5605, 0.5595, 0.559, 0.5595, 0.5595, 0.559, 0.558, 0.557, 0.5575, 0.5575, 0.556, 0.5555, 0.5545, 0.5525, 0.5495, 0.549, 0.549, 0.5475, 0.5475, 0.548, 0.548, 0.548, 0.547, 0.5445, 0.5425, 0.5425, 0.5425, 0.5415, 0.541, 0.5415, 0.541, 0.5405, 0.5395, 0.5395, 0.54, 0.539, 0.539, 0.5375, 0.5365, 0.5355, 0.535, 0.5345, 0.534, 0.5345, 0.534, 0.533, 0.5325, 0.5315, 0.532, 0.5315, 0.5315, 0.5315, 0.531, 0.53, 0.5295, 0.528, 0.526, 0.5255, 0.5235, 0.524, 0.523, 0.5215, 0.521, 0.521, 0.5205, 0.5205, 0.5205, 0.52, 0.519, 0.5185, 0.517, 0.5165, 0.5145, 0.5135, 0.513, 0.513, 0.513, 0.513, 0.5135, 0.5125, 0.5125, 0.511, 0.5115, 0.5125, 0.5115, 0.511, 0.511, 0.51, 0.5095, 0.509, 0.509, 0.5065, 0.5065, 0.506, 0.5045, 0.504, 0.502, 0.4995, 0.4995, 0.4995, 0.4995, 0.4985, 0.4965, 0.493, 0.492, 0.492, 0.491, 0.49, 0.4905, 0.4905, 0.4905, 0.4905, 0.4895, 0.489, 0.488, 0.4875, 0.488, 0.486, 0.4855, 0.4855, 0.485, 0.484, 0.483, 0.4825, 0.483, 0.482, 0.4815, 0.481, 0.4815, 0.4805, 0.4785, 0.4775, 0.477, 0.475, 0.4735, 0.473, 0.4725, 0.471, 0.4705, 0.47, 0.469, 0.4675, 0.4675, 0.466, 0.466, 0.4645, 0.4635, 0.4625, 0.4615, 0.461, 0.46, 0.4595, 0.458, 0.458, 0.457, 0.457, 0.4565, 0.4545, 0.454, 0.453, 0.452, 0.451, 0.4495, 0.449, 0.448, 0.4465, 0.4465, 0.4455, 0.4455, 0.4455, 0.4455, 0.4455, 0.445, 0.444, 0.444, 0.4425, 0.4415, 0.44, 0.4385, 0.438, 0.437, 0.436, 0.4355, 0.435, 0.4345, 0.432, 0.4295, 0.4295, 0.428, 0.427, 0.426, 0.4255, 0.4245, 0.4215, 0.4215, 0.4205, 0.4205, 0.42, 0.4195, 0.4195, 0.4185, 0.4165, 0.4155, 0.4135, 0.412, 0.4125, 0.4105, 0.41, 0.409, 0.4075, 0.407, 0.407, 0.4065, 0.405, 0.4045, 0.404, 0.4035, 0.404, 0.4015, 0.4, 0.3995, 0.398, 0.398, 0.397, 0.397, 0.397, 0.396, 0.396, 0.395, 0.3945, 0.395, 0.394, 0.393, 0.393, 0.393, 0.392, 0.391, 0.3905, 0.39, 0.389, 0.3885, 0.388, 0.387, 0.386, 0.385, 0.384, 0.384, 0.3835, 0.3825, 0.3825, 0.3825, 0.3815, 0.3815, 0.38, 0.38, 0.3795, 0.379, 0.379, 0.378, 0.377, 0.3765, 0.376, 0.3755, 0.3735, 0.3715, 0.371, 0.3715, 0.371, 0.3705, 0.37, 0.37, 0.369, 0.369, 0.3675, 0.367, 0.367, 0.3655, 0.364, 0.3625, 0.3615, 0.361, 0.3605, 0.3605, 0.36, 0.3595, 0.359, 0.3575, 0.3575, 0.357, 0.3565, 0.355, 0.355, 0.354, 0.3535, 0.353, 0.352, 0.352, 0.3515, 0.351, 0.3495, 0.3495, 0.349, 0.348, 0.3475, 0.345, 0.344, 0.3435, 0.3425, 0.3425, 0.341, 0.3395, 0.3395, 0.339, 0.3375, 0.337, 0.336, 0.336, 0.3345, 0.3345, 0.334, 0.3335, 0.3335, 0.3325, 0.3325, 0.3315, 0.3295, 0.3285, 0.328, 0.328, 0.326, 0.326, 0.326, 0.326, 0.326, 0.3255, 0.325, 0.3235, 0.3225, 0.3215, 0.3215, 0.3215, 0.321, 0.3195, 0.318, 0.3175, 0.317, 0.3165, 0.316, 0.3155, 0.3155, 0.315, 0.3145, 0.3135, 0.3135, 0.313, 0.3105, 0.31, 0.31, 0.308, 0.3075, 0.3075, 0.3075, 0.307, 0.305, 0.3045, 0.3035, 0.3035, 0.3015, 0.3015, 0.3015, 0.3015, 0.301, 0.3, 0.2995, 0.2995, 0.299, 0.299, 0.298, 0.298, 0.297, 0.2965, 0.2945, 0.294, 0.293, 0.293, 0.2915, 0.2915, 0.291, 0.2905, 0.29, 0.289, 0.289, 0.288, 0.288, 0.288, 0.288, 0.288, 0.2865, 0.2855, 0.2855, 0.2845, 0.2835, 0.283, 0.282, 0.2815, 0.281, 0.281, 0.2805, 0.281, 0.2805, 0.2795, 0.2785, 0.278, 0.278, 0.2785, 0.2785, 0.277, 0.2765, 0.275, 0.2745, 0.2745, 0.2745, 0.274, 0.273, 0.273, 0.273, 0.2715, 0.27, 0.2695, 0.2695, 0.269, 0.2685, 0.268, 0.267, 0.266, 0.266, 0.265, 0.2645, 0.2645, 0.2635, 0.263, 0.2625, 0.2625, 0.262, 0.262, 0.2605, 0.26, 0.259, 0.2575, 0.2565, 0.2555, 0.255, 0.254, 0.253, 0.2525, 0.251, 0.2505, 0.2505, 0.2505, 0.25, 0.2495, 0.2495, 0.2495, 0.249, 0.249, 0.249, 0.2485, 0.2475, 0.246, 0.246, 0.245, 0.245, 0.2445, 0.2445, 0.244, 0.244, 0.2435, 0.2425, 0.242, 0.242, 0.2415, 0.2405, 0.239, 0.238, 0.2375, 0.2365, 0.2365, 0.2365, 0.236, 0.236, 0.2365, 0.2365, 0.2365, 0.2365, 0.236, 0.235, 0.2345, 0.234, 0.234, 0.2335, 0.2335, 0.233, 0.233, 0.2325, 0.232, 0.2315, 0.231, 0.2295, 0.2285 , R 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.0015, 0.0015, 0.002, 0.002, 0.002, 0.002, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0035, 0.0035, 0.0035, 0.0035, 0.0035, 0.0035, 0.004, 0.0045, 0.0045, 0.0045, 0.005, 0.0055, 0.0055, 0.0055, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.0065, 0.0065, 0.0065, 0.0065, 0.0075, 0.0075, 0.0075, 0.0075, 0.0075, 0.0075, 0.0075, 0.0075, 0.0075, 0.0075, 0.0075, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.009, 0.009, 0.0095, 0.0095, 0.01, 0.01, 0.01, 0.01, 0.01, 0.0105, 0.0105, 0.011, 0.011, 0.011, 0.0115, 0.0115, 0.0115, 0.0115, 0.0115, 0.0115, 0.012, 0.012, 0.013, 0.0135, 0.0135, 0.0135, 0.0135, 0.0135, 0.0135, 0.014, 0.014, 0.014, 0.0145, 0.0145, 0.015, 0.015, 0.0155, 0.0175, 0.0175, 0.0175, 0.0175, 0.0175, 0.0175, 0.0175, 0.0175, 0.018, 0.018, 0.018, 0.0185, 0.0185, 0.019, 0.02, 0.0205, 0.022, 0.0225, 0.0225, 0.0225, 0.023, 0.023, 0.0235, 0.025, 0.025, 0.0255, 0.026, 0.027, 0.0275, 0.0275, 0.028, 0.0285, 0.029, 0.0295, 0.03, 0.0305, 0.031, 0.0315, 0.032, 0.033, 0.0345, 0.0345, 0.0355, 0.036, 0.036, 0.037, 0.0385, 0.039, 0.0395, 0.04, 0.0405, 0.0415, 0.042, 0.042, 0.0435, 0.045, 0.045, 0.0455, 0.0455, 0.0455, 0.046, 0.047, 0.047, 0.048, 0.049, 0.0495, 0.05, 0.0505, 0.051, 0.0515, 0.052, 0.0535, 0.0535, 0.0535, 0.0545, 0.0545, 0.0545, 0.055, 0.0555, 0.058, 0.059, 0.06, 0.0605, 0.0605, 0.061, 0.062, 0.0645, 0.0645, 0.065, 0.0655, 0.066, 0.066, 0.066, 0.066, 0.0665, 0.0675, 0.0685, 0.0695, 0.0705, 0.0705, 0.0705, 0.073, 0.0745, 0.0755, 0.077, 0.077, 0.078, 0.0795, 0.0815, 0.082, 0.0835, 0.0835, 0.0835, 0.0845, 0.0855, 0.087, 0.087, 0.0875, 0.088, 0.0895, 0.09, 0.0915, 0.0925, 0.094, 0.0955, 0.0965, 0.0985, 0.0995, 0.0995, 0.0995, 0.1, 0.101, 0.102, 0.1025, 0.103, 0.1035, 0.104, 0.1045, 0.1045, 0.106, 0.106, 0.109, 0.1095, 0.1095, 0.111, 0.112, 0.1135, 0.1155, 0.116, 0.1165, 0.1175, 0.119, 0.119, 0.1195, 0.1215, 0.122, 0.122, 0.123, 0.1245, 0.126, 0.127, 0.1275, 0.1285, 0.1305, 0.1315, 0.1325, 0.134, 0.1345, 0.136, 0.136, 0.138, 0.139, 0.14, 0.141, 0.1425, 0.1425, 0.143, 0.1435, 0.145, 0.1455, 0.147, 0.1475, 0.149, 0.15, 0.151, 0.152, 0.153, 0.1535, 0.1535, 0.1545, 0.155, 0.156, 0.157, 0.1585, 0.1615, 0.164, 0.1645, 0.1675, 0.17, 0.17, 0.1725, 0.174, 0.1755, 0.1765, 0.1775, 0.1785, 0.1805, 0.1815, 0.1825, 0.1825, 0.1835, 0.184, 0.1845, 0.186, 0.1865, 0.188, 0.1885, 0.1895, 0.1905, 0.191, 0.1925, 0.1935, 0.1955, 0.1975, 0.198, 0.1985, 0.201, 0.2025, 0.204, 0.2055, 0.2065, 0.2075, 0.209, 0.2105, 0.212, 0.2125, 0.2135, 0.215, 0.216, 0.217, 0.218, 0.219, 0.2195, 0.2205, 0.2225, 0.2245, 0.226, 0.2265, 0.2265, 0.2275, 0.228, 0.2295, 0.2305, 0.2325, 0.234, 0.2355, 0.238, 0.2385, 0.2415, 0.243, 0.2445, 0.246, 0.248, 0.25, 0.2515, 0.2525, 0.2535, 0.2545, 0.256, 0.257, 0.2575, 0.2585, 0.261, 0.2625, 0.2645, 0.265, 0.265, 0.2665, 0.2695, 0.27, 0.2705, 0.271, 0.273, 0.273, 0.274, 0.275, 0.2765, 0.2775, 0.278, 0.2795, 0.2805, 0.2815, 0.2835, 0.286, 0.287, 0.2875, 0.2885, 0.2895, 0.2905, 0.291, 0.292, 0.2925, 0.293, 0.2945, 0.2965, 0.297, 0.299, 0.3025, 0.303, 0.303, 0.303, 0.3035, 0.3055, 0.3065, 0.307, 0.3075, 0.3085, 0.309, 0.3115, 0.313, 0.3135, 0.3145, 0.3155, 0.3165, 0.3185, 0.32, 0.3205, 0.3225, 0.323, 0.324, 0.324, 0.3245, 0.3255, 0.327, 0.3275, 0.3285, 0.329, 0.3305, 0.3315, 0.333, 0.333, 0.3345, 0.336, 0.3375, 0.3385, 0.3385, 0.3395, 0.3405, 0.3425, 0.344, 0.345, 0.346, 0.348, 0.3485, 0.3505, 0.3525, 0.3555, 0.3565, 0.3575, 0.359, 0.36, 0.361, 0.361, 0.3615, 0.363, 0.3655, 0.3675, 0.3675, 0.368, 0.369, 0.3695, 0.3705, 0.372, 0.373, 0.374, 0.3745, 0.375, 0.376, 0.3765, 0.378, 0.3795, 0.3805, 0.381, 0.3815, 0.3825, 0.383, 0.3835, 0.385, 0.3855, 0.387, 0.387, 0.3875, 0.388, 0.389, 0.3895, 0.3905, 0.391, 0.3925, 0.395, 0.396, 0.3985, 0.3985, 0.4, 0.4025, 0.403, 0.403, 0.4035, 0.4035, 0.404, 0.4045, 0.4055, 0.406, 0.4075, 0.4085, 0.4105, 0.4115, 0.412, 0.413, 0.413, 0.413, 0.413, 0.414, 0.414, 0.4155, 0.4155, 0.4155, 0.4165, 0.417, 0.417, 0.4185, 0.419, 0.4195, 0.4205, 0.423, 0.424, 0.4245, 0.426, 0.4265, 0.4285, 0.431, 0.4315, 0.4315, 0.432, 0.433, 0.435, 0.4385, 0.4395, 0.4395, 0.441, 0.4425, 0.443, 0.443, 0.443, 0.443, 0.444, 0.445, 0.446, 0.4465, 0.4465, 0.449, 0.4495, 0.4495, 0.4505, 0.4515, 0.4525, 0.453, 0.453, 0.454, 0.455, 0.4555, 0.456, 0.457, 0.459, 0.46, 0.4605, 0.4625, 0.464, 0.4645, 0.465, 0.4665, 0.467, 0.4675, 0.4685, 0.47, 0.47, 0.4715, 0.472, 0.4735, 0.4745, 0.4755, 0.4765, 0.477, 0.478, 0.4785, 0.48, 0.48, 0.481, 0.4815, 0.482, 0.484, 0.4845, 0.4855, 0.4865, 0.488, 0.49, 0.4905, 0.4915, 0.4935, 0.494, 0.495, 0.495, 0.4955, 0.4955, 0.496, 0.4965, 0.4975, 0.4975, 0.499, 0.5, 0.5015, 0.503, 0.5035, 0.5045, 0.5055, 0.506, 0.5065, 0.5075, 0.51, 0.5125, 0.5125, 0.5145, 0.5155, 0.5165, 0.517, 0.518, 0.521, 0.521, 0.522, 0.522, 0.5225, 0.523, 0.523, 0.524, 0.526, 0.527, 0.529, 0.5305, 0.5305, 0.5325, 0.533, 0.534, 0.5355, 0.536, 0.536, 0.5365, 0.538, 0.5385, 0.539, 0.5395, 0.5395, 0.542, 0.5435, 0.544, 0.5455, 0.5455, 0.5465, 0.5465, 0.5465, 0.5475, 0.5475, 0.5485, 0.549, 0.549, 0.55, 0.551, 0.551, 0.551, 0.5525, 0.5535, 0.554, 0.5545, 0.5555, 0.556, 0.5565, 0.5575, 0.5585, 0.5595, 0.5605, 0.561, 0.5615, 0.563, 0.5635, 0.5635, 0.5645, 0.5645, 0.566, 0.566, 0.5665, 0.567, 0.567, 0.568, 0.569, 0.5695, 0.57, 0.5705, 0.5725, 0.5745, 0.575, 0.5755, 0.576, 0.5765, 0.577, 0.577, 0.578, 0.578, 0.5795, 0.58, 0.58, 0.5815, 0.583, 0.5845, 0.5855, 0.586, 0.5865, 0.5865, 0.587, 0.5875, 0.588, 0.5895, 0.5895, 0.59, 0.5905, 0.592, 0.592, 0.593, 0.5935, 0.594, 0.595, 0.595, 0.596, 0.5965, 0.598, 0.598, 0.5985, 0.5995, 0.6, 0.6025, 0.6035, 0.604, 0.605, 0.605, 0.6065, 0.608, 0.608, 0.6085, 0.61, 0.6105, 0.6115, 0.6115, 0.613, 0.613, 0.6135, 0.614, 0.614, 0.615, 0.615, 0.616, 0.618, 0.619, 0.6195, 0.6195, 0.6215, 0.6215, 0.6215, 0.6215, 0.6215, 0.622, 0.6225, 0.624, 0.625, 0.626, 0.6265, 0.6265, 0.627, 0.6285, 0.63, 0.6305, 0.631, 0.6315, 0.632, 0.6325, 0.6325, 0.633, 0.6335, 0.6345, 0.6345, 0.635, 0.6375, 0.638, 0.638, 0.64, 0.6405, 0.6405, 0.6405, 0.641, 0.643, 0.6435, 0.6445, 0.6445, 0.6465, 0.6465, 0.6465, 0.6465, 0.647, 0.648, 0.6485, 0.6485, 0.649, 0.649, 0.65, 0.65, 0.651, 0.6515, 0.6535, 0.654, 0.655, 0.655, 0.6565, 0.6565, 0.657, 0.6575, 0.658, 0.659, 0.659, 0.6605, 0.6605, 0.6605, 0.6605, 0.6605, 0.662, 0.663, 0.663, 0.664, 0.665, 0.6655, 0.6665, 0.667, 0.6675, 0.6675, 0.668, 0.668, 0.6685, 0.6695, 0.6705, 0.671, 0.671, 0.671, 0.671, 0.6725, 0.673, 0.6745, 0.675, 0.675, 0.675, 0.6755, 0.6765, 0.6765, 0.6765, 0.678, 0.6795, 0.68, 0.68, 0.6805, 0.681, 0.6815, 0.6825, 0.6835, 0.6835, 0.6845, 0.685, 0.685, 0.686, 0.6865, 0.687, 0.687, 0.6875, 0.6875, 0.689, 0.6895, 0.6905, 0.692, 0.693, 0.694, 0.6945, 0.6955, 0.6965, 0.697, 0.6985, 0.699, 0.699, 0.699, 0.6995, 0.7, 0.7, 0.7, 0.7005, 0.7005, 0.7005, 0.701, 0.702, 0.7035, 0.7035, 0.7045, 0.7045, 0.705, 0.705, 0.7055, 0.7055, 0.706, 0.707, 0.7075, 0.7075, 0.708, 0.709, 0.7105, 0.7115, 0.712, 0.713, 0.713, 0.713, 0.7135, 0.7135, 0.7135, 0.7135, 0.7135, 0.7135, 0.714, 0.715, 0.7155, 0.716, 0.716, 0.7165, 0.7165, 0.717, 0.717, 0.7175, 0.718, 0.7185, 0.719, 0.7205, 0.7215 spatial results collect. zip hw4 results transposed... spatial T 1 length spatial results md\"\"\" 👉 Not graded Manually fit the SIR curves to our data by adjusting ``\\beta`` and ``\\gamma`` until you find a good fit. This will use the `euler SIR` function from Exercise 2. \"\"\" md\"β bind guess β Slider 0.00 0.0001 0.1 default 0.05, show value true \" md\"γ bind guess γ Slider 0.00 0.0001 0.01 default 0.005, show value true \" md\"Show manual fit bind show manual sir fit CheckBox \" md\"\"\" 👉 To do this automatically, we will again need to define a loss function \\mathcal L \\beta, \\gamma . This will compare the solution of the SIR equations with parameters \\beta and \\gamma with your data. This time, instead of comparing two vectors of numbers, we need to compare two vectors of vectors , the S, I, R values. \"\"\" function loss sir β, γ return missing end loss sir guess β, guess γ md\"\"\" 👉 Use this loss function to find the optimal parameters ``\\beta`` and ``\\gamma``. \"\"\" found β, found γ let your code here missing, missing end let p plot plot sir p, spatial T, spatial results, label \"spatial\", opacity .7 if show manual sir fit guess results euler SIR guess β, guess γ, 0.99, 0.01, 0.00 , spatial T plot sir p, spatial T, guess results, label \"manual\", linestyle dash, lw 2 end try assert found β isa Missing && found γ isa Missing found results euler SIR found β, found γ, 0.99, 0.01, 0.00 , spatial T plot sir p, spatial T, found results, label \"optimized\", linestyle dot, lw 2 catch end as svg p end md\" Function library Just some helper functions used in the notebook.\" hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text hint md\"\"\" Remember that functions are objects https www.youtube.com watch?v O HBDZMLrM For example, here is a function that returns the square root function ```julia function the square root function f x sqrt x return f end ``` \"\"\" almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Fantastic \", md\"Splendid \", md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next section.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text let result euler integrate step x x^2, 10, 11, 12 if result isa Missing still missing elseif result isa Number keep working md\"Make sure that you return a number.\" else if result ≈ 6358 correct elseif result ≈ 1462 almost md\"Use ``f' a h ``, not ``f' a ``.\" else keep working end end end if euler test isa Missing still missing elseif euler test isa Vector || abs length euler test 101 1 keep working md\"Make sure that you return a vector of numbers, of the same size as `T`.\" else if abs euler test 1 0 1 keep working elseif abs euler test 50 5^3 20 keep working elseif abs euler test end 10^3 100 keep working else correct end end let result1 gradient descent 1d step x x^2, 10 η 1 result2 gradient descent 1d step x x^2, 10 η 2 if result1 isa Missing still missing elseif result1 isa Real keep working md\"You need to return a number.\" else if result2 result1 10.0 correct else keep working end end end let result gradient descent 1d 10 do x x 5pi ^ 2 10 end if result isa Missing still missing elseif result isa Real keep working md\"You need to return a number.\" else error abs result 5pi if error 5.0 almost md\"It's not accurate enough yet. Maybe you need to increase the number of steps?\" elseif error 0.02 keep working else correct end end end let if found β isa Missing || found γ isa Missing still missing else if isnan found β || isnan found γ hint md\"The found parameters are `NaN`, which means that floating point errors led to an invalid value. Try setting ``\\eta`` much lower, try `1e 6`, `1e 7`, etc.\" else diffb abs found β 0.019 diffc abs found γ 0.0026 if diffb .1 || diffc .01 almost md\"Try using initial values that are closer to the expected result. For example, the values that you found using the sliders. \" elseif diffb .01 || diffc .001 almost md\"Try using initial values that are closer to the expected result. For example, the values that you found using the sliders. You can also experiment with a different loss function. Are you using the absolute error, instead of the square of the error? A parabolic loss function is 'easier to optimize' using gradient descent than a cone shaped one.\" else correct md\"\"\" If you made it this far, congratulations you have just taken your first step into the exciting world of scientific machine learning \"\"\" end end end end not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" if isdefined finite difference slope not defined finite difference slope else let result finite difference slope sqrt, 4.0, 5.0 if result isa Missing still missing elseif result isa Real keep working md\"Make sure that you return a number.\" else if result ≈ 0.2 correct else keep working end end end end if isdefined tangent line not defined tangent line else let result tangent line sqrt, 4.0, 5.0 if result isa Missing still missing elseif result isa Function keep working md\"Make sure that you return a function.\" else if finite difference slope result, 14.0, 15.0 ≈ 0.2 if result 4.0 ≈ 2.0 correct else almost md\"The tangent line should pass through a, f a .\" end else keep working end end end end if isdefined ∂x not defined ∂x else let result ∂x x, y 2x^2 3y^2, 6, 7 if result isa Missing still missing elseif result isa Number keep working md\"Make sure that you return a number.\" else if abs result 24 1.0 correct else keep working end end end end if isdefined ∂y not defined ∂y else let result ∂y x, y 2x^2 3y^2, 6, 7 if result isa Missing still missing elseif result isa Number keep working md\"Make sure that you return a number.\" else if abs result 42 1.0 correct else keep working end end end end if isdefined gradient not defined gradient else let result gradient x, y 2x^2 3y^2, 6, 7 if result isa Missing still missing elseif result isa Vector keep working md\"Make sure that you return a 2 element vector.\" else if abs result 1 24 1 && abs result 2 42 1 correct else keep working end end end end if isdefined found μ not defined found μ elseif isdefined found σ not defined found σ else let if found μ isa Missing || found σ isa Missing still missing else diff μ abs stats μ found μ diff σ abs stats σ found σ if diff μ 1 || diff σ 1 keep working elseif diff μ .2 || diff σ .2 almost md\"The fit is close, but we can do better. Try increasing ``\\eta`` \" else correct end end end end TODO html\" span style 'display inline font size 2em color purple font weight 900 ' TODO span \" "},{"url":"homework/hw9/","title":"Epidemic modeling III","tags":["homework","module3","epidemiology","track_julia","plotting","agent based model","statistics","random","modeling","monte carlo","track_climate"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 3 section 1.5 order 1.5 homework number 9 title \"Epidemic modeling III\" layout \"layout.jlhtml\" tags \"homework\", \"module3\", \"epidemiology\", \"track julia\", \"plotting\", \"agent based model\", \"statistics\", \"random\", \"modeling\", \"monte carlo\", \"track climate\" description \"In this problem set, we will look at a simple spatial agent based epidemic model agents can interact only with other agents that are nearby.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end using Plots, PlutoUI, LinearAlgebra md\" homework 9, version 3 \" hello there md\"\"\" Homework 9 Epidemic modeling III `18.S191`, Fall 2023 This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. Feel free to ask questions \"\"\" md\" Let's create a package environment \" md\"\"\" In this problem set, we will look at a simple spatial agent based epidemic model agents can interact only with other agents that are nearby . In Homework 7, any agent could interact with any other, which is not realistic. A simple approach is to use discrete space each agent lives in one cell of a square grid. For simplicity we will allow no more than one agent in each cell, but this requires some care to design the rules of the model to respect this. We will adapt some functionality from Homework 7. You should copy and paste your code from that homework into this notebook. \"\"\" md\"\"\" Exercise 1 Wandering at random in 2D In this exercise we will implement a random walk on a 2D lattice grid . At each time step, a walker jumps to a neighbouring position at random i.e. chosen with uniform probability from the available adjacent positions . \"\"\" md\"\"\" Exercise 1.1 We define a struct type `Coordinate` that contains integers `x` and `y`. \"\"\" md\"\"\" 👉 Construct a `Coordinate` located at the origin. \"\"\" origin missing md\"\"\" 👉 Write a function `make tuple` that takes an object of type `Coordinate` and returns the corresponding tuple ` x, y `. Boring, but useful later \"\"\" function make tuple c missing end md\"\"\" Exercise 1.2 In Julia, operations like ` ` and ` ` are just functions, and they are treated like any other function in the language. The only special property you can use the infix notation you can write ```julia 1 2 ``` instead of ```julia 1, 2 ``` There are lots of special 'infixable' function names https github.com JuliaLang julia blob master src julia parser.scm L23 L24 that you can use for your own functions When you call it with the prefix notation, it becomes clear that it really is 'just another function', with lots of predefined methods. \"\"\" 1, 2 md\"\"\" Extending in the wild Because it is a function, we can add our own methods to it This feature is super useful in general languages like Julia and Python, because it lets you use familiar syntax `a b c` on objects that are not necessarily numbers One example we've see before is the `RGB` type in the first lectures. You are able to do ```julia 0.5 RGB 0.1, 0.7, 0.6 ``` to multiply each color channel by 0.5 . This is possible because `Images.jl` wrote a method https github.com JuliaGraphics ColorVectorSpace.jl blob 06d70b8a28f5c263f52e414745c2066ccb72b518 src ColorVectorSpace.jl L207 ```julia Real, AbstractRGB AbstractRGB ``` 👉 Implement addition on two `Coordinate` structs by adding a method to `Base. ` \"\"\" function Base. a TYPE, b TYPE return missing end Coordinate 3,4 Coordinate 10,10 uncomment to check works md\"\"\" Pluto has some trouble here, you need to manually re run the cell above \"\"\" md\"\"\" Exercise 1.3 In our model, agents will be able to walk in 4 directions up, down, left and right. We can define these directions as `Coordinate`s. \"\"\" uncomment this possible moves Coordinate 1, 0 , Coordinate 0, 1 , Coordinate 1, 0 , Coordinate 0, 1 , md\"\"\" 👉 `rand possible moves ` gives a random possible move. Add this to the coordinate `Coordinate 4,5 ` and see that it moves to a valid neighbor. \"\"\" md\"\"\" We are able to make a `Coordinate` perform one random step, by adding a move to it. Great 👉 Write a function `trajectory` that calculates a trajectory of a `Wanderer` `w` when performing `n` steps., i.e. the sequence of positions that the walker finds itself in. Possible steps Use `rand possible moves, n ` to generate a vector of `n` random moves. Each possible move will be equally likely. To compute the trajectory you can use either of the following two approaches 1. 🆒 Use the function `accumulate` see the live docs for `accumulate` . Use ` ` as the function passed to `accumulate` and the `w` as the starting value `init` keyword argument . 1. Use a `for` loop calling ` `. \"\"\" function trajectory w Coordinate, n Int return missing end test trajectory trajectory Coordinate 4,4 , 30 uncomment to test function plot trajectory p Plots.Plot, trajectory Vector kwargs... plot p, make tuple. trajectory label nothing, linewidth 2, linealpha LinRange 1.0, 0.2, length trajectory , kwargs... end try p plot ratio 1, size 650, 200 plot trajectory p, test trajectory color \"black\", showaxis false, axis nothing, linewidth 4 p catch end let long trajectory trajectory Coordinate 4,4 , 1000 p plot ratio 1 plot trajectory p, long trajectory p end ^ uncomment to visualize a trajectory md\"\"\" Exercise 1.4 👉 Plot 10 trajectories of length 1000 on a single figure, all starting at the origin. Use the function `plot trajectory ` as demonstrated above. Remember from last week that you can compose plots like this ```julia let Create a new plot with aspect ratio 1 1 p plot ratio 1 plot trajectory p, test trajectory plot one trajectory plot trajectory p, another trajectory plot the second one ... p end ``` \"\"\" md\"\"\" Exercise 1.5 Agents live in a box of side length 2L , centered at the origin. We need to decide i.e. model what happens when they reach the walls of the box boundaries , in other words what kind of boundary conditions to use. One relatively simple boundary condition is a collision boundary Each wall of the box is a wall, modelled using \"collision\" if the walker tries to jump beyond the wall, it ends up at the position inside the box that is closest to the goal. 👉 Write a function `collide boundary` which takes a `Coordinate` `c` and a size L , and returns a new coordinate that lies inside the box i.e. `` L,L \\times L,L `` , but is closest to `c`. This is similar to `extend mat` from Homework 1. \"\"\" function collide boundary c Coordinate, L Number return missing end collide boundary Coordinate 12,4 , 10 uncomment to test md\"\"\" Exercise 1.6 👉 Implement a 3 argument method of `trajectory` where the third argument is a size. The trajectory returned should be within the boundary use `collide boundary` from above . You can still use `accumulate` with an anonymous function that makes a move and then reflects the resulting coordinate, or use a for loop. \"\"\" function trajectory c Coordinate, n Int, L Number return missing end md\"\"\" Exercise 2 Wanderering Agents In this exercise we will create Agents which have a location as well as some infection state information. Let's define a type `Agent`. `Agent` contains a `position` of type `Coordinate` , as well as a `status` of type `InfectionStatus` as in Homework 4 . For simplicity we will not use a `num infected` field, but feel free to do so \"\"\" enum InfectionStatus S I R define agent struct here md\"\"\" Exercise 2.1 👉 Write a function `initialize` that takes parameters N and L , where N is the number of agents and 2L is the side length of the square box where the agents live. It returns a `Vector` of `N` randomly generated `Agent`s. Their coordinates are randomly sampled in the `` L,L \\times L,L `` box, and the agents are all susceptible, except one, chosen at random, which is infectious. \"\"\" function initialize N Number, L Number return missing end initialize 3, 10 Color based on infection status color s InfectionStatus if s S \"blue\" elseif s I \"red\" else \"green\" end position a Agent a.position uncomment this line color a Agent color a.status uncomment this line md\"\"\" Exercise 2.2 👉 Write a function `visualize` that takes in a collection of agents as argument, and the box size `L`. It should plot a point for each agent at its location, coloured according to its status. You can use the keyword argument `c color. agents ` inside your call to the plotting function make the point colors correspond to the infection statuses. Don't forget to use `ratio 1`. \"\"\" function visualize agents Vector, L return missing end let N 20 L 10 visualize initialize N, L , L uncomment this line end md\"\"\" Exercise 3 Spatial epidemic model Dynamics Last week we wrote a function `interact ` that takes two agents, `agent` and `source`, and an infection of type `InfectionRecovery`, which models the interaction between two agent, and possibly modifies `agent` with a new status. This week, we define a new infection type, `CollisionInfectionRecovery`, and a new method that is the same as last week, except it only infects `agent` if `agents.position source.position` . \"\"\" abstract type AbstractInfection end struct CollisionInfectionRecovery AbstractInfection p infection Float64 p recovery Float64 end md\"\"\" Write a function `interact ` that takes two `Agent`s and a `CollisionInfectionRecovery`, and If the agents are at the same spot, causes a susceptible agent to communicate the disease from an infectious one with the correct probability. if the first agent is infectious, it recovers with some probability \"\"\" function interact agent Agent, source Agent, infection CollisionInfectionRecovery missing end md\"\"\" Exercise 3.1 Your turn 👉 Write a function `step ` that takes a vector of `Agent`s, a box size `L` and an `infection`. This that does one step of the dynamics on a vector of agents. Choose an Agent `source` at random. Move the `source` one step, and use `collide boundary` to ensure that our agent stays within the box. For all other agents, call `interact other agent, source, infection `. return the array `agents` again. \"\"\" function step agents Vector, L Number, infection AbstractInfection return missing end md\"\"\" Exercise 3.2 If we call `step ` `N` times, then every agent will have made one step, on average. Let's call this one sweep of the simulation. 👉 Create a before and after plot of ``k sweeps 1000`` sweeps. Initialize a new vector of agents `N 50`, `L 40`, `infection` is given as `pandemic` below . Plot the state using `visualize`, and save the plot as a variable `plot before`. Run `k sweeps` sweeps. Plot the state again, and store as `plot after`. Combine the two plots into a single figure using ```julia plot plot before, plot after ``` \"\"\" pandemic CollisionInfectionRecovery 0.5, 0.00001 bind k sweeps Slider 1 10000, default 1000 let N 50 L 40 plot before plot 1 3 replace with your code plot after plot 1 3 plot plot before, plot after end md\"\"\" Exercise 3.3 Every time that you move the slider, a completely new simulation is created an run. This makes it hard to view the progress of a single simulation over time. So in this exercise, we we look at a single simulation, and plot the S, I and R curves. 👉 Plot the SIR curves of a single simulation, with the same parameters as in the previous exercise. Use `k sweep max 10000` as the total number of sweeps. \"\"\" k sweep max 10000 let N 50 L 30 agents initialize N, L compute k sweep max number of sweeps and plot the SIR end md\"\"\" Exercise 3.4 optional Let's make our plot come alive There are two options to make our visualization dynamic 👉1️⃣ Precompute one simulation run and save its intermediate states using `deepcopy`. You can then write an interactive visualization that shows both the state at time t using `visualize` and the history of S , I and R from time 0 up to time t . t is controlled by a slider. 👉2️⃣ Use ` gif` from Plots.jl to turn a sequence of plots into an animation. Be careful to skip about 50 sweeps between each animation frame, otherwise the GIF becomes too large. This an optional exercise, and our solution to 2️⃣ is given below. \"\"\" let N 50 L 30 missing end md\"\"\" Exercise 3.5 👉 Using L 20 and N 100 , experiment with the infection and recovery probabilities until you find an epidemic outbreak. Take the recovery probability quite small. Modify the two infections below to match your observations. \"\"\" causes outbreak CollisionInfectionRecovery 0.5, 0.001 does not cause outbreak CollisionInfectionRecovery 0.5, 0.001 md\"\"\" Exercise 3.6 👉 With the parameters of Exercise 3.2, run 50 simulations. Plot S , I and R as a function of time for each of them with transparency . This should look qualitatively similar to what you saw in the previous homework. You probably need different `p infection` and `p recovery` values from last week. Why? \"\"\" need different parameters because md\"\"\" i say so \"\"\" md\"\"\" Exercise 4 Optional Effect of socialization In this exercise we'll modify the simple mixing model. Instead of a constant mixing probability, i.e. a constant probability that any pair of people interact on a given day, we will have a variable probability associated with each agent, modelling the fact that some people are more or less social or contagious than others. \"\"\" md\"\"\" Exercise 4.1 We create a new agent type `SocialAgent` with fields `position`, `status`, `num infected`, and `social score`. The attribute `social score` represents an agent's probability of interacting with any other agent in the population. \"\"\" struct SocialAgent here... md\"\"\"define the `position` and `color` methods for `SocialAgent` as we did for `Agent`. This will allow the `visualize` function to work. on both kinds of Agents\"\"\" begin position a SocialAgent ... color a SocialAgent ... end md\"\"\" 👉 Create a function `initialize social` that takes `N` and `L`, and creates N agents within a 2L x 2L box, with `social score`s chosen from 10 equally spaced between 0.1 and 0.5. see LinRange \"\"\" function initialize social N, L return missing end md\"\"\" Now that we have 2 agent types 1. let's create an AbstractAgent type 2. Go back in the notebook and make the agent types a subtype of AbstractAgent. \"\"\" md\"\"\" Exercise 4.2 Not all two agents who end up in the same grid point may actually interact in an infectious way they may just be passing by and do not create enough exposure for communicating the disease. 👉 Write a new `interact ` method on `SocialAgent` which adds together the social scores for two agents and uses that as the probability that they interact in a risky way. Only if they interact in a risky way, the infection is transmitted with the usual probability. \"\"\" function interact agent SocialAgent, source SocialAgent, infection CollisionInfectionRecovery your code here end md\"\"\" Make sure `step `, `position`, `color`, work on the type `SocialAgent`. If `step ` takes an untyped first argument, it should work for both Agent and SocialAgent types without any changes. We actually only need to specialize `interact ` on SocialAgent. Exercise 4.3 👉 Plot the SIR curves of the resulting simulation. N 50 L 40 number of steps 200 In each step call `step ` 50N times. \"\"\" let N 50 L 40 global social agents initialize social N, L Ss, Is, Rs , , Tmax 200 gif for t in 1 Tmax 1. Step a lot 2. Count S, I and R, push them to Ss Is Rs 3. call visualize on the agents, 4. place the SIR plot next to visualize. plot left, right, size 600,300 final plot end end md\"\"\" Exercise 4.4 👉 Make a scatter plot showing each agent's `social score` on one axis, and the `num infected` from the simulation in the other axis. Run this simulation several times and comment on the results. \"\"\" md\"\"\" 👉 Run a simulation for 100 steps, and then apply a \"lockdown\" where every agent's social score gets multiplied by 0.25, and then run a second simulation which runs on that same population from there. What do you notice? How does changing this factor form 0.25 to other numbers affect things? \"\"\" md\"\"\" Exercise 5 Optional Effect of distancing We can use a variant of the above model to investigate the effect of the mis named \"social distancing\" we want people to be socially close, but physically distant . In this variant, we separate out the two effects \"infection\" and \"movement\" an infected agent chooses a neighbouring site, and if it finds a susceptible there then it infects it with probability p I . For simplicity we can ignore recovery. Separately, an agent chooses a neighbouring site to move to, and moves there with probability p M if the site is vacant. Otherwise it stays where it is. When p M 0 , the agents cannot move, and hence are completely quarantined in their original locations. 👉 How does the disease spread in this case? \"\"\" md\"\"\" 👉 Run the dynamics repeatedly, and plot the sites which become infected. \"\"\" md\"\"\" 👉 How does this change as you increase the density \\rho N L^2 of agents? Start with a small density. This is basically the site percolation https en.wikipedia.org wiki Percolation theory model. When we increase p M , we allow some local motion via random walks. \"\"\" md\"\"\" 👉 Investigate how this leaky quarantine affects the infection dynamics with different densities. \"\"\" if student.name \"Jazzy Doe\" md\"\"\" danger \"Before you submit\" Remember to fill in your name and Kerberos ID at the top of this notebook. \"\"\" end md\" Function library Just some helper functions used in the notebook.\" hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text hint md\"\"\" After every sweep, count the values S , I and R and push them to 3 arrays. \"\"\" hint md\"\"\" ```julia let N 50 L 40 x initialize N, L initialize to empty arrays Ss, Is, Rs Int , Int , Int Tmax 200 gif for t in 1 Tmax for i in 1 50N step x, L, pandemic end ... track S, I, R in Ss Is and Rs left visualize x, L right plot xlim 1,Tmax , ylim 1,N , size 600,300 plot right, 1 t, Ss, color color S , label \"S\" plot right, 1 t, Is, color color I , label \"I\" plot right, 1 t, Rs, color color R , label \"R\" plot left, right end end ``` \"\"\" almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Fantastic \", md\"Splendid \", md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next section.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text let we need to call Base. instead of to make Pluto understand what's going on oops if isdefined Coordinate result Base. Coordinate 3,4 , Coordinate 10,10 if result isa Missing still missing elseif result isa Coordinate keep working md\"Make sure that your return a `Coordinate`. 🧭\" elseif result.x 13 || result.y 14 keep working else correct end end end not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" if isdefined origin not defined origin else let if origin isa Missing still missing elseif origin isa Coordinate keep working md\"Make sure that `origin` is a `Coordinate`.\" else if origin Coordinate 0,0 correct else keep working end end end end if isdefined make tuple not defined make tuple else let result make tuple Coordinate 2,1 if result isa Missing still missing elseif result isa Tuple keep working md\"Make sure that you return a `Tuple`, like so `return 1, 2 `.\" else if result 2, 1 correct else keep working end end end end if isdefined trajectory not defined trajectory else let c Coordinate 8,8 t trajectory c, 100 if t isa Missing still missing elseif t isa Vector keep working md\"Make sure that you return a `Vector`.\" elseif all x isa x, Coordinate , t keep working md\"Make sure that you return a `Vector` of `Coordinate`s.\" else if length t 100 almost md\"Make sure that you return `n` elements.\" elseif 1 length Set t 90 correct else keep working md\"Are you sure that you chose each step randomly?\" end end end end if isdefined initialize not defined initialize else let N 200 result initialize N, 1 if result isa Missing still missing elseif result isa Vector || length result N keep working md\"Make sure that you return a `Vector` of length `N`.\" elseif any e e isa Agent , result keep working md\"Make sure that you return a `Vector` of `Agent`s.\" elseif length Set result N keep working md\"Make sure that you create `N` new `Agent`s. Do not repeat the same agent multiple times.\" elseif sum a a.status S, result N 1 && sum a a.status I, result 1 if 8 length Set a.position for a in result 9 correct else keep working md\"The coordinates are not correctly sampled within the box.\" end else keep working md\"`N 1` agents should be Susceptible, 1 should be Infectious.\" end end end bigbreak html\" br br br br \" bigbreak bigbreak bigbreak bigbreak bigbreak "},{"url":"images_abstractions/abstraction/","title":"Abstraction","tags":["lecture","module1","track_julia","track_math"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 video \"https www.youtube.com watch?v 3zTO3LEY cM\" image \"\" section 2 order 2 title \"Abstraction\" layout \"layout.jlhtml\" youtube id \"3zTO3LEY cM\" description \"\" tags \"lecture\", \"module1\", \"track julia\", \"track math\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using PlutoUI using ImageShow, FileIO, ImageIO end PlutoUI.TableOfContents aside true md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" md\" Introduction The goal of this section is to introduce you to the notion of abstraction. You can think of abstraction as an opposite to specialization. We will illustrate this by looking at the following example. What is one ? Before we get lost talking about the foundations of number theory, I will present you with a few examples that represent one to me. \" md\"Each of the items in this list is a specific, or specialized representation of one 1. as an integer 1. as a float 1. as a string 1. as a rational number 1. as a cute picture 1. as an 2x2 identity matrix 1. as a singular dog Of course, these are just a few examples of one . People have been representing one for ages in different languages, scripts, artistic expression, etc. The difference between these ones to me is clear. In fact, I just articulated it to you. Now, let's turn to how a computer sees one differently based on what I type. \" md\"So to a computer, all of these are different types.\" md\" What is a collection of one s? Now, I want to make a collection of ones for some reason. Below is a way for you to experiment building this collection with different one s. As you do this experiment, I want you to look at what stays in the same in the Julia output, and what doesn't.\" md\"\"\" Before we even look at the output, I am amazed that this code even ran. Are you telling me that the computer doesn't care which one I am using in my array? Yes That's exactly what abstraction is. By stepping back, we can now think and operate at a level that doesn't care about which specific one I am using. This is what we mean by abstraction is the opposite of specialization . The information that Julia gives back is quite informative. Here is an example of the first line of the output for a few different types ``` array 3x4 Array Int64, 2 array 3x4 Array Float64, 2 array 3x4 Array Rational Int64 , 2 ``` Notice that for all of these, we have the same `3x4 Array , 2 `. \"\"\" md\"\"\" First Taste of Abstraction Now, I want to do something to a collection of ones, that doesn't care about which one I'm using. So I'm going to write a function that takes in my collection, and add a corgi whereever I desire. \"\"\" function insert new, A, i, j B copy A B i,j new return B end begin A fill 0, 3, 4 md\"\"\" bind i Slider 1 size A,1 , show value true bind j Slider 1 size A,2 , show value true \"\"\" end begin one number array fill 1,3,4 insert 5, one number array, i, j end md\"This is still amazing. I wrote one function that just cares about how to insert an object into an array, without knowing anything about what's inside, and it worked for two completely different arrays, collections of ones of any kind .\" md\" Conclusion The key idea here is that a computer language should allow you to do operations that make sense. Often times, an operation can make sense for many different objects. So we can abstract away the specifics of the object in our implementation. It should let you step back from there. \" md\"\"\" Appendix \"\"\" begin oneimage load download \"https user images.githubusercontent.com 6933510 199281680 5ac1e8ea c68c 4fb5 a3bf b47ad28057d1.png\" corgi load download \"https user images.githubusercontent.com 6933510 107239146 dcc3fd00 6a28 11eb 8c7b 41aaf6618935.png\" nothing end one 1, 1.0, \"one\", 1 1, oneimage, 1 0 0 1 , corgi, computer ones typeof. one begin one keys \"1\", \"1.0\", \"one\", \"1 1\", \"Cute One\", \"2x2 Identity\", \"One Corgi\" selections one keys . one keys lookup element Dict one keys . one md\" bind element key Select selections \" end your chosen one element lookup element element key its type typeof element a 3x4 array of this one. array fill element,3,4 begin one image array fill oneimage,3,4 insert corgi, one image array, i, j end "},{"url":"images_abstractions/dynamicprograms/","title":"Dynamic Programming","tags":["lecture","module1","optimization","programming","track_julia","track_math","interactive","discrete","lazy"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 video \"https www.youtube.com watch?v KyBXJV1zFlo\" image \"https user images.githubusercontent.com 6933510 136196599 c6ae60f0 9269 4134 bb0d 5bcab928bd2b.gif\" section 7 order 7 title \"Dynamic Programming\" layout \"layout.jlhtml\" youtube id \"KyBXJV1zFlo\" description \"\" tags \"lecture\", \"module1\", \"optimization\", \"programming\", \"track julia\", \"track math\", \"interactive\", \"discrete\", \"lazy\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin import ImageIO using Plots, PlutoUI, Colors, Images end md\"\"\" What is dynamic programming? The word \"programming\" here is a rather archaic word but still in use for an optimization problem , as used, for example, in the phrase \"linear programming.\" Probably the word \"programming\" should be abandoned in this context, but no doubt it is too late. \"\"\" md\"\"\" Summing over paths problem \"\"\" md\"\"\" Let's start by looking at the following problem. Given a matrix, we follow a path from top to bottom. The paths start at one of the square on the top, and can only go downwards, either South East , South , or South West . We will add up the numbers visited along each path. Our goal is to find the path that has the smallest sum . This is indeed an optimization problem in the set of all possible paths, we want to find a path that minimizes the sum of visited squares. \"\"\" md\"\"\" Try it yourself \"\"\" md\"\"\" Board size \"\"\" const n 8 M rand 0 9, n, n md\"\"\" One way to solve this problem is the naive algorithm where we enumerate all the paths, calculate the sum for each, and take the minimum. However, as the matrix gets larger the total number of paths grows exponentially . \"\"\" md\"\"\" Possible research problem Investigate the statistics of the sums over all possible paths. \"\"\" md\"\"\" Fixing a single point on a path \"\"\" md\"\"\" Let's fix a given point i, j and focus only on all those paths that pass through i, j . \"\"\" md\"\"\" i bind fixi Scrubbable 1 n j bind fixj Scrubbable 1 n \"\"\" md\"\"\" Suppose we fix the point on the penultimate row last but one . When we look at the paths below the fixed value, we're doing the same calculation over and over again. It doesn't seem sensible to keep re doing these calculations. The same holds as we move the fixed point further upwards. So instead of calculating by working \"forwards\", for each box we look at the minimum below it. \"\"\" md\"\"\" The idea of overlapping subproblems \"\"\" md\"\"\" The key point in this problem is that there are overlapping subproblems there are calculations that we don't need to repeat. The idea of dynamic programming is to remember the solution of those subproblems to get an exponential speed up in the calculation speed. \"\"\" begin struct Paths m Int n Int end Base.iterate p Paths fill 1,p.m , fill 1,p.m start the iteration with 1's Base.IteratorSize Type Paths Base.SizeUnknown function Base.iterate p Paths, state if state ≠ fill p.n,p.m end when each row has an n newstate next state,p.n return newstate, newstate end end function next path,n k length path start from the end and find the first element that can be updated by adding 1 while k≥2 && path k n || path k 1 path k 1 1 k 1 end path k 1 add the one then reset the following elements for j k 1 length path path j max path j 1 1,1 end return path end function allpaths m,n Vector Int copy p for p in Paths m,n end end begin paths allpaths n,n numpaths length paths md\"There are numpaths paths to check.\" end md\"\"\" Path bind whichpath Slider 1 numpaths show value true \"\"\" fixedpaths p for p∈paths if p fixi fixj begin number of fixedpaths length fixedpaths md\"Number of fixed paths number of fixedpaths\" end md\"\"\" Path bind whichfixedpath Slider 1 number of fixedpaths show value true \"\"\" md\"\"\" Summing Paths Demo \"\"\" begin winnernum argmin sum M i,p i for i 1 n for p∈paths winner paths winnernum winnertotal sum M i,winner i for i 1 n end md\"\"\" Our goal is to add the numbers on a path and find the minimal path. The winner is number winnernum. \"\"\" md\"\"\" Appendix \"\"\" function setup board M n size M,1 rectangle w, h, x, y Shape x . 0,w,w,0 , y . 0,0,h,h p plot the board for i 1 n, j 1 n if rem i j,2 0 plot p, rectangle 1,1,i,j , opacity .2, color red end end for i 1 n, j 1 n annotate p, j .5 ,n 2 i .5 , M i,j end plot p, legend false, aspectratio 1, xlims 1,n 1 , ylims 1,n 1 , axis nothing return p end rectangle w, h, x, y Shape x . 0,w,w,0 , y . 0,0,h,h function draw path p, path, indices 1 n kwargs... draw the line plot p, path indices . .5, n 1 . indices . .5 linewidth 4, kwargs... add little squares as background for the number in a square for j in n 1 . indices i path 1 n j plot p, rectangle .4,.4,i .3,j .3 , opacity 1, color RGB 0,1,0 , linewidth 0,fillcolor ifelse rem i j,2 0, RGBA 1,.85,.85,.2 , white end p end path text values \" join values, \" \" sum values \" let path fixedpaths whichfixedpath values M i,path i for i 1 n p setup board M annotate p, fixj .5 ,n 2 fixi .5 , M fixi,fixj , red draw path p, path, 1 fixi color black draw path p, path, fixi n color blue plot p title path text values end function viz whichpath path paths whichpath values M i,path i for i 1 n nv length values rectangle w, h, x, y Shape x . 0,w,w,0 , y . 0,0,h,h p setup board M The winning path draw path p, winner color RGB 1,.6,.6 , your path draw path p, path color black, text plot p, title path text values plot p, xlabel path text M i,winner i for i 1 n , xguidefontcolor RGB 1,.5,.5 p end viz whichpath "},{"url":"images_abstractions/images/","title":"Images as Data and Arrays","tags":["lecture","module1","philip","track_julia","matrix","image"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 video \"https www.youtube.com watch?v 3zTO3LEY cM\" image \"https user images.githubusercontent.com 6933510 136196634 2294d0a7 e79a 40d0 bbb8 81da70f4d398.png\" section 1 order 1 title \"Images as Data and Arrays\" layout \"layout.jlhtml\" youtube id \"3zTO3LEY cM\" description \"\" tags \"lecture\", \"module1\", \"philip\", \"track julia\", \"matrix\", \"image\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using PlutoUI using PlutoTeachingTools using HypertextLiteral end PlutoUI.TableOfContents aside true md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" md\"\"\" Images as examples of data all around us Welcome to the Computational Thinking using Julia for Real World Problems, at MIT in Spring 2021 The aim of this course is to bring together concepts from computer science and applied math with coding in the modern Julia language , and to see how to apply these techniques to study interesting applications and of course to have fun . We would be pleased if students who have been interested in computer science now become interested in computational science and those interested in scientific applications learn computer science they may not see elsewhere. ... and for all students, we wish to share the value of the Julia language as the best of both worlds. \"\"\" md\"\"\" Alan's Essay Are all programming languages the same? Superficially, many programming languages are very similar. \"Showoffs\" will compare functional programming vs imperative programming. Others will compare compiled languages vs dynamic languages. I will avoid such fancy terms in this little essay, preferring to provide this course's pedagogical viewpoint. Generally speaking beginning programmers should learn to create \"arrays\" write \"for loops\", \"conditionals\", \"comparisons\", express mathematical formulas, etc. So why Julia at a time when Python seems to be the language of teaching, and Java and C so prominent in the corporate world? As you might imagine, we believe Julia is special. Oh you will still have the nitty gritty of when to use a bracket and a comma. You might have strong opinions as to whether arrays should begin with 0 or 1 joke some say it's time to compromise and use ½. Getting past these irrelevant issues, you will begin to experience one by one what makes Julia so very special. For starters, a language that runs fast is more fun. We can have you try things that would just be so slow in other languages it would be boring. We also think you will start to notice how natural Julia is, how it feels like the mathematics, and how flexible it can be. Getting to see the true value of fancy terms like multiple dispatch, strong typing, generic programming, and composable software will take a little longer, but stick with us, and you too will see why Julia is so very special. \"\"\" md\"\"\" Computer Science and Computational Science Working Together \"\"\" md\"\"\" Applications of computer science in the real world use data , i.e. information that we can measure in some way. Data take many different forms, for example Numbers that change over time time series Stock price each second minute day Weekly number of infections Earth's global average temperature Video The view from a window of a self driving car A hurricane monitoring station Ultrasound e.g. prenatal Images Diseased versus healthy tissue in a medical scan Pictures of your favourite dog \"\"\" md\"\"\" Exercise Think of another two examples in each category. Can you think of other categories of data? \"\"\" md\"\"\" Computational science can be summed up by a simplified workflow \"\"\" md\"\"\" data ⟶ input ⟶ process ⟶ model ⟶ visualize ⟶ output \"\"\" md\"\"\" html\" br \" To use any data source, we need to input the data of interest, for example by downloading it, reading in the resulting file, and converting it into a form that we can use in the computer. Then we need to process it in some way to extract information of interest. We usually want to visualize the results, and we may want to output them, for example by saving to disc or putting them on a website. We often want to make a mathematical or computational model that can help us to understand and predict the behavior of the system of interest. In this course we aim to show how programming, computer science and applied math combine to help us with these goals. \"\"\" md\"\"\" Data Images as an example of data Let's start off by looking at images and how we can process them. Our goal is to process the data contained in an image in some way, which we will do by developing and coding certain algorithms . Here is the the Fall 2020 version of this lecture small variations by 3 Blue 1 Brown Grant Sanderson for your reference. \"\"\" html\"\"\" script src \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.js\" integrity \"sha256 wwYlfEzWnCf2nFlIQptfFKdUmBeH5d3G7C2352FdpWE \" crossorigin \"anonymous\" defer script link rel \"stylesheet\" href \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.css\" integrity \"sha256 99PgDZnzzjO63EyMRZfwIIA i OS2wDx6k 9Eo7JDKo \" crossorigin \"anonymous\" lite youtube videoid DGojI9xcCfg params \"modestbranding 1&rel 0\" lite youtube \"\"\" md\"\"\" If we open an image on our computer or the web and zoom in enough, we will see that it consists of many tiny squares, or pixels \"picture elements\" . Each pixel is a block of one single colour, and the pixels are arranged in a two dimensional square grid. You probably already know that these pixels are stored in a computer numerically perhaps in some form of RGB red,green,blue format. This is the computer's representation of the data. Note that an image is already an approximation of the real world it is a two dimensional, discrete representation of a three dimensional reality. \"\"\" md\"\"\" Input and Visualize loading and viewing an Image in Julia \"\"\" md\"\"\" Let's use Julia to load actual images and play around with them. We can download images from the internet, your own file, or your own webcam. \"\"\" md\"\"\" Downloading an image from the internet or a local file We can use the `Images.jl` package to load an image file in three steps. \"\"\" md\"\"\" Step 1 from internet we specify the URL web address to download from html\" br \" note that Pluto places results before commands because some people believe output is more interesting than code. This takes some getting used to. \"\"\" url \"https user images.githubusercontent.com 6933510 107239146 dcc3fd00 6a28 11eb 8c7b 41aaf6618935.png\" md\"\"\" Step 2 Now we use the aptly named `download` function to download the image file to our own computer. Philip is Prof. Edelman's corgi. \"\"\" philip filename download url download to a local file. The filename is returned md\"\"\" Step 3 Using the `Images.jl` package loaded at the start of this notebook scroll up and take a look. we can load the file, which automatically converts it into usable data. We'll store the result in a variable. Remember the code is after the output. \"\"\" philip load philip filename md\" Hi there Philip \" md\"\"\" We see that the Pluto notebook has recognised that we created an object representing an image, and automatically displayed the resulting image of Philip, the cute Welsh Pembroke corgi and co professor of this course. Poor Philip will undergo quite a few transformations as we go along \"\"\" md\"\"\" 👉 Exercise change the url to use another image from the web. \"\"\" md\"\"\" Capturing an Image from your own camera \"\"\" md\"\"\" Even more fun is to use your own webcam. Try pressing the enable button below. Then press the camera to capture an image. Kind of fun to keep pressing the button as you move your hand etc. \"\"\" bind myface1 PlutoUI.WebcamInput help false, max size 150 myface1 myface1 , end 1 1 myface1 end 1 1, myface1 end 1 1, end 1 1 md\"\"\" Inspecting your data \"\"\" md\"\"\" Image size \"\"\" md\"\"\" The first thing we might want to know is the size of the image \"\"\" philip size size philip md\"\"\" Julia returns a pair of two numbers. Comparing these with the picture of the image, we see that the first number is the height, i.e. the vertical number of pixels, and the second is the width. \"\"\" philip height philip size 1 philip width philip size 2 md\"\"\" Locations in an image Indexing Now suppose that we want to examine a piece of the image in more detail. We need some way of specifying which piece of the image we want. Thinking of the image as a grid of pixels, we need a way to tell the computer which pixel or group of pixels we want to refer to. Since the image is a two dimensional grid, we can use two integers whole numbers to give the coordinates of a single pixel. Specifying coordinates like this is called indexing think of the index of a book, which tells you on which page an idea is discussed. In Julia we use square brackets, ` ` and ` ` for indexing \"\"\" a pixel philip 200, 100 md\"\"\" We see that Julia knows to draw our pixel object for us a block of the relevant color. When we index into an image like this, the first number indicates the row in the image, starting from the top, and the second the column , starting from the left. In Julia, the first row and column are numbered starting from 1, not from 0 as in some other programming languages. \"\"\" md\"\"\" We can also use variables as indices... \"\"\" md\"\"\" ...and these variables can be controlled by sliders \"\"\" bind row i Slider 1 size philip 1 , show value true bind col i Slider 1 size philip 2 , show value true row i,col i philip row i, col i md\"\"\" Locations in an image Range indexing We saw that we can use the row number and column number to index a single pixel of our image. Next, we will use a range of numbers to index multiple rows or columns at once, returning a subarray \"\"\" philip 550 650, 1 philip width md\"\"\" Here, we use `a b` to mean \" all numbers between `a` and `b` \". For example \"\"\" collect 1 10 md\"\"\" You can also use a ` ` without start and end to mean \" every index \" \"\"\" philip 550 650, md\"\"\" Let's get a single row of pixels \"\"\" philip 550, philip head philip 470 800, 140 410 md\"\"\" Scroll in on Philip's nose Use the widgets below slide left and right sides . \"\"\" bind range rows RangeSlider 1 size philip head 1 bind range cols RangeSlider 1 size philip head 2 nose philip head range rows, range cols md\"\"\" Process Modifying an image Now that we have access to image data, we can start to process that data to extract information and or modify it in some way. We might want to detect what type of objects are in the image, say to detect whether a patient has a certain disease. To achieve a high level goal like this, we will need to perform mid level operations, such as detecting edges that separate different objects based on their color. And, in turn, to carry that out we will need to do low level operations like comparing colors of neighboring pixels and somehow deciding if they are \"different\". \"\"\" md\"\"\" Representing colors We can use indexing to modify a pixel's color. To do so, we need a way to specify a new color. Color turns out to be a complicated concept, having to do with the interaction of the physical properties of light with the physiological mechanisms and mental processes by which we detect it We will ignore this complexity by using a standard method of representing colours in the computer as an RGB triple , i.e. a triple of three numbers r, g, b , giving the amount of red, of green and of blue in a colour, respectively. These are numbers between 0 none and 1 full . The final colour that we perceive is the result of \"adding\" the corresponding amount of light of each colour the details are fascinating, but beyond the scope of this course \"\"\" md\"\"\" We can create a new color in Julia as follows \"\"\" RGB 1.0, 0.0, 0.0 begin md\"\"\" A pixel with bind test r Scrubbable 0 0.1 1 default 0.1 red, bind test g Scrubbable 0 0.1 1 default 0.5 green and bind test b Scrubbable 0 0.1 1 default 1.0 blue looks like \"\"\" end RGB test r, test g, test b md\"\"\" Exercise 2.5 👉 Write a function `invert` that inverts a color, i.e. sends r, g, b to 1 r, 1 g, 1 b . \"\"\" function invert color AbstractRGB return missing end md\"Let's invert some colors \" color black RGB 0.0, 0.0, 0.0 invert color black color red RGB 0.8, 0.1, 0.1 invert color red md\"Can you invert the picture of Philip?\" philip inverted missing md\"\"\" Modifying a pixel Let's start by seeing how to modify an image, e.g. in order to hide sensitive information. We do this by assigning a new value to the color of a pixel \"\"\" let temp copy philip head temp 100, 200 RGB 1.0, 0.0, 0.0 temp end md\"\"\" Groups of pixels We probably want to examine and modify several pixels at once. For example, we can extract a horizontal strip 1 pixel tall \"\"\" philip head 50, 50 100 md\"\"\" Here, Julia is showing the strip as a collection of rectangles in a row. \"\"\" md\"\"\" And then modify it \"\"\" let temp copy philip head temp 50, 50 100 . RGB 1.0, 0.0, 0.0 temp end md\"\"\" Similarly we can modify a whole rectangular block of pixels \"\"\" let temp copy philip head temp 50 100, 50 100 . RGB 1.0, 0.0, 0.0 temp end md\"\"\" Exercise 1.2 👉 Generate a vector of 100 zeros. Change the center 20 elements to 1. \"\"\" function create bar return missing end if isdefined create bar not defined create bar else let result create bar if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa Vector || length result 100 keep working md\"The result should be a `Vector` with 100 elements.\" elseif result 1,50,100 0,1,0 keep working else correct end end end md\"\"\" Reducing the size of an image \"\"\" md\"\"\" Maybe we would also like to reduce the size of this image, since it's rather large. For example, we could take every 10th row and every 10th column and make a new image from the result \"\"\" reduced image philip 1 10 end, 1 10 end md\"\"\" Note that the resulting image doesn't look very good, since we seem to have lost too much detail. Exercise Think about what we might do to reduce the size of an image without losing so much detail. \"\"\" md\"\"\" Model Creating synthetic images Think about your favorite Pixar movie e.g. Monsters Inc. Movie frames are images that are generated from complicated mathematical models. Ray tracing which may be covered in this class is a method for making images feel realistic. \"\"\" md\"\"\" Output Saving an image to a file Finally, we want to be able to save our new creation to a file. To do so, you can right click on a displayed image, or you can write it to a file. Fill in a path below \"\"\" save \"reduced phil.png\", reduced image md\"\"\" html\" br \" \"\"\" md\"\"\" Computer science Arrays An image is a concrete example of a fundamental concept in computer science, namely an array . Just as an image is a rectangular grid, where each grid cell contains a single color, an array is a rectangular grid for storing data. Data is stored and retrieved using indexing, just as in the image examples each cell in the grid can store a single \"piece of data\" of a given type. Dimension of an array An array can be one dimensional, like the strip of pixels above, two dimensional, three dimensional, and so on. The dimension tells us the number of indices that we need to specify a unique location in the grid. The array object also needs to know the length of the data in each dimension. Names for different types of array One dimensional arrays are often called vectors or, in some other languages, \"lists\" and two dimensional arrays are matrices . Higher dimensional arrays are tensors . Arrays as data structures An array is an example of a data structure , i.e. a way of arranging data such that we can access it. A key theme in computer science is that of designing different data structures that represent data in different ways. Conceptually, we can think of an array as a block of data that has a position or location in space. This can be a useful way to arrange data if, for example, we want to represent the fact that values in nearby locations in array are somehow near to one another. Images are a good example of this neighbouring pixels often represent different pieces of the same object, for example the rug or floor, or Philip himself, in the photo. We thus expect neighbouring pixels to be of a similar color. On the other hand, if they are not, this is also useful information, since that may correspond to the edge of an object. \"\"\" md\"\"\" Julia constructing arrays Creating vectors and matrices Julia has strong support for arrays of any dimension. Vectors, or one dimensional arrays, are written using square brackets and commas \"\"\" 1, 20, \"hello\" RGB 1, 0, 0 , RGB 0, 1, 0 , RGB 0, 0, 1 md\"\"\" Matrices, or two dimensional arrays, also use square brackets, but with spaces and new lines instead of commas \"\"\" RGB 1, 0, 0 RGB 0, 1, 0 RGB 0, 0, 1 RGB 0.5, 0.5, 0.5 md\"\"\" Array comprehensions It's clear that if we want to create an array with more than a few elements, it will be very tedious to do so by hand like this. Rather, we want to automate the process of creating an array by following some pattern, for example to create a whole palette of colors Let's start with all the possible colors interpolating between black, `RGB 0, 0, 0 `, and red, `RGB 1, 0, 0 `. Since only one of the values is changing, we can represent this as a vector, i.e. a one dimensional array. A neat method to do this is an array comprehension . Again we use square brackets to create an array, but now we use a variable that varies over a given range values \"\"\" RGB x, 0, 0 for x in 0 0.1 1 md\"\"\" Here, `0 0.1 1` is a range the first and last numbers are the start and end values, and the middle number is the size of the step. \"\"\" md\"\"\" In a similar way we can create two dimensional matrices, by separating the two variables for each dimension with a comma `,` \"\"\" RGB i, j, 0 for i in 0 0.1 1, j in 0 0.1 1 md\"\"\" Joining matrices We often want to join vectors and matrices together. We can do so using an extension of the array creation syntax \"\"\" philip head philip head philip head reverse philip head, dims 2 reverse philip head, dims 1 rot180 philip head md\"\"\" Pluto Interactivity using sliders \"\"\" md\"\"\" Suppose we want to see the effect of changing the number of colors in our vector or matrix. We could, of course, do so by manually fiddling with the range. It would be nice if we could do so using a user interface , for example with a slider . Fortunately, the Pluto notebook allows us to do so \"\"\" md\"\"\" We can define a slider using \"\"\" bind number reds Slider 1 100, show value true md\"\"\" The `Slider` type is defined in the `PlutoUI.jl` package. \"\"\" md\"\"\" This creates a new variable called `number reds`, whose value is the value shown by the slider. When we move the slider, the value of the variable gets updated. Since Pluto is a reactive notebook, other cells which use the value of this variable will automatically be updated too \"\"\" md\"\"\" Let's use this to make a slider for our one dimensional collection of reds \"\"\" RGB red value number reds, 0, 0 for red value in 0 number reds md\"\"\" When you move the slider, you should see the number of red color patches change \"\"\" md\"\"\" What is going on here is that we are creating a vector in which `red value` takes each value in turn from the range from `0` up to the current value of `number reds`. If we change `number reds`, then we create a new vector with that new number of red patches. \"\"\" md\"\"\" Exercise Make three sliders with variables `r`, `g` and `b`. Then make a single color patch with the RGB color given by those values. \"\"\" md\"\"\" We can do the same to create different size matrices, by creating two sliders, one for reds and one for greens. Try it out \"\"\" md\"\"\" Summary \"\"\" md\"\"\" Let's summarize the main ideas from this notebook Images are arrays of colors We can inspect and modify arrays using indexing We can create arrays directly or using array comprehensions \"\"\" begin colored line x Vector Real Gray. Float64. hcat x ' colored line x Any nothing end colored line create bar bigbreak html\" br br br br br \" bigbreak "},{"url":"images_abstractions/linear_transformation/","title":"linear_transformation","tags":[],"text":" A Pluto.jl notebook v0.19.25 using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using PlutoUI using HypertextLiteral using LinearAlgebra end md\"Show grid lines bind show grid CheckBox default true \" let range 2 .1 2 md\"\"\" a bind a Slider range default 1.0, show value true b bind b Slider range default 0.0, show value true c bind c Slider range default 0.0, show value true d bind d Slider range default 1.0, show value true Re run this cell to reset to identity transformation \"\"\" end A a b c d md\" Det A a d c b det A \" md\"\"\" Appendix \"\"\" det A det A if det A 0 invA inv A end img sources \"https user images.githubusercontent.com 6933510 108605549 fb28e180 73b4 11eb 8520 7e29db0cc965.png\" \"Corgis\", \"https user images.githubusercontent.com 6933510 108883855 39690f80 7606 11eb 8eb1 e595c6c8d829.png\" \"Arrows\", \"https images.squarespace cdn.com content v1 5cb62a904d546e33119fa495 1589302981165 HHQ2A4JI07C43294HVPD ke17ZwdGBToddI8pDm48kA7bHnZXCqgRu4g0 U7hbNpZw zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3 s 4yszcp2ryTI0HqTOaaUohrI8PISCdr 3EAHMyS8K84wLA7X0UZoBreocI4zSJRMe1GOxcKMshLAGzx4R3EDFOm1kBS fluffy corgi?format 2500w\" \"Alan\" md\"\"\" Choose an image bind img source Select img sources \"\"\" img original load download img source typeof img original function trygetpixel img AbstractMatrix, x Float64, y Float64 rows, cols size img \"The linear map 1,1 ↦ 0,1 \" f t t 1.0 1.0 1.0 i floor Int, rows f y j floor Int, cols f x rows cols if 1 i ≤ rows && 1 j ≤ cols img i,j else zero eltype img end end function with gridlines img Array Any,2 n 8 sep i size img, 1 ÷ n sep j size img, 2 ÷ n result copy img stroke zero eltype img RGBA RGB 1,1,1 , 0.75 stroke RGBA 1, 1, 1, 0.75 result 1 sep i end, . stroke result , 1 sep j end . stroke a second time, to create a line 2 pixels wide result 2 sep i end, . stroke result , 2 sep j end . stroke return result end img if show grid with gridlines img original else img original end if det A 0 RGB 1.0, 1.0, 1.0 else in x, in y invA out x, out y trygetpixel img, in x, in y end for out y in LinRange 2, 2, 300 , out x in LinRange 2, 2, 300 "},{"url":"images_abstractions/newton_method/","title":"The Newton Method","tags":["lecture","module1","track_math","continuous","differentiation","automatic differentiation","ForwardDiff","interactive","Symbolics","transformation"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 video \"https www.youtube.com watch?v Wjcx9sNSLP8\" image \"https user images.githubusercontent.com 6933510 136196605 b6119b9d 223c 44bc 97d5 ef7cfce66483.gif\" section 6 order 6 title \"The Newton Method\" layout \"layout.jlhtml\" youtube id \"Wjcx9sNSLP8\" description \"This lecture explains a method for finding the root of a function, but using code an illustrations instead of a chalkboard We will illustrate the Newton method using the ForwardDiff.jl package to carry out automatic differentiation, but we will also try to understand what's going on \\\"under the hood\\\".\" tags \"lecture\", \"module1\", \"track math\", \"continuous\", \"differentiation\", \"automatic differentiation\", \"ForwardDiff\", \"interactive\", \"Symbolics\", \"transformation\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Symbolics, ForwardDiff, Plots, PlutoUI, LaTeXStrings using ForwardDiff jacobian end md\"\"\" Solving equations and finding inverse transformations using the Newton method \"\"\" md\"\"\" In science and engineering we often need to solve systems of equations . If the equations are linear then linear algebra tells us a general method to solve them these are now routinely applied to solve systems of millions of linear equations. If the equations are non linear then things are less obvious. The main solution methods we know work by... reducing the nonlinear equations to a sequence of linear equations They do this by approximating the function by a linear function and solving that to get a better solution, then repeating this operation as many times as necessary to get a sequence of increasingly better solutions. This is an example of an iterative algorithm . A well known and elegant method, which can be used in many different contexts, is the Newton method . It does, however, have the disadvantage that it requires derivatives of the function. This can be overcome using automatic differentiation techniques. We will illustrate the Newton method using the `ForwardDiff.jl` package to carry out automatic differentiation, but we will also try to understand what's going on \"under the hood\". \"\"\" md\"\"\" The Newton method in 1D We would like to solve equations like f x g x . We rewrite that by moving all the terms to one side of the equation so that we can write h x 0 , with h x f x g x . A point x^ such that h x^ 0 is called a root or zero of h . The Newton method finds zeros, and hence solves the original equation. \"\"\" md\"\"\" The idea of the Newton method is to follow the direction in which the function is pointing We do this by building a tangent line at the current position and following that instead, until it hits the x axis. Let's look at that visually first \"\"\" md\"\"\" n bind n2 Slider 0 10, show value true, default 0 \"\"\" md\"\"\" x₀ bind x02 Slider 10 10, show value true, default 6 \"\"\" md\"\"\" n bind n Slider 0 10, show value true, default 0 \"\"\" md\"\"\" x₀ bind x0 Slider 10 10, show value true, default 6 \"\"\" md\"\"\" Using symbolic calculations to understand derivatives and nonlinear maps \"\"\" md\"\"\" We can use Julia's new symbolic capabilities to understand what's going on with a nonlinear polynomial function. Let's see what happens if we perturb a function f around a point z by a small amount \\eta . \"\"\" variables z, η md\"\"\" m bind m Slider 1 6, show value true \"\"\" f x x^m 2 f′ x ForwardDiff.derivative f, x f z f z η md\"\"\" When \\eta is small, \\eta^2 is very small, so we can ignore it. We are left with terms that either don't contain \\eta constants , or multiply \\eta linear . The part that multiplies \\eta is the derivative \"\"\" f′ z f z η f′ z md\"\"\" The derivative gives the \" linear part\" of the function. `ForwardDiff.jl`, and forward mode automatic differentiation in general, effectively uses this although not symbolically in this sense to just propagate the linear part of each function through a calculation. \"\"\" md\"\"\" Mathematics of the Newton method \"\"\" md\"\"\" We can convert the idea of \"following the tangent line\" into equations as follows. You can also do so by just looking at the geometry in 1D, but that does not help in 2D. \"\"\" md\"\"\" Suppose we have a guess x 0 for the root and we want to find a hopefully better guess x 1 . Let's set x 1 x 0 \\delta , where x 1 and \\delta are still unknown. We want x 1 to be a root, so \"\"\" md\"\"\" f x 1 f x 0 \\delta \\simeq 0 \"\"\" md\"\"\" If we are already \"quite close\" to the root then \\delta should be small, so we can approximate f using the tangent line f x 0 \\delta \\, f' x 0 \\simeq 0 and hence \\delta \\simeq \\frac f x 0 f' x 0 so that x 1 x 0 \\frac f x 0 f' x 0 Now we can repeat so that x 2 x 1 \\frac f x 1 f' x 1 and in general x n 1 x n \\frac f x n f' x n . This is the Newton method in 1D. \"\"\" md\"\"\" Implementation in 1D \"\"\" function newton1D f, x0 f′ x ForwardDiff.derivative f, x \\prime TAB x0 37.0 starting point sequence x0 x x0 for i in 1 10 x f x f′ x end return x end newton1D x x^2 2, 37.0 sqrt 2 md\"\"\" Symbolic derivative in 2D \"\"\" md\"\"\" Let's see what happens when we perturb by small amounts \\delta in the x direction and \\epsilon in the y direction around the point a, b \"\"\" md\"\"\" p bind p Slider 0 0.01 1, show value true \"\"\" variables a, b, δ, ϵ md\"\"\" Newton for transformations in 2 dimensions T \\mathbb R ^2 \\to \\mathbb R ^2 \"\"\" md\"\"\" We want to find the inverse T^ 1 y , i.e. to solve the equation T x y for x . We use the same idea as in 1D, but now in 2D \"\"\" md\"\"\" T x 0 \\delta \\simeq 0 T x 0 J \\cdot \\delta \\simeq 0, where J DT x 0 is the Jacobian matrix of T at x 0 , i.e. the best linear approximation of T near to x 0 . \"\"\" md\"\"\" Hence \\delta is the solution of the system of linear equations \"\"\" md\"\"\" J \\cdot \\delta T x 0 Then we again construct the new approximation x 1 as x 1 x 0 \\delta . \"\"\" md\"\"\" In 2D we have an explicit formula for the inverse of the matrix. \"\"\" md\"\"\" Implementation in 2D \"\"\" function newton2D step T, x J ForwardDiff.jacobian T, x should use StaticVectors δ J \\ T x J^ 1 T x return x δ end \"Looks for x such that T x 0\" function newton2D T, x0, n 10 x x0 for i in 1 n x newton2D step T, x end return x end md\"\"\" Remember that Newton is designed to look for roots , i.e. places where T x 0 . We want T x y , so we need another layer \"\"\" \"Looks for x such that f x y, i.e. f x y 0\" function inverse f, y, x0 0, 0 return newton2D x f x y, x0 end inverse f y inverse f, y straight x0, y0, x, m y0 m x x0 function standard Newton f, n, x range, x0, ymin 10, ymax 10 f′ x ForwardDiff.derivative f, x p plot f, x range, lw 3, ylim ymin, ymax , legend false, size 400, 300 hline 0.0 , c \"magenta\", lw 3, ls dash scatter x0 , 0 , c \"green\", ann x0, 5, L\"x 0\", 10 for i in 1 n plot x0, x0 , 0, f x0 , c gray, alpha 0.5 scatter x0 , f x0 , c red m f′ x0 plot x range, straight x0, f x0 , x, m for x in x range , c blue, alpha 0.5, ls dash, lw 2 x1 x0 f x0 m scatter x1 , 0 , c \"green\", ann x1, 5, L\"x % i\", 10 x0 x1 end p | as svg end let f x x^2 2 standard Newton f, n2, 1 0.01 10, x02, 10, 70 end let f x 0.2x^3 4x 1 standard Newton f, n, 10 0.01 10, x0, 10, 70 end T α x, y , x α y^2, y α x^2 jacobian T p , a, b .| Text jacobian T p , a, b δ, ϵ md\"\"\" α bind α Slider 0.0 0.01 1.0, show value true \"\"\" T α 0.3, 0.4 inverse T α 0.3, 0.4 T α ∘ inverse T α 0.3, 0.4 md\"\"\" Appendix \"\"\" expand ex simplify ex, polynorm true expand f z η expand f z η f z η f′ z image expand. T p a δ , b ϵ image T p a, b simplify. expand. image T p a, b jacobian T p , a, b δ, ϵ "},{"url":"images_abstractions/seamcarving/","title":"Seam Carving","tags":["lecture","module1","image","matrix","track_julia","track_climate","track_data","optimization","interactive"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 video \"https www.youtube.com watch?v KyBXJV1zFlo\" image \"https user images.githubusercontent.com 6933510 136196584 b3c806a8 aa61 48d9 9e73 30583fcc38bf.gif\" section 8 order 8 title \"Seam Carving\" layout \"layout.jlhtml\" youtube id \"KyBXJV1zFlo\" description \"\" tags \"lecture\", \"module1\", \"image\", \"matrix\", \"track julia\", \"track climate\", \"track data\", \"optimization\", \"interactive\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using ImageMagick using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using ImageFiltering using Plots, PlutoUI Standard libraries using Statistics, LinearAlgebra end md\"\"\" Scroll through the images in this notebook. The idea of seam carving is to shrink an image by removing the \"least interesting\" parts of the image, but without resizing the objects within the image. We want to remove the \"dead space\" within the image. We try to find a \"seam\", i.e. a connected path of pixels from top to bottom of the image, which consists of the \"least important\" pixels, by some measure. We then remove the pixels in that seam to give an image that is one pixel narrower. In order to do this, we need to decide how to measure which pixels are \"important\". \"\"\" md\"\"\" Fall 2020 MIT Class Video from Grant Sanderson Here is Grant Sanderson 3Blue1Brown explaining seam carving using this notebook from the Fall 2020 edition of this class. \"\"\" html\"\"\" script src \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.js\" integrity \"sha256 wwYlfEzWnCf2nFlIQptfFKdUmBeH5d3G7C2352FdpWE \" crossorigin \"anonymous\" defer script link rel \"stylesheet\" href \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.css\" integrity \"sha256 99PgDZnzzjO63EyMRZfwIIA i OS2wDx6k 9Eo7JDKo \" crossorigin \"anonymous\" lite youtube videoid rpB6zQNsbQU params \"modestbranding 1&rel 0\" lite youtube \"\"\" md\"\"\" The seam carving algorithm We need to specify a notion of importance of pixels. The seam will then sum up the importance of pixels over the seam and pick the seam which minimizes this total importance. We will assign importance as \"the extent to which a pixel sits inside an edge\". So we need to calculate the \"edgeness\" of each pixel. \"\"\" md\"\"\" 1. We will use convolution with Sobel filters for edge detection. 2. Then we will use that to write an algorithm that removes \"uninteresting\" bits of an image in order to shrink it. \"\"\" image urls \"https wisetoast.com wp content uploads 2015 10 The Persistence of Memory salvador deli painting.jpg\", \"https upload.wikimedia.org wikipedia commons thumb 1 17 Gustave Caillebotte Paris Street%3B Rainy Day Google Art Project.jpg 1014px Gustave Caillebotte Paris Street%3B Rainy Day Google Art Project.jpg\", \"https upload.wikimedia.org wikipedia commons thumb 1 17 Gustave Caillebotte Paris Street%3B Rainy Day Google Art Project.jpg 1014px Gustave Caillebotte Paris Street%3B Rainy Day Google Art Project.jpg\", \"https upload.wikimedia.org wikipedia commons thumb c cc Grant Wood American Gothic Google Art Project.jpg 480px Grant Wood American Gothic Google Art Project.jpg\", \"https wisetoast.com wp content uploads 2015 10 The Persistence of Memory salvador deli painting.jpg\", \"https upload.wikimedia.org wikipedia commons thumb 7 7d A Sunday on La Grande Jatte%2C Georges Seurat%2C 1884.jpg 640px A Sunday on La Grande Jatte%2C Georges Seurat%2C 1884.jpg\", \"https upload.wikimedia.org wikipedia commons thumb e ea Van Gogh Starry Night Google Art Project.jpg 758px Van Gogh Starry Night Google Art Project.jpg\", \"https web.mit.edu facilities photos construction Projects stata 1 large.jpg\", image url image urls 1 img load download image url arbitrarily choose the brightness of a pixel as mean of rgb brightness c AbstractRGB mean c.r, c.g, c.b Use a weighted sum of rgb giving more weight to colors we perceive as 'brighter' Based on https www.tutorialspoint.com dip grayscale to rgb conversion.htm brightness c AbstractRGB 0.3 c.r 0.59 c.g 0.11 c.b Gray. brightness. img md\"\"\" Edge detection filter Spoiler alert We use the Sobel edge detection filter we created in our Homework. ```math \\begin align G x & \\begin bmatrix 1 & 0 & 1 \\\\ 2 & 0 & 2 \\\\ 1 & 0 & 1 \\\\ \\end bmatrix \\star A\\\\ 10pt G y & \\begin bmatrix 1 & 2 & 1 \\\\ 0 & 0 & 0 \\\\ 1 & 2 & 1 \\\\ \\end bmatrix \\star A \\end align ``` Here, \\star denotes convolution. Here A is the array corresponding to your image. We can think of G x and G y as calculating discretized derivatives in the x and y directions. Then we combine them by finding the magnitude of the discretized gradient , in the sense of multivariate calculus, by defining G \\text total \\sqrt G x^2 G y^2 . \"\"\" md\"\"\" Here are the Sobel kernels for the derivatives in each direction \"\"\" Sy, Sx Kernel.sobel collect Int. 8 . Sx , collect Int. 8 . Sy plotly surface brightness. img md\"\"\" blue shows positive values red shows negative values \"\"\" function shrink image image, ratio 5 height, width size image new height height ÷ ratio 1 new width width ÷ ratio 1 list mean image ratio i ratio i 1 , ratio j ratio j 1 , for j in 1 new width for i in 1 new height reshape list, new height, new width end function convolve M, kernel height, width size kernel half height height ÷ 2 half width width ÷ 2 new image similar M i, j loop over the original image m, n size M inbounds for i in 1 m for j in 1 n k, l loop over the neighbouring pixels accumulator 0 M 1, 1 for k in half height half height height 1 for l in half width half width width 1 Mi i k Mj j l First index into M if Mi 1 Mi 1 elseif Mi m Mi m end Second index into M if Mj 1 Mj 1 elseif Mj n Mj n end accumulator kernel k, l M Mi, Mj end end new image i, j accumulator end end return new image end function edgeness img Sy, Sx Kernel.sobel b brightness. img ∇y convolve b, Sy ∇x convolve b, Sx sqrt. ∇x.^2 ∇y.^2 end function show colored array array pos color RGB 0.36, 0.82, 0.8 neg color RGB 0.99, 0.18, 0.13 to rgb x max x, 0 pos color max x, 0 neg color to rgb. array maximum abs. array end show colored array Sx , show colored array Sy let ∇y convolve brightness. img , Sy ∇x convolve brightness. img , Sx data md\"``G x``\", md\"``G y``\", zoom in on the clock img 300 end, 1 300 , img 300 end, 1 300 , show colored array. ∇x 300 end, 1 300 , ∇y 300 end, 1 300 ... avoid collating the images into one big matrix todisplay permutedims reshape data, 2,3 , 2,1 assert length todisplay 10 PlutoUI.ExperimentalLayout.grid todisplay end md\"\"\" Seam carving idea The idea of seam carving is to find a path from the top of the image to the bottom of the image where the path minimizes the edgness. In other words, this path minimizes the number of edges in the image that it crosses . We will call the edgeness the energy . \"\"\" md\"\"\" At every step in going down, the path is allowed to go south west, south or south east. We want to find a connected path, or seam , with the minimum possible sum of \"energies\" along the path. We start by writing a `least edgy` function which takes a matrix of energies and returns a new matrix. The new matrix has entries M i, j which gives the minimum possible energy when starting from the pixel i, j and going from there down to a pixel in the bottom row. \"\"\" e x,y ↙ ↓ ↘ pick the next path which gives the least overall energy e x 1,y 1 e x,y 1 e x 1,y 1 Basic calculation e x,y min e x 1,y 1 , e x,y , e x 1,y `dirs` records which direction we take from 1 SW, 0 S, 1 SE function least edgy E least E zeros size E dirs zeros Int, size E least E end, . E end, the minimum energy on the last row is the energy itself m, n size E Go from the last row up, finding the minimum energy for i in m 1 1 1 for j in 1 n j1, j2 max 1, j 1 , min j 1, n e, dir findmin least E i 1, j1 j2 least E i,j e least E i,j E i,j dirs i, j 1, 0, 1 dir j 1 end end return least E, dirs end The bright areas are screaming \"AVOID ME \" least e, dirs least edgy edgeness img show colored array least e md\"\"\" Here are the directions that we should take at each step \"\"\" direction the path should take at every pixel. reduce x, y x y \"\\n\", reduce , getindex. \" \", \"↙\", \"↓\", \"↘\" , , dirs 1 25, 1 60 . 3 , dims 2, init \"\" , init \"\" | Text md\" Remove seams\" md\"\"\" We now compress an image horizontally by successively removing a number of seams of lowest energy. \"\"\" function get seam at dirs, j m size dirs, 1 js fill 0, m js 1 j for i 2 m js i js i 1 dirs i 1, js i 1 end return tuple. 1 m, js end get seam at dirs, 2 function mark path img, path img′ copy img m size img, 2 for i, j in path To make it easier to see, we'll color not just the pixels of the seam, but also those adjacent to it for j′ in j 1 j 1 img′ i, clamp j′, 1, m RGB 1,0,1 end end return img′ end md\"\"\" In the visualization below, the slider specifies which column we start with at the top. The pink seam is the best least total energy that will be snipped out. \"\"\" bind start column Slider 1 size img, 2 , show value true path get seam at dirs, start column function pencil X f x RGB 1 x,1 x,1 x map f, X . maximum X end e edgeness img md\"\"\" Lowest energy path We can use `findmin` to find the path with the least energy \"\"\" function rm path img, path img′ img , 1 end 1 one less column for i, j in path img′ i, 1 j 1 . img i, 1 j 1 img′ i, j end . img i, j 1 end end img′ end function shrink n img, n imgs marked imgs e edgeness img for i 1 n least E, dirs least edgy e , min j findmin view least E 1, seam get seam at dirs, min j img rm path img, seam Recompute the energy for the new image Note, this currently involves rerunning the convolution on the whole image, but in principle the only values that need recomputation are those adjacent to the seam, so there is room for a meanintful speedup here. e edgeness img e rm path e, seam push imgs, img push marked imgs, mark path img, seam end imgs, marked imgs end n examples min 200, size img, 2 returns two vectors of n successively smaller images The second images have markings where the seam is cut out carved, marked carved shrink n img, n examples md\"\"\" Seam carving in action \"\"\" md\"\"\" Here is the algorithm in action. Now the slider tells us on which step of the algorithm we are, having removed each least energy seam at each step \"\"\" md\"\"\" Shrink by bind n Slider 1 length carved show value true \"\"\" md\"\"\" Appendix \"\"\" function downsample img maxheight 100 h,w size img if h maxheight img else img floor. Int,LinRange 1,h,maxheight , floor. Int,LinRange 1,w,floor Int, maxheight w h end end downsample img maxheight 40 function hbox x, y, gap 16 sy size y , sx size x w, h max sx 1 , sy 1 , gap sx 2 sy 2 slate fill RGB 1,1,1 , w,h slate 1 size x,1 , 1 size x,2 . RGB. x slate 1 size y,1 , size x,2 gap . 1 size y,2 . RGB. y slate end function hbox imgs... maxheight 200 g x PlutoUI.ExperimentalLayout.Div downsample x maxheight style Dict \"display\" \"flex\", \"flex\" \"1 0 auto\" PlutoUI.ExperimentalLayout.Div collect map g, imgs style Dict \"display\" \"flex\", \"flex direction\" \"row\", \"aspect ratio\" length imgs size imgs 1 ,2 size imgs 2 ,1 end begin img brightness brightness. img ∇x convolve img brightness, Sx ∇y convolve img brightness, Sy hbox show colored array ∇x , show colored array ∇y end begin edged edgeness img hbox img, pencil edged hbox img, Gray. edgeness img maximum abs. edged end hbox mark path img, path , mark path show colored array least e , path hbox mark path img, path , mark path pencil e , path let least energy path of them all , k findmin least e 1, path get seam at dirs, k hbox mark path img, path , mark path show colored array least e , path end hbox img, marked carved n vbox x... PlutoUI.ExperimentalLayout.vbox collect x size img size carved n "},{"url":"images_abstractions/structure/","title":"Taking Advantage of Structure","tags":["lecture","module1","track_julia","type","programming","matrix","track_data","structure"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 video \"https www.youtube.com watch?v wZrVxbmX218\" image \"https user images.githubusercontent.com 6933510 136196581 ffdf4a3b f35c 4eb8 85a7 f07560bd421b.png\" section 9 order 9 title \"Taking Advantage of Structure\" layout \"layout.jlhtml\" youtube id \"wZrVxbmX218\" description \"\" tags \"lecture\", \"module1\", \"track julia\", \"type\", \"programming\", \"matrix\", \"track data\", \"structure\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using ImageShow.ImageCore using ColorSchemes using InteractiveUtils, PlutoUI using LinearAlgebra, SparseArrays, Statistics end PlutoUI.TableOfContents aside true myonehatvector 0, 1, 0, 0, 0, 0 also one \"cold\" 1 . myonehatvector struct OneHot AbstractVector Int n Int k Int end Base.size x OneHot x.n, Base.getindex x OneHot, i Int Int x.k i md\"\"\" One hot vectors This example comes from machine learning. \"\"\" md\"\"\" A one hot vector has a single \"hot\" element, i.e. a single 1 in a sea of zeros. For example \"\"\" md\"\"\"How much \"information\" numbers do you need to represent a one hot vector? Is it n or is it two? \"\"\" md\"\"\" There are also \"1 cold\" vectors \"\"\" md\"\"\" Julia `structs` creating a new type in Julia \"\"\" md\"\"\" We can create our own new types in Julia. Let's create a new type to represent one hot vectors. It will be a subtype of `AbstractVector`, meaning that it behaves like a vector. \"\"\" md\"\"\" We need to specify how long the vector is \"\"\" md\"\"\" and how to extract the i th component \"\"\" md\"\"\" Note that `x.k i` returns a Boolean value, `true` or `false`, which we are then converting to an `Int`. \"\"\" myonehotvector OneHot 6,2 myonehotvector 3 myonehotvector 2 md\"\"\" This behaves as if it were the original vector, but we are storing only 2 integers. This is an example of taking advantage of structure. \"\"\" md\"\"\" Julia `dump` \"\"\" md\"\"\" `dump` shows the internal data stored inside a given object \"\"\" dump myonehotvector md\"\"\" When used inside our code, however, it behaves and looks exactly like a vector. Pluto also displays it as a vector, with its individual elements. \"\"\" myonehotvector md\"\"\" Visualizing a one hot vector \"\"\" md\"\"\" n bind nn Slider 1 20, show value true \"\"\" md\"\"\" k bind kk Slider 1 nn, default 1, show value true \"\"\" x OneHot nn, kk md\" Diagonal matrices\" md\"Another example is diagonal matrices. Here's how you might see them in high school \" denseD 5 0 0 0 6 0 0 0 10 md\"Julia has a better way of representing them \" D Diagonal denseD md\"\"\" It even displays nicely, with dots instead of zeros. We can also create a diagonal matrix from the values on the diagonal \"\"\" Diagonal 5, 6, 10 md\"How much information is stored for each representation? We can use Julia's `dump` function to find out \" dump denseD dump D md\"\"\" We see that `Diagonal` stores only the diagonal entries, not the zeros \"\"\" md\"\"\"We should always look for structure where it exists \"\"\" md\" Sparse matrices\" md\"A sparse matrix is a matrix that has many zeros, and is hence worth storing in a sparse representation \" denseM 0 0 9 0 0 0 12 0 4 md\"\"\" The above displays a sparse matrix in so called ` i, j, value ` form. We could store sparse matrices in this way \"\"\" M sparse denseM md\"\"\" Although it looks like it's stored like this, in fact the actual storage format is different. In the Julia `SparseArrays.jl` package, the storage format is compressed sparse column CSC format, which is generally considered favorable for arithmetic, matrix vector products and column slicing. Of course, for specific matrices, other formats might be better. `nzval` contains the nonzero matrix entries `rowval` is the \"i\" or row entry for the corresponding value in nzval length rowval length nzval `colptr j ` points into nzval and tells you the first nonzero in or after column j The last entry of colptr points beyond the end of nzval to indicate no more columns. length colptr number of columns 1 \"\"\" dump sparse M md\"\"\" An example where CSC may not be a great choice is the following. The reason is that `colptr` must have an entry in each column \"\"\" M2 sparse 1, 2, 10^6 , 4, 9, 10^6 , 7, 8, 9 dump M2 M3 1 0 2 0 10 0 3 4 0 9 0 0 0 5 8 0 0 0 0 7 M4 M3 . 0 dump sparse M4 sparse M4 md\"\"\" Random vectors \"\"\" md\"How much structure is there in a random vector?\" v rand 1 9, 1 000 000 md\"\"\"You might guess that there is \"no structure\". But you can actually think of randomness itself as a structure. For example, take the mean and standard deviation some would say that's the structure. \"\"\" mean v , std v , 5, sqrt 10 2 3 md\"\"\" If you repeat the calculation, to 3 or 4 digits the mean and standard deviation don't change, and are approximately equal to the theoretical values on the right. \"\"\" md\"\"\" We can also count how many times each digit occurs in the data set \"\"\" sum v . i for i in 1 9 md\"\"\" We see that each number occurs roughly the same number of times. \"\"\" md\"Statisticians and professors who've just graded exams might say that under certain circumstances the mean and the variance give you the necessary structure, and the rest can be thrown away.\" m sum v length v mean σ² sum v . m .^ 2 length v 1 σ sqrt σ² std v md\"Sometimes the summary statistics are all you want. But sometimes not. \" md\" Multiplication tables\" outer v, w x y for x ∈ v, y ∈ w just a multiplication table outer 1 10, 1 10 md\"Did you memorize this in third grade?\" bind k Slider 1 14, show value true outer 1 k, 1 k outer 2,4,6 , 10,100,1000 md\"\"\" A multiplication table is clearly a structure, but it's not sparse there are no zeros. Nonetheless you need much less information to reconstruct the matrix. \"\"\" md\"In the context of 1 k times 1 k, just one number k is needed.\" md\"If you look at the following matrix? Does it have any structure? It's certainly more hidden.\" outer rand 3 , rand 4 but it's just a multiplication table md\"\"\" You might guess by visualizing the matrix that it is a multiplication table \"\"\" md\"We can factor out a multiplication table, if it's there \" md\"\"\" Julia Exceptions are thrown generated using `error` An exception is anything that can interrupt a program, e.g. invalid input data. \"\"\" function factor mult table v mult table , 1 w mult table 1, if v 1 ≠ 0 w v 1 end Good code has a check if outer v, w ≈ mult table return v, w else error \"Input is not a multiplication table\" end end factor outer 1, 2, 3 , 2, 2, 2 md\"\"\" A random 2x2 matrix is not a multiplication table. Most matrices are not given by multiplication tables. \"\"\" factor rand 2,2 md\" Let's add two or more multiplication tables \" A sum outer rand 3 ,rand 3 for i 1 2 md\"Is it possible, given the matrix, to find the structure? E.g. to show that a matrix is a sum of outer products multiplication table .\" md\"The answer is yes The Singular Value Decomposition SVD from algebra can find the structure \" md\"\"\" Let's take the SVD and calculate the sum of two outer products \"\"\" begin U, Σ, V svd A outer U , 1 , V , 1 Σ 1 outer U , 2 , V , 2 Σ 2 end md\"\"\" We see that we reconstruct the original matrix \" \"\"\" B rand 3,3 begin UU, ΣΣ, VV svd B outer UU ,1 , VV ,1 ΣΣ 1 outer UU ,2 , VV ,2 ΣΣ 2 end md\"and it can approximate too \" flag outer 1,1,1,2,2,2,1,1,1 , 1,1,1,1,1,1,1,1,1 cs distinguishable colors 100 cs flag cs flag flag' outer 1,1,1,2,2,2,1,1,1 , 1,1,1,1,1,1,1,1,1 outer 1,1,1,1,1,1,1,1,1 , 1,1,1,2,2,2,1,1,1 cs outer 1,1,1,2,2,2,1,1,1 , 1,1,1,1,1,1,1,1,1 outer 1,1,1,1,1,1,1,1,1 , 1,1,1,2,2,2,1,1,1 md\"\"\" Singular Value Decomposition SVD A tool to find structure \"\"\" tree url \"https user images.githubusercontent.com 6933510 110924885 d7f1b200 8322 11eb 9df7 7abf29c8db7d.png\" image load download tree url picture Float64. channelview image size picture pr, pg, pb eachslice picture, dims 1 RGB. pr, 0, 0 RGB. 0, pg, 0 RGB. 0, 0, pb begin Ur, Σr, Vr svd pr Ug, Σg, Vg svd pg Ub, Σb, Vb svd pb end bind n Slider 1 200, show value true RGB. sum outer Ur ,i , Vr ,i . Σr i for i in 1 n , sum outer Ug ,i , Vg ,i . Σg i for i in 1 n , sum outer Ub ,i , Vb ,i . Σb i for i in 1 n md\" Appendix\" md\" Syntax Learned\" md\"\"\" Syntax to be learned A `struct` is a great way to embody structure. `dump` to see what's inside a data structure. `Diagonal`, `sparse` `error` throws an exception `svd` Singular Value Decomposition \"\"\" dump, Diagonal, error, svd begin show image M get. ColorSchemes.rainbow , M . maximum M show image x AbstractVector show image x' end show image x show image outer rand 10 , rand 10 "},{"url":"images_abstractions/transformations2/","title":"Transformations II: Composability, Linearity and Nonlinearity","tags":["lecture","module1","transformation","track_math","track_julia","inverse","composition","matrix","linear algebra","nonlinear","linear"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 video \"https www.youtube.com watch?v VDPf3RjoCpY\" image \"https user images.githubusercontent.com 6933510 136196619 0750544f cd6d 4ae3 ace7 60c24443d721.png\" section 5 order 5 title \"Transformations II Composability, Linearity and Nonlinearity\" layout \"layout.jlhtml\" youtube id \"VDPf3RjoCpY\" description \"Let's see what mathematical transformations, inverses, composition and non linearity look like in practice. i.e. applied to philip.jpg \" tags \"lecture\", \"module1\", \"transformation\", \"track math\", \"track julia\", \"inverse\", \"composition\", \"matrix\", \"linear algebra\", \"nonlinear\", \"linear\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using PlutoUI using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using PlutoUI using LinearAlgebra using ForwardDiff using NonlinearSolve using StaticArrays end PlutoUI.TableOfContents aside true md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" urls corgis \"https user images.githubusercontent.com 6933510 108605549 fb28e180 73b4 11eb 8520 7e29db0cc965.png\", longcorgi \"https user images.githubusercontent.com 6933510 110868198 713faa80 82c8 11eb 8264 d69df4509f49.png\", theteam \"https news.mit.edu sites default files styles news article image gallery public images 202004 edelman%2520philip%2520sanders.png?itok ZcYu9NFeg\", img original load download urls.longcorgi md\"\"\" The fun stuff playing with transforms \"\"\" let range 1.5 .1 1.5 md\"\"\" This is a \"scrubbable\" matrix click on the number and drag to change A `` `` bind a Scrubbable range default 1.0 bind b Scrubbable range default 0.0 `` `` `` `` bind c Scrubbable range default 0.0 bind d Scrubbable range default 1.0 `` `` \"\"\" end md\"\"\" Grab a linear a0afe3ae 76b9 11eb 2301 cde7260ddd7f or nonlinear a290d5e2 7a02 11eb 37db 41bf86b1f3b3 transform, or make up your own \"\"\" md\"\"\" zoom bind z Scrubbable .1 .1 3, default 1 \"\"\" md\"\"\" pan bind panx Scrubbable 1 .1 1, default 0 , bind pany Scrubbable 1 .1 1, default 0 \"\"\" md\"\"\" α bind α Slider 30 .1 30, show value true, default 0 β bind β Slider 10 .1 10, show value true, default 5 h bind h Slider .1 .1 10, show value true, default 5 \"\"\" 1 1 md\"\"\" pixels bind pixels Slider 1 1000, default 800, show value true \"\"\" md\"\"\" Show grid lines bind show grid CheckBox default true ngrid bind ngrid Slider 5 5 20, show value true, default 10 \"\"\" md\"\"\" Circular Frame bind circular CheckBox default true radius bind r Slider .1 .1 1, show value true, default 1 \"\"\" md\"\"\" Above The original image is placed in a 1,1 x 1 1 box and transformed. \"\"\" A a b c d md\"\"\" Pedagogical note Why the Module 1 application image processing Image processing is a great way to learn Julia, some linear algebra, and some nonlinear mathematics. We don't presume the audience will become professional image processors, but we do believe that the principles learned transcend so many applications... and everybody loves playing with their own images \"\"\" md\"\"\" Last Lecture Leftovers \"\"\" md\"\"\" Interesting question about linear transformations If a transformation takes lines into lines and preserves the origin, does it have to be linear? Answer no The example of a perspective map takes all lines into lines, but parallelograms generally do not become parallelograms. \"\"\" md\"\"\" A nice interactive demo of perspective maps https www.khanacademy.org humanities renaissance reformation early renaissance1 beginners renaissance florence a linear perspective interactive from Khan academy. \"\"\" Resource \"https cdn.kastatic.org ka perseus images 1b351a3653c1a12f713ec24f443a95516f916136.jpg\" md\"\"\" Challenge exercise Rewrite this using Julia and Pluto \"\"\" md\"\"\" Julia style a little advanced Reminder about defining vector valued functions \"\"\" md\"\"\" Many people find it hard to read ```julia f v v 1 v 2 , v 1 v 2 or f v v 1 v 2 , v 1 v 2 ``` and instead prefer ```julia f x,y x y , x y or f x,y , x y , x y ``` All four of these will take a 2 vector to a 2 vector in the same way for the purposes of this lecture, i.e. `f 1,2 ` can be defined by any of the four forms. The forms with the ` ` are anonymous functions. They are still considered anonymous, even though we then name them `f`. \"\"\" md\"\"\" Functions with parameters The anonymous form comes in handy when one wants a function to depend on a parameter . For example `f α x,y , x αy, x αy ` allows you to apply the `f 7 ` function to the input vector ` 1, 2 ` by running `f 7 1, 2 ` . \"\"\" md\"\"\" Linear transformations a collection \"\"\" md\"\"\" Here are a few useful linear transformations \"\"\" begin id x, y SA x, y scalex α x, y , SA α x, y scaley α x, y , SA x, α y scale α x, y , SA α x, α y swap x, y SA y, x flipy x, y SA x, y rotate θ x, y , SA cos θ x sin θ y, sin θ x cos θ y shear α x, y , SA x α y, y end T⁻¹ id T⁻¹ rotate α T⁻¹ shear α T⁻¹ lin A uses the scrubbable T⁻¹ shear α ∘ shear α T⁻¹ nonlin shear α T⁻¹ inverse nonlin shear α T⁻¹ nonlin shear α T⁻¹ xy T⁻¹ warp α T⁻¹ x,y , x α y^2,y α x^2 may be non invertible T⁻¹ x,y , x,y^2 T⁻¹ flipy ∘ x,y , β x α y β y , h y β y md\"\"\" In fact we can write down the most general linear transformation in one of two ways \"\"\" begin lin a, b, c, d x, y , a x b y, c x d y lin A v A v... linear algebra version using matrix multiplication end md\"\"\" The second version uses the matrix multiplication notation from linear algebra, which means exactly the same as the first version when A \\begin bmatrix a & b \\\\ c & d \\end bmatrix \"\"\" md\"\"\" Nonlinear transformations a collection \"\"\" translate α,β x, y , SA x α, y β affine, but not linear nonlin shear α x, y , SA x, y α x^2 warp α x, y , rotate α √ x^2 y^2 SA x, y xy r, θ SA r cos θ , r sin θ rθ x SA norm x , atan x 2 ,x 1 exponentialish x,y , log x 1.2 , log y 1.2 merc x,y , log x^2 y^2 2 , atan y,x reim log complex y,x md\"\"\" Composition \"\"\" let x rand these two are the same a sin ∘ cos x b sin cos x a b end md\"\"\" Composing functions in mathematics Wikipedia math https en.wikipedia.org wiki Function composition In math we talk about composing two functions to create a new function the function that takes x to \\sin \\cos x is the composition of the sine function and the cosine function. We humans tend to blur the distinction between the sine function and the value of \\sin x at some point x . The sine function is a mathematical object by itself. It's a thing that can be evaluated at as many x 's as you like. If you look at the two sides of ` sin ∘ cos x ≈ sin cos x ` and see that they are exactly the same, it's time to ask yourself what's a key difference? On the left a function is built ` sin ∘ cos ` which is then evaluated at `x`. On the right, that function is never built. \"\"\" md\"\"\" Composing functions in computer science wikipedia cs https en.wikipedia.org wiki Function composition computer science A key issue is a programming language is whether it's easy to name the composition in that language. In Julia one can create the function `sin ∘ cos` and one can readily check that ` sin ∘ cos x ` always yields the same value as `sin cos x `. \"\"\" md\"\"\" Composing functions in Julia Julia's `∘` operator https docs.julialang.org en v1 manual functions Function composition and piping follows the mathematical typography https en.wikipedia.org wiki Function composition Typography convention, as was shown in the `sin ∘ cos` example above. We can type this symbol as `\\circ TAB `. \"\"\" md\"\"\" Composition of software at a higher level The trend these days is to have higher order composition of functionalities. A good example would be that an optimization can wrap a highly complicated program which might include all kinds of solvers, and still run successfully. This might require the ability of the outer software to have some awareness of the inner software. It can be quite magical when two very different pieces of software \"compose\", i.e. work together. Julia's language construction encourages composability. We will discuss this more in a future lecture. \"\"\" md\"\"\" Find your own examples Take some of the Linear and Nonlinear Transformations see the Table of Contents and find some inverses by placing them in the `T ` section of \"The fun stuff\" at the top of this notebook. \"\"\" md\"\"\" Linear transformations can be written in math using matrix multiplication notation as \\begin pmatrix a & b \\\\ c & d \\end pmatrix \\begin pmatrix x \\\\ y \\end pmatrix . \"\"\" md\"\"\" By contrast, here are a few fun functions that cannot be written as matrix times vector. What characterizes the matrix ones from the non matrix ones? \"\"\" md\"\"\" This may be a little fancy, but we see that warp is a rotation, but the rotation depends on the point where it is applied. \"\"\" begin warp₂ α,x,y rotate α √ x^2 y^2 warp₂ α x, y , warp₂ α,x,y x,y end warp3 α x, y , rotate α √ x^2 y^2 x,y warp3 1 1,2 warp 1 5,6 warp₂ 1.0 5.0,6.0 md\"\"\" Linear transformations See a matrix, think beyond number arrays \"\"\" md\"\"\" Software writers and beginning linear algebra students see a matrix and see a lowly table of numbers. We want you to see a linear transformation that's what professional mathematicians see. \"\"\" md\"\"\" What defines a linear transformation? There are a few equivalent ways of giving a definition. \"\"\" md\"\"\" Linear transformation definitions \"\"\" md\"\"\" The intuitive definition The rectangles gridlines in the transformed image above e0b657ce 7a03 11eb 1f9d f32168cb5394 always become a lattice of congruent parallelograms. The easy operational but devoid of intuition definition A transformation is linear if it is defined by v \\mapsto A v matrix times vector for some fixed matrix A . The scaling and adding definition 1. If you scale and then transform or if you transform and then scale, the result is always the same T cv c \\, T v v is any vector, and c any number. 2. If you add and then transform or vice versa the result is the same T v 1 v 2 T v 1 T v 2 . v 1,v 2 are any vectors. The mathematician's definition A consolidation of the above definition. T is linear if T c 1 v 1 c 2 v 2 c 1 T v 1 c 2 T v 2 for all numbers c 1,c 2 and vectors v 1,v 2 . This can be extended to beyond 2 terms. \"\"\" md\"\"\" The Matrix \"\"\" Resource \"https upload.wikimedia.org wikipedia en c c1 The Matrix Poster.jpg\" md\"\"\" No, not that matrix \"\"\" md\"\"\" The matrix for a linear transformation T is easy to write down The first column is T 1, 0 and the second is T 0,1 . That's it \"\"\" md\"\"\" Once we have those, the linearity relation T x,y x \\, T 1,0 y \\, T 0,1 x \\, \\mathrm column\\ 1 y \\, \\mathrm column\\ 2 is exactly the definition of matrix times vector. Try it. \"\"\" md\"\"\" Matrix multiply You know how to do it, but why? \"\"\" md\"\"\" Did you ever ask yourself why matrix multiply has that somewhat complicated multiplying and adding going on? \"\"\" let A randn 2,2 B randn 2,2 v rand 2 lin A ∘ lin B v , lin A B v end md\"\"\" Important The composition of the linear transformation is the linear transformation of the multiplied matrices There is only one definition of matmul matrix multiply that realizes this fact. To see what it is exactly, remember the first column of `lin A ∘ lin B ` should be the result of computing the two matrix times vectors y A 1,0 then z A y , and the second column is the same for 0,1 . This is worth writing out if you have never done this. \"\"\" md\"\"\" Let's try doing that with random matrices \"\"\" begin P randn 2, 2 Q randn 2, 2 T₁ lin P ∘ lin Q T₂ lin P Q lin P Q 1, 0 , lin P ∘lin Q 1, 0 end test img load download urls.corgis test pixels 300 md\"\"\" `lin P Q ` \"\"\" md\"\"\" `lin P ∘lin Q ` \"\"\" md\"\"\" Coordinate transformations vs object transformations \"\"\" md\"\"\" If you want to move an object to the right, the first thing you might think of is adding 1 to the x coordinate of every point. The other thing you could do is to subtract one from the first coordinate of the coordinate system. The latter is an example of a coordinate transform. \"\"\" md\"\"\" Coordinate transform of an array i, j vs points x, y \"\"\" md\"\"\" The original image has 1,1 in the upper left corner as an array but is thought of as existing in the entire plane. \"\"\" translate 400,400 1,1 md\"\"\" Inverses \"\"\" md\"\"\" If f is a function from 2 vectors to 2 vectors say , we define the inverse of f , denoted f^ 1 , to have the property that it \" undoes \" the effect of f , i.e. f f^ 1 v v and f^ 1 f v v . This equation might be true for all v or for some v in a region. \"\"\" md\"\"\" Example Scaling up and down \"\"\" let v rand 2 T rotate 30 ∘rotate 30 T v , v end let T scale 0.5 ∘ scale 2 v rand 2 T v .≈ v end md\"\"\" We observe numerically that `scale 2 ` and `scale .5 ` are mutually inverse transformations, i.e. each is the inverse of the other. \"\"\" md\"\"\" Inverses Solving equations \"\"\" md\"\"\" What does an inverse really do? Let's think about scaling again. Suppose we scale an input vector \\mathbf x by 2 to get an output vector \\mathbf x \\mathbf y 2 \\mathbf x Now suppose that you want to go backwards. If you are given \\mathbf y , how do you find \\mathbf x ? In this particular case we see that \\mathbf x \\frac 1 2 \\mathbf y . If we have a linear transformation, we can write \\mathbf y A \\, \\mathbf x with a matrix A . If we are given \\mathbf y and want to go backwards to find the \\mathbf x from that, we need to solve a system of linear equations . Usually , but not always , we can solve these equations to find a new matrix B such that \\mathbf x B \\, \\mathbf y , i.e. B undoes the effect of A . Then we have \\mathbf x B \\, A \\mathbf x , so that B A must be the identity matrix. We call B the matrix inverse of A , and write B A^ 1 . For 2 \\times 2 matrices we can write down an explicit formula for the matrix inverse, but in general we will need a computer to run an algorithm to find the inverse. \"\"\" md\"\"\" Inverting Linear Transformations \"\"\" let v rand 2 A randn 2,2 lin inv A ∘ lin A v , v end let A randn 2,2 B randn 2,2 inv A B ≈ inv B inv A end md\"\"\" ``A^ 1 \\begin pmatrix d & b \\\\ c & a \\end pmatrix ad bc \\quad `` if ``\\ A \\ \\begin pmatrix a & b \\\\ c & d \\end pmatrix . `` \"\"\" md\"\"\" Inverting nonlinear transformations \"\"\" md\"\"\" What about if we have a nonlinear transformation T can we invert it? In other words, if \\mathbf y T \\mathbf x , can we solve this to find \\mathbf x in terms of \\mathbf y ? In general this is a difficult question Sometimes we can do so analytically, but usually we cannot. Nonetheless, there are numerical methods that can sometimes solve these equations, for example the Newton method https en.wikipedia.org wiki Newton%27s method . There are several implementations of such methods in Julia, e.g. in the NonlinearSolve.jl package https github.com JuliaComputing NonlinearSolve.jl . We have used that to write a function `inverse` that tries to invert nonlinear transformations of our images. \"\"\" md\"\"\" The Big Diagram of Transforming Images \"\"\" Resource \"https raw.githubusercontent.com mitmath 18S191 Spring21 notebooks week3 comm2.png\" md\"\"\" Note that we are defining the map with the inverse of T so we can go pixel by pixel in the result. \"\"\" md\"\"\" Collisions \"\"\" begin function inverse f, y, u0 SVector 0.0, 0.0 prob NonlinearProblem false u, p f u, p . y, u0 solver solve prob, NewtonRaphson , tol 1e 4 return solver.u end inverse f y inverse u, p f SVector u... , y end md\"\"\" Check out Linear Map Wikipedia https en.wikipedia.org wiki Linear map Transformation Matrix Wikipedia https en.wikipedia.org wiki Transformation matrix \"\"\" md\"\"\" Why are we doing this backwards? If one moves the colors forward rather than backwards you have trouble dealing with the discrete pixels. You may have gaps. You may have multiple colors going to the same pixel. An interpolation scheme or a newton scheme could work for going forwards, but very likely care would be neeeded for a satisfying general result. \"\"\" md\"\"\" Appendix \"\"\" det A det A begin white c RGB RGB 1,1,1 white c RGBA RGBA 1,1,1,0.75 black c RGB RGB 0,0,0 black c RGBA RGBA 0,0,0,0.75 end begin function transform xy to ij img AbstractMatrix, x Float64, y Float64 convert coordinate system xy to ij center image, and use \"white\" when out of the boundary rows, cols size img m max cols, rows function to take xy to ij xy to ij translate rows 2, cols 2 ∘ swap ∘ flipy ∘ scale m 2 apply the function and \"snap to grid\" i, j floor. Int, xy to ij x, y end function getpixel img,i Int,j Int circular Bool false, r Real 200 grab image color or place default rows, cols size img m max cols,rows if circular c i rows 2 ^2 j cols 2 ^2 ≤ r m^2 4 else c true end if 1 i ≤ rows && 1 j ≤ cols && c img i, j else white img 1, 1 black img 1,1 end end function getpixel img,x Float64,y Float64 i,j transform xy to ij img,x,y getpixel img,i,j end function transform ij to xy i Int,j Int,pixels ij to xy scale 2 pixels ∘ flipy ∘ swap ∘ translate pixels 2, pixels 2 ij to xy i,j end end begin begin x, y transform ij to xy i,j, test pixels X, Y T₁ x,y i, j transform xy to ij test img,X,Y getpixel test img,i,j end for i 1 test pixels, j 1 test pixels end begin begin x, y transform ij to xy i,j, test pixels X, Y T₂ x,y i, j transform xy to ij test img,X,Y getpixel test img,i,j end for i 1 test pixels, j 1 test pixels end transform ij to xy 1,1,400 function with gridlines img Array Any,2 n 10 n 2n 1 rows, cols size img result copy img stroke zero eltype img RGBA RGB 1,1,1 , 0.75 stroke RGBA 1, 1, 1, 0.75 result floor. Int, LinRange 1, rows, n , . stroke result ceil. Int,LinRange 1, rows, n , . stroke result , floor. Int, LinRange 1, cols, n . stroke result , ceil. Int,LinRange 1, cols, n . stroke result rows ÷2 , . RGBA 0,1,0,1 result 1 rows ÷2 , . RGBA 0,1,0,1 result , cols ÷2 , . RGBA 1,0,0,1 result , 1 cols ÷2 , . RGBA 1,0,0,1 return result end img if show grid with gridlines img original n ngrid else img original end let x, y transform ij to xy i,j, pixels X, Y translate panx, pany x,y X, Y T⁻¹∘scale 1 z ∘translate panx, pany x,y i, j transform xy to ij img,X,Y getpixel img,i,j circular circular, r r end for i 1 pixels, j 1 pixels transform xy to ij img,0.0,0.0 img size img img 50,56 white background x PlutoUI.ExperimentalLayout.Div x style \"background white\" Resource \"https raw.githubusercontent.com mitmath 18S191 Spring21 notebooks week3 coord transform.png\" | white background Resource \"https raw.githubusercontent.com mitmath 18S191 Spring21 notebooks week3 collide.png\" | white background "},{"url":"images_abstractions/transformations_and_autodiff/","title":"Automatic Differentiation","tags":["lecture","module1","track_julia","track_math","programming","function","transformation","automatic differentiation","continuous","derivative"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 video \"https www.youtube.com watch?v AAREeuaKCic\" image \"https user images.githubusercontent.com 6933510 136196632 ad67cb84 a4c9 410e ab72 f4fcfc26f69a.png\" section 3 order 3 title \"Automatic Differentiation\" layout \"layout.jlhtml\" youtube id \"AAREeuaKCic\" description \"We use the package ForwardDiff.jl to automatically differentiate functions, on scalar and vector domains.\" tags \"lecture\", \"module1\", \"track julia\", \"track math\", \"programming\", \"function\", \"transformation\", \"automatic differentiation\", \"continuous\", \"derivative\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using PlutoUI using HypertextLiteral using LinearAlgebra using ForwardDiff end PlutoUI.TableOfContents aside true md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" md\"\"\" Last time, recall we defined linear combinations of images. Remember we scaled an image by multiplying by a constant combined images by adding the colors in each pixel possibly saturating In general if we perform both of these operations, we get a linear combination. \"\"\" md\"\"\" Functions in Math and Julia \"\"\" md\"\"\" Univariate Functions \"\"\" md\"\"\" In high school you learned about univariate functions e.g. f₁ x x^2 f₂ x \\sin x f₃ x x^\\alpha In Julia, functions can be written in short form, anonymous form, or long form. \"\"\" short form f₁ x x^2 subscript unicode \\ 1 tab f₁ 5 anonymous form x sin x x sin x π 2 long form function f₃ x,α 3 default parameter return x^α the \"return\" is optional end f₃ 5 f₃ 5,2 md\"\"\" Keyword arguments After the regular positional arguments, a function definition can also accept keyword arguments. In the definition, these come after a semicolon ` ` \"\"\" f₄ x α, β x β ^α md\"\"\" When calling a function with keyword arguments, you use the key \"\"\" f₄ 3, α 5, β 1 the order of keyword arguments does not matter f₄ 3, β 1, α 5 md\"\"\" See Julia's function documentation https docs.julialang.org en v1 manual functions for more. \"\"\" md\"\"\" Automatic Differentiation of Univariates \"\"\" md\"\"\" Automatic differentiation is a key enabling technology for machine learning and so much of scientific computing. It derives the answer in a manner that is interestingly different from the symbolic differentiation of elementary calculus classes and the numerical differentiation of simple finite differences. See the video at the end of this lecture. \"\"\" ForwardDiff.derivative f₁, 5 ForwardDiff.derivative x f₃ x,3 , 5 md\"\"\" Notice the use of anonymous functions to fix the parameter α 3 \"\"\" md\"\"\" In case you have forgotten what a derivative is, we remind you with a simple finite difference approximation \"\"\" begin md\"\"\" bind e Slider 6 1, default 1, show value true \"\"\" end ϵ 10.0^e sin 1 ϵ sin 1 ϵ , cos 1 , ForwardDiff.derivative sin,1 md\"\"\" Scalar Valued Multivariate Functions \"\"\" md\"\"\" Sometimes we are interested in scalar valued functions of more than 1 variable. This can be written in Julia as a function of many variables or a function of a vector. e.g. f 5 x 5\\sin x 1 x 2 2x 2 4x 3 \"\"\" begin f₅ v 5sin v 1 v 2 2 v 2 4v 3 f₅ x,y,z 5sin x y 2 y 4z end f₅ 1,2,3 , f₅ 1,2,3 md\"\"\" Better yet if you must write it the two ways you probably won't need to, but if you must , don't copy code , reuse code so if it changes in one place it changes everywhere. \"\"\" begin f₆ x,y,z 5sin x y 2 y 4z f₆ v f₆ v 1 ,v 2 ,v 3 end f₆ 1,2,3 , f₆ 1,2,3 md\"\"\" There's one other julia idea that is a trick to make vector code more readable. If you give a tuple argument, the function works directly on vectors but is defined with readable letters. \"\"\" f₇ x,y,z 5sin x y 2 y 4z more readable then 5sin v 1 v 2 2 v 2 4v 3 f₇ 1,2,3 this works with vector arguments, but not scalars f₇ 1,2,3 errros md\"\"\" You can see that the functions f 5 and f 6 has two julia methods, one with one variable, and one with three variables. \"\"\" methods f₅ md\"\"\" Automatic Differentiation Scalar valued multivariate functions \"\"\" md\"\"\" In many applications, including machine learning, one needs to take derivatives of the function in every argument direction. This is known as the gradient . Automatic differentiation works again \"\"\" ForwardDiff.gradient f₅, 1,2,3 md\"\"\" Remember f 5 x 5\\sin x 1 x 2 2x 2 4x 3 \"\"\" md\"\"\" One can check numerically by adding a small change to each of the arguments.m \"\"\" begin ∂f₅∂x f₅ 1 ϵ, 2, 3 f₅ 1, 2, 3 ϵ ∂f₅∂y f₅ 1, 2 ϵ, 3 f₅ 1, 2, 3 ϵ ∂f₅∂z f₅ 1, 2, 3 ϵ f₅ 1, 2, 3 ϵ ∇f ∂f₅∂x , ∂f₅∂y, ∂f₅∂z end md\"\"\" Whether you are an expert at multivariable calculus, or you have never seen this before, I hope seeing it numerically makes the idea intuitive. \"\"\" md\"\"\" Important Remark In machine learning, and other optimization contexts, we want to minimize a scalar function of many parameters known as a \"loss function.\" Following the negative gradient is a standard technique for minimizing functions especially when there are many variables. When there are only a few variables, there are better techniques. \"\"\" md\"\"\" Transformations Vector Valued Multivariate Functions \"\"\" md\"\"\" While scalar functions might technically be called a transformation, it is more common to use the term when both the input and output are multidimensional. \"\"\" md\"\"\" Let us consider a few functions that take in a vector of size 2 and returns a vector of size 2. \"\"\" begin idy x,y x,y lin1 x,y 2x 3y, 5x 4x scalex α x,y , α x, y scaley α x,y , x, α y rot θ x,y , cos θ x sin θ y, sin θ x cos θ y shear α x,y , x α y,y genlin a,b,c,d x,y , a x b y c x d y end rot π 2 4,5 md\"\"\" We bet you have noticed that these functions could all have been defined with matrices. Indeed the general case can be written \"\"\" a b c d x,y md\"\"\" or in math `` \\begin pmatrix a & b \\\\ c & d \\end pmatrix \\begin pmatrix x \\\\ y \\end pmatrix `` . \"\"\" md\"\"\" By contrast here are a few fun functions that can not be written as matrix times vector. What characterizes the matrix ones from the non matrix ones? \"\"\" begin function warp α x,y , begin r √ x^2 y^2 θ α r rot θ x,y end end rθ x norm x , atan x 2 ,x 1 maybe vectors are more readable here? xy r,θ r cos θ , r sin θ end md\"\"\" This may be a little fancy, but we see that warp is a rotation, but the rotation depends on the point where it is applied. \"\"\" begin warp₂ α,x,y rot α √ x^2 y^2 warp₂ α x,y , warp₂ α,x,y x,y end warp 1 5,6 warp₂ 1.0 5.0,6.0 md\"\"\" Automatic Differentiation of Transformations \"\"\" ForwardDiff.jacobian warp 3.0 , 4,5 md\"\"\" What is this thing? \"\"\" begin ∂w∂x warp 3.0 4 ϵ, 5 warp 3.0 4,5 ϵ This is a vector, right? ∂w∂y warp 3.0 4, 5 ϵ warp 3.0 4,5 ϵ This too ∂w∂x ∂w∂y end md\"\"\" But what is a transformation, really? You have very likely learned how to multiply matrices times vectors. I'll bet you think of a matrix as a table of numbers, and a vector as a column of numbers, and if you are well practiced, you know just when to multiply and just when to add. Congratulations, you now can do what computers excel at. \"\"\" md\"\"\" Matrices are often thought of as containers of numbers in a rectangular array, and hence one thinks of manipulating these tables like a spreadsheet, but actually the deeper meaning is that it is a transformation. \"\"\" md\"\"\" α bind α Slider .1 .1 3, show value true \"\"\" let range 1.5 .1 1.5 md\"\"\" This is a \"scrubbable matrix\" click on the number and drag to change. `` `` bind a Scrubbable range default 1.0 bind b Scrubbable range default 0.0 `` `` `` `` bind c Scrubbable range default 0.0 bind d Scrubbable range default 1.0 `` `` Re run this cell to reset to identity transformation \"\"\" end T shear 1 Pick a transformation T genlin a,b,c,d md\"\"\" center zoom bind z Slider .1 .1 3, show value true, default 1 \"\"\" md\"\"\" top left zoom bind f Slider .1 1 3, show value true, default 1 \"\"\" md\"Show grid lines bind show grid CheckBox default true \" A a b c d md\" Det A a d c b det A \" md\"\"\" We never seem to see this in linear algebra classes do we? Check out Linear Map Wikipedia https en.wikipedia.org wiki Linear map Transformation Matrix Wikipedia https en.wikipedia.org wiki Transformation matrix \"\"\" md\"\"\" Geometry of determinant, how areas scale. \"\"\" md\"\"\" Why are we doing this backwards? \"\"\" md\"\"\" Computer Science Solving 2 equations in 2 unknowns, and higher dimensional analogs. The top 500 supercomputers, and how many equations in how many unknowns are being solved today. \"\"\" md\"\"\" Automatic Differentiation in 10 minutes okay, 11 \"\"\" html\"\"\" script src \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.js\" integrity \"sha256 wwYlfEzWnCf2nFlIQptfFKdUmBeH5d3G7C2352FdpWE \" crossorigin \"anonymous\" defer script link rel \"stylesheet\" href \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.css\" integrity \"sha256 99PgDZnzzjO63EyMRZfwIIA i OS2wDx6k 9Eo7JDKo \" crossorigin \"anonymous\" lite youtube videoid vAp6nUMrKYg params \"modestbranding 1&rel 0\" lite youtube \"\"\" md\"\"\" What about more than 3 dimensions? Oh I've heard it all, there is no such thing as more than 3 dimensions. The fourth dimension is time, isn't it? I have trouble visualizing 3 dimensions, let alone contemplating 4. ... but mathematicians have no trouble with n spatial dimensions, and they do not usually worry about silly questions like whether these exist. \"\"\" md\"\"\" Appendix \"\"\" det A det A img sources \"https user images.githubusercontent.com 6933510 108605549 fb28e180 73b4 11eb 8520 7e29db0cc965.png\" \"Corgis\", \"https user images.githubusercontent.com 6933510 108883855 39690f80 7606 11eb 8eb1 e595c6c8d829.png\" \"Arrows\", \"https images.squarespace cdn.com content v1 5cb62a904d546e33119fa495 1589302981165 HHQ2A4JI07C43294HVPD ke17ZwdGBToddI8pDm48kA7bHnZXCqgRu4g0 U7hbNpZw zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3 s 4yszcp2ryTI0HqTOaaUohrI8PISCdr 3EAHMyS8K84wLA7X0UZoBreocI4zSJRMe1GOxcKMshLAGzx4R3EDFOm1kBS fluffy corgi?format 2500w\" \"Long Corgi\" md\"\"\" Choose an image bind img source Select img sources \"\"\" img original load download img source typeof img original begin white c RGB RGB 1,1,1 white c RGBA RGBA 1,1,1,0.75 end function trygetpixel img AbstractMatrix, x Float64, y Float64 rows, cols size img \"The linear map 1,1 ↦ 0,1 \" f t t 1.0 1.0 1.0 i floor Int, rows f y z j floor Int, cols f x rows cols z if 1 i ≤ rows && 1 j ≤ cols img i,j else white img 1,1 end end function with gridlines img Array Any,2 n 16 sep i size img, 1 ÷ n sep j size img, 2 ÷ n result copy img stroke zero eltype img RGBA RGB 1,1,1 , 0.75 stroke RGBA 1, 1, 1, 0.75 result 1 sep i end, . stroke result , 1 sep j end . stroke a second time, to create a line 2 pixels wide result 2 sep i end, . stroke result , 2 sep j end . stroke result sep i n ÷2 . 1,2 , . RGBA 0,1,0,1 result , sep j n ÷2 . 1,2 , . RGBA 1,0,0,1 return result end img if show grid with gridlines img original else img original end if det A 0 RGB 1.0, 1.0, 1.0 else in x, in y A \\ out x, out y in x, in y xy out x, out y in x, in y T out x, out y trygetpixel img, in x, in y end for out y in LinRange f, f, 500 , out x in LinRange f, f, 500 "},{"url":"images_abstractions/transforming_images/","title":"Transformations with Images","tags":["lecture","module1","image","convolution","track_math","matrix","philip"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 1 video \"https www.youtube.com watch?v uZYVjDDZW9A\" image \"https user images.githubusercontent.com 6933510 136196626 194e81c9 00f7 49f6 90c3 09945723b6a3.png\" section 4 order 4 title \"Transformations with Images\" layout \"layout.jlhtml\" youtube id \"uZYVjDDZW9A\" description \"\" tags \"lecture\", \"module1\", \"image\", \"convolution\", \"track math\", \"matrix\", \"philip\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using PlutoUI using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using Unitful using ImageFiltering using OffsetArrays using Plots end PlutoUI.TableOfContents aside true md\"\"\" Initializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" rotabook PlutoUI.Resource \"https i.gr assets.com images S compressed.photo.goodreads.com books 1348902666l 1646354.jpg\" md\"\"\" Never run overtime a microcentury with UnitFul Running overtime is the one unforgivable error a lecturer can make. After fifty minutes one microcentury as von Neumann used to say everybody's attention will turn elsewhere even if we are trying to prove the Riemann hypothesis. One minute overtime can destroy the best of lectures. from \"Indiscrete Thoughts\" by Rota, Chpt 18, 10 Lessons I Wish I Had Been Taught \"\"\" century 100u\"yr\" a u\"yr\" is a special kind of string denoting a unit of a year century 2 century 200 century^2 g 9.8u\"m\" u\"s\"^2 uconvert u\"minute\", century 1e 6 convert into minutes the value of a microcentury PotentialEnergy 10u\"kg\" g 50u\"m\" uconvert u\"J\",PotentialEnergy md\"\"\" Adding units to numbers just works in Julia, and furthermore, does not slow down execution. We are sneaking in an example of the power of generic programming and Julia's type system, some of the underlying technology that makes us love working with Julia. More on this later in the book. Meanwhile if this helps you do your problem sets in some other class, go for it. \"\"\" md\"\"\" info \"Reminder\" Try your own pictures everywhere \"\"\" md\"\"\" Transforming Images \"\"\" md\"\"\" 2.1. Downsampling Upsampling \"\"\" md\"\"\" How can we pixelate a corgi? Found this cute picture online, but we'll pixelate a real corgi. \"\"\" pixelated corgi load download \"https i.redd.it 99lhfbnwpgd31.png\" philip load download \"https user images.githubusercontent.com 6933510 107239146 dcc3fd00 6a28 11eb 8c7b 41aaf6618935.png\" bind r Slider 1 40, show value true, default 40 downsample philip philip 1 r end, 1 r end upsample philip kron downsample philip, fill 1,r,r md\"\"\" Note the use of kron and fill. See Wikipedia Kron https en.wikipedia.org wiki Kronecker product \"\"\" md\"\"\" Exercise Use the nose selection tool from Section 1.1 to pixelate a rectangle of an image. Warning you'll have to worry about sizes if not exact multiples. \"\"\" md\"\"\" 2.2 Linear Combinations Combining Images \"\"\" md\"\"\" One big idea in mathematics is the linear combination https en.wikipedia.org wiki Linear combination . The idea combines scaling an object combining two or more objects by combining scaled versions of multiple objects. \"\"\" md\"\"\" Let's scale some corgis. \"\"\" corgis load download \"https user images.githubusercontent.com 6933510 108605549 fb28e180 73b4 11eb 8520 7e29db0cc965.png\" bind c Slider 0 .1 3, show value true, default 1 c . corgis scaling the corgis changes intensity md\"\"\" You might wonder about the dot times or pointwise times . You can delete the dot, but it is recommended for clarity and performance. The dot emphasizes that the multiplication by c is happening pixel by pixel or that the scalar is being \"broadcast\" to every pixel. \"\"\" md\"\"\" Scaling too far saturates the image. Any r,g,b ≥ 1, saturates at 1. \"\"\" md\"\"\" We need another image. We could grab one from somewhere or we can just transform the one we have. Let's do the latter and turn the corgis upsidedown. \"\"\" upsidedown corgis corgis end 1 1 , md\"\"\" Now let's scaled version of the two images to see what that does. \"\"\" .5 upsidedown corgis . .5 corgis md\"\"\" Convex Combinations \"\"\" md\"\"\" If all the coefficients are positive and add to 1, we say we have a convex combination . Let's take α and 1 α as the two coefficients adding to 1, and scale the two corgi pictures with different α's, thereby giving different weights to the rightside up and upside down corgis. \"\"\" bind α Slider 0 .01 1 , show value true, default 1.0 α . corgis . 1 α . upsidedown corgis md\"\"\" The moment I did this with α .5, I noticed my brain's tendency to see the rightsisde up corgis even though both have equal weight. For me maybe around α .39 which gives weight .61 to the upside down corgis \"feels\" balanced to me. I think this is what the field of psychology called psychometrics tries to measure perhaps someone can tell me if there are studies of the brain's tendency to use world experience to prefer rightside up corgis, and in particular to put a numerical value to this tendency. \"\"\" md\"\"\" 10 seconds with google and I found there is a thing about faces The Face Inversion effect https en.wikipedia.org wiki Face inversion effect ~ text The%20face%20inversion%20effect%20is,same%20for%20non%2Dfacial%20objects.&text The%20most%20supported%20explanation%20for,is%20the%20configural%20information%20hypothesis and also the Thatcher Effect https en.wikipedia.org wiki Thatcher effect ~ text The%20Thatcher%20effect%20or%20Thatcher,obvious%20in%20an%20upright%20face seems related. ... the article suggests objects don't suffer in the same way as faces, so I put forth that the phenomenon applies to corgi faces as much as human faces, suggesting maybe that corgi faces are processed in the face processing part of the brain,not the object processing part of the brain. Corgis are human, after all, right? Note, this is 5 minutes of armchair science, not a professional opinion. \"\"\" md\"\"\" 2.3 Fun with Photoshop What does \"filter\" mean in this context? \"\"\" md\"\"\" Photshop Filter Reference https helpx.adobe.com photoshop using filter effects reference.html \"\"\" md\"\"\" Let's play with photoshop if for no other reason, let's see what image transformations are available considered useful by the pros. Some worth emphasizing are 1. Blur 2. Sharpen 3. Stylize Find Edges 3. Pixelate 4. Distort Some of these transformations e.g. Blur, Sharpen, Find Edges are examples of convolutions which are very efficient, and show up these days in machine learning particularly in image recognition. \"\"\" md\"\"\" 2.4 Image Filtering convolutions \"\"\" md\"\"\" Last semester Grant Sanderson 3Blue1Brown lectured in this course. This lecture on convolutions in image processing was popular. Let's watch an excerpt from 1 04 to 2 48 . We pick a few exercepts, but we wouldn't blame you if you just wanted to watch the whole video. \"\"\" html\"\"\" script src \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.js\" integrity \"sha256 wwYlfEzWnCf2nFlIQptfFKdUmBeH5d3G7C2352FdpWE \" crossorigin \"anonymous\" defer script link rel \"stylesheet\" href \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.css\" integrity \"sha256 99PgDZnzzjO63EyMRZfwIIA i OS2wDx6k 9Eo7JDKo \" crossorigin \"anonymous\" lite youtube videoid 8rrHTtUzyZA params \"modestbranding 1&rel 0&start 64&end 168\" lite youtube \"\"\" md\"\"\" Definition of convolutions and kernels \"\"\" md\"\"\" Wikipedia Page on Kernels https en.wikipedia.org wiki Kernel image processing Details \"\"\" md\"\"\" Computer Science Complexity The number of multiplications Number of Pixels in the Image Number of Cells in the kernel \"\"\" md\"\"\" Thought Problem Why are small kernels better than large kernels from a complexity viewpoint? \"\"\" md\"\"\" Computer Science Architectures GPUs or Graphical Processing Units Some important computations can be greatly accelerated through the use of specialized hardware such as the GPU processors that were originally designed as image renderers but it has turned out that these processors can be quite fast at other very regular computations. Convolutions is a very GPU friendly operation due to its regular structure. \"\"\" kernelize M OffsetArray M, 1 1, 1 1 begin identity 0 0 0 0 1 0 0 0 0 edge detect 0 1 0 1 4 1 0 1 0 sharpen identity . edge detect Superposition box blur 1 1 1 1 1 1 1 1 1 9 ∇x 1 0 1 1 0 1 1 0 1 2 centered deriv in x ∇y ∇x' kernels identity, edge detect, sharpen, box blur, ∇x, ∇y kernel keys \"identity\", \"edge detect\", \"sharpen\", \"box blur\", \"∇x\", \"∇y\" selections kernel keys . kernel keys kernel matrix Dict kernel keys . kernels md\" bind kernel name Select selections \" end kernel matrix kernel name imfilter corgis, kernelize kernel matrix kernel name Gray. 1.5 . abs. imfilter corgis, kernelize kernel matrix kernel name md\"\"\" Gaussian Filter \"\"\" md\"\"\" In our next Grant Sanderson segment from Fall 2020 4 35 to 7 00 , we hear about convolving images with a Gaussian kernel. \"\"\" html\"\"\" script src \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.js\" integrity \"sha256 wwYlfEzWnCf2nFlIQptfFKdUmBeH5d3G7C2352FdpWE \" crossorigin \"anonymous\" defer script link rel \"stylesheet\" href \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.css\" integrity \"sha256 99PgDZnzzjO63EyMRZfwIIA i OS2wDx6k 9Eo7JDKo \" crossorigin \"anonymous\" lite youtube videoid 8rrHTtUzyZA params \"modestbranding 1&rel 0&start 275&end 420\" lite youtube \"\"\" round. Kernel.gaussian 1 , digits 3 md\"\"\" We could have defined this ourselves with calls to the exponential function. \"\"\" begin G exp i^2 j^2 2 for i 2 2, j 2 2 round. G . sum G , digits 3 end md\"\"\" This is often known as Gaussian blur to emphasize the result of this operation. Adobe on Gaussian blur https www.adobe.com creativecloud photography discover gaussian blur.html . \"\"\" md\"\"\" Focus around 5 23 \"\"\" bind gparam Slider 0 9, show value true, default 1 kernel Kernel.gaussian gparam plotly surface kernel md\"\"\" Note black lines are contours \"\"\" md\"\"\" Computer Science Data Structure Offset Arrays \"\"\" kernel 0,0 kernel 2,2 M 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Z OffsetArray M, 1 1, 2 2 the indices c.I for c ∈ CartesianIndices Z Z 1, 2 md\"\"\" 2.5. Discrete vs Continuous \"\"\" md\"\"\" Some folks only like discrete objects, others continuous. The computer makes clear what many mathematicians already know, that while different language has evolved to describe discrete objects vs continuous objects, often the underlying conceptual idea is similar or the same. Here is one analogy \"\"\" md\"\"\" Blurring Kernels Integrals ≡ Sharpening Kernels Derivatives \"\"\" md\"\"\" Think about integrals vs derivatives in one dimension. If you replace f x with g x ∫ f t dt for x r ≤ t ≤ x r, that will blur or smooth out the features of f. However if you take the derivative,you will emphasize the changes, i.e., you will sharpen or \"edge detect.\" \"\"\" md\"\"\" 2.6 Respect my Boundaries \"\"\" md\"\"\" Applying the convolution on a boundary requires special thought because it is literally an edge case . Once again Grant said this so very well 2 53 4 19 \"\"\" html\"\"\" script src \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.js\" integrity \"sha256 wwYlfEzWnCf2nFlIQptfFKdUmBeH5d3G7C2352FdpWE \" crossorigin \"anonymous\" defer script link rel \"stylesheet\" href \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.css\" integrity \"sha256 99PgDZnzzjO63EyMRZfwIIA i OS2wDx6k 9Eo7JDKo \" crossorigin \"anonymous\" lite youtube videoid 8rrHTtUzyZA params \"modestbranding 1&rel 0&start 173&end 259\" lite youtube \"\"\" "},{"url":"week0/basic_syntax/","title":"basic_syntax","tags":[],"text":" A Pluto.jl notebook v0.19.25 using Markdown using InteractiveUtils md\" Get started with Julia live Before being able to run this notebook successfully locally, you will need to set up Julia and Pluto. Spring21 installation \" md\" Variables We can define a variable using ` ` assignment . Then we can use its value in other expressions \" x 4 y 2x md\"By default Julia displays the output of the last operation. You can suppress the output by adding ` ` a semicolon at the end. \" md\"We can ask what type a variable has using `typeof` \" typeof y md\" Functions\" md\"We can use a short form, one line function definition for simple functions \" f x 2 x md\"Typing the function's name gives information about the function. To call it we must use parentheses \" f f 10 md\"For longer functions we use the following syntax with the `function` keyword and `end` \" function g x, y z x y return z^2 end g 1, 2 md\" For loops\" md\"Use `for` to loop through a pre determined set of values \" let s 0 for i in 1 10 s i Equivalent to s s i end s end md\"Here, `1 10` is a range representing the numbers from 1 to 10 \" typeof 1 10 md\"Above we used a `let` block to define a new local variable `s`. But blocks of code like this are usually better inside functions, so that they can be reused. For example, we could rewrite the above as follows \" function mysum n s 0 for i in 1 n s i end return s end mysum 100 md\" Conditionals `if`\" md\"We can evaluate whether a condition is true or not by simply writing the condition \" a 3 a 5 md\"We see that conditions have a Boolean `true` or `false` value. We can then use `if` to control what we do based on that value \" if a 5 \"small\" else \"big\" end md\"\"\"Note that the `if` also returns the last value that was evaluated, in this case the string `\"small\"` or `\"big\"`, Since Pluto is reactive, changing the definition of `a` above will automatically cause this to be reevaluated \"\"\" md\" Arrays\" md\" 1D arrays `Vector`s \" md\"We can make a `Vector` 1 dimensional, or 1D array using square brackets \" v 1, 2, 3 typeof v md\"The `1` in the type shows that this is a 1D array. We access elements also using square brackets \" v 2 v 2 10 md\"Note that Pluto does not automatically update cells when you modify elements of an array, but the value does change.\" md\"A nice way to create `Vector`s following a certain pattern is to use an array comprehension \" v2 i^2 for i in 1 10 md\" 2D arrays matrices \" md\"We can make small matrices 2D arrays with square brackets too \" M 1 2 3 4 typeof M md\"The `2` in the type confirms that this is a 2D array.\" md\"This won't work for larger matrices, though. For that we can use e.g.\" zeros 5, 5 md\"Note that `zeros` gives `Float64`s by default. We can also specify a type for the elements \" zeros Int, 4, 5 md\"We can then fill in the values we want by manipulating the elements, e.g. with a `for` loop.\" md\"A nice alternative syntax to create matrices following a certain pattern is an array comprehension with a double `for` loop \" i j for i in 1 5, j in 1 6 "},{"url":"week0/plots_tutorial/","title":"plots_tutorial","tags":[],"text":" A Pluto.jl notebook v0.19.25 using Markdown using InteractiveUtils using Plots using SpecialFunctions using VegaLite, VegaDatasets using DataFrames using PlutoUI md\"\"\" Resources Plots Docs Useful Tips https docs.juliaplots.org latest basics Useful Tips Plots Docs Examples https docs.juliaplots.org latest generated gr Plot Attributes http docs.juliaplots.org latest generated attributes plot Axis Attributes http docs.juliaplots.org latest generated attributes axis Axis Color Names http juliagraphics.github.io Colors.jl stable namedcolors \"\"\" md\"\"\" Loading Time Plots loading time sucks big time. This is a known problem. We know, we know, Julia is fast, just grab some coffee .... ☕☕☕☕☕☕☕☕☕ \"\"\" md\"\"\" Hello World \"\"\" plot rand 4 md\"\"\" Adding Stuff \"\"\" begin plot rand 4 scatter rand 4 end md\"\"\" Removing Stuff \"\"\" plot legend false, axis false, grid false, ticks false md\"\"\" Lines and points \"\"\" md\"\"\" Square Aspect Ratio \"\"\" begin v rand 4 plot v, ratio 1, legend false scatter v end md\"\"\" Matrices with color heatmap yflip true places the 2,1 entry where you want it, since you want to interchange xy with ij and i runs down and y runs up. \"\"\" A 1 1000 1 1 1 1 1 1 1 heatmap A, ratio 1, yflip true, legend false, axis false, grid false, ticks false heatmap rand 10,10 , clim 0,1 , ratio 1, legend false, axis false, ticks false begin MM 0 1 0 0 0 0 1 0 0 whiteblack RGBA 1,1,1,0 , RGB 0,0,0 heatmap c whiteblack, MM, aspect ratio 1, ticks .5 3.5, lims .5,3.5 , gridalpha 1, legend false, axis false, ylabel \"i\", xlabel \"j\" end begin p plot 1 4,guideposition top end begin p.attr foreground color RGB 1,0,0 p.attr foreground color end p begin q p.series list 1 .plotattributes q.explicit linecolor green end p md\"\"\" Colors \"\"\" Colors.color names mycolors colorant\"lightslateblue\",colorant\"limegreen\",colorant\"red\" begin AA i for i 50 300, j 1 100 heatmap AA, c mycolors, clim 1,300 end md\"\"\" Area under curves \"\"\" begin y rand 10 plot y, fillrange y. 0 . .5, label \"above below 1 2\", legend topleft end begin x LinRange 0,2,100 y1 exp. x y2 exp. 1.3 . x plot x, y1, fillrange y2, fillalpha 0.35, c 1, label \"Confidence band\", legend topleft end let x 3 .01 3 areaplot x, exp. x.^2 2 √ 2π ,alpha .25,legend false end begin M 1 2 3 7 8 9 4 5 6 0 .5 1.5 areaplot 1 3, M, seriescolor red green blue , fillalpha 0.2 0.3 0.4 end let f x exp x^2 2 √ 2π δ .01 plot x √2 . erfinv. 2 . δ 2 δ 1 . 1 areaplot x, f. x , seriescolor red, blue , legend false plot f, x,c black end md\"\"\" Shapes \"\"\" begin rectangle w, h, x, y Shape x . 0,w,w,0 , y . 0,0,h,h circle r,x,y θ LinRange 0,2π,500 x. r. cos. θ , y. r. sin. θ end begin plot circle 5,0,0 , ratio 1, c red, fill true plot rectangle 5 √2,5 √2, 2.5 √2, 2.5 √2 ,c white,fill true,legend false end md\"\"\" Editing Plots manually \"\"\" pl plot 1 4, 1, 4, 9, 16 pl.attr pl.series list 1 pl size 300,200 pl md\"\"\" VegaLite \"\"\" vlplot point, rand 10 , rand 10 begin dataset \"zipcodes\" | vlplot circle, width 500, height 300, transform calculate \"substring datum.zip code, 0, 1 \", as digit , projection type albersUsa , longitude longitude, latitude latitude, size value 1 , color \"digit n\" end d DataFrame dataset \"zipcodes\" scatter d , longitude , d , latitude , m ., ms 1, xlim 150, 50 , ylim 20,55 begin struct RankOneMatrix T v AbstractVector T w AbstractVector T end end RankOneMatrix rand 3 , rand 3 methods RankOneMatrix begin xx .1 .1 1 plot xx.^2, xaxis log, yaxis log end begin plot exp. x , yaxis log end TableOfContents "}]